--[[

--]] 
URL     = require("./libs/url")
JSON    = require("./libs/dkjson")
serpent = require("libs/serpent")
json = require('libs/json')
Redis = require('libs/redis').connect('127.0.0.1', 6379)
http  = require("socket.http")
https   = require("ssl.https")
SshId = io.popen("echo $SSH_CLIENT ︙ awk '{ print $1}'"):read('*a')
Merotele = require 'MeroTele'
local FileInformation = io.open("./Information.lua","r")
if not FileInformation then
if not Redis:get(SshId.."Info:Redis:Token") then
io.write('\27[1;31mارسل لي توكن البوت الان \nSend Me a Bot Token Now ↡\n\27[0;39;49m')
local TokenBot = io.read()
if TokenBot and TokenBot:match('(%d+):(.*)') then
local url , res = https.request('https://api.telegram.org/bot'..TokenBot..'/getMe')
local Json_Info = JSON.decode(url)
if res ~= 200 then
print('\27[1;34mعذرا توكن البوت خطأ تحقق منه وارسله مره اخره \nBot Token is Wrong\n')
else
io.write('\27[1;34mتم حفظ التوكن بنجاح \nThe token been saved successfully \n\27[0;39;49m')
TheTokenBot = TokenBot:match("(%d+)")
os.execute('sudo rm -fr .CallBack-Bot/'..TheTokenBot)
Redis:set(SshId.."Info:Redis:Token",TokenBot)
Redis:set(SshId.."Info:Redis:Token:User",Json_Info.result.username)
end 
else
print('\27[1;34mلم يتم حفظ التوكن جرب مره اخره \nToken not saved, try again')
end 
os.execute('lua5.2 LiOn.lua')
end
if not Redis:get(SshId.."Info:Redis:User") then
io.write('\27[1;31mارسل معرف المطور الاساسي الان \nDeveloper UserName saved ↡\n\27[0;39;49m')
local UserSudo = io.read():gsub('@','')
if UserSudo ~= '' then
io.write('\n\27[1;34mتم حفظ معرف المطور \nDeveloper UserName saved \n\n\27[0;39;49m')
Redis:set(SshId.."Info:Redis:User",UserSudo)
else
print('\n\27[1;34mلم يتم حفظ معرف المطور الاساسي \nDeveloper UserName not saved\n')
end 
os.execute('lua5.2 LiOn.lua')
end
if not Redis:get(SshId.."Info:Redis:User:ID") then
io.write('\27[1;31mارسل ايدي المطور الاساسي الان \nDeveloper ID saved ↡\n\27[0;39;49m')
local UserId = io.read()
if UserId and UserId:match('(%d+)') then
io.write('\n\27[1;34mتم حفظ ايدي المطور \nDeveloper ID saved \n\n\27[0;39;49m')
Redis:set(SshId.."Info:Redis:User:ID",UserId)
else
print('\n\27[1;34mلم يتم حفظ ايدي المطور الاساسي \nDeveloper ID not saved\n')
end 
os.execute('lua5.2 LiOn.lua')
end
local Informationlua = io.open("Information.lua", 'w')
Informationlua:write([[
return {
Token = "]]..Redis:get(SshId.."Info:Redis:Token")..[[",
UserBot = "]]..Redis:get(SshId.."Info:Redis:Token:User")..[[",
UserSudo = "]]..Redis:get(SshId.."Info:Redis:User")..[[",
SudoId = ]]..Redis:get(SshId.."Info:Redis:User:ID")..[[
}
]])
Informationlua:close()
local LiOn = io.open("LiOn", 'w')
LiOn:write([[
cd $(cd $(dirname $0); pwd)
while(true) do
sudo lua5.2 LiOn.lua
done
]])
LiOn:close()
local Run = io.open("Run", 'w')
Run:write([[
cd $(cd $(dirname $0); pwd)
while(true) do
screen -S ]]..Redis:get(SshId.."Info:Redis:Token:User")..[[ -X kill
screen -S ]]..Redis:get(SshId.."Info:Redis:Token:User")..[[ ./LiOn
done
]])
Run:close()
Redis:del(SshId.."Info:Redis:User:ID");Redis:del(SshId.."Info:Redis:User");Redis:del(SshId.."Info:Redis:Token:User");Redis:del(SshId.."Info:Redis:Token")
os.execute('rm -rf luatele.zip ;chmod +x LiOn;chmod +x Run;./Run')
end
Information = dofile('./Information.lua')
Sudo_Id = Information.SudoId
UserSudo = Information.UserSudo
Token = Information.Token
UserBot = Information.UserBot
LiOn = Token:match("(%d+)")
os.execute('sudo rm -fr .CallBack-Bot/'..LiOn)
luatele = Merotele.set_config{api_id=2692371,api_hash='fe85fff033dfe0f328aeb02b4f784930',session_name=LiOn,token=Token}
function var(value)  
print(serpent.block(value, {comment=false}))   
end 
function chat_type(ChatId)
if ChatId then
local id = tostring(ChatId)
if id:match("-100(%d+)") then
Chat_Type = 'GroupBot' 
elseif id:match("^(%d+)") then
Chat_Type = 'UserBot' 
else
Chat_Type = 'GroupBot' 
end
end
return Chat_Type
end
function The_ControllerAll(UserId)
ControllerAll = false
local ListSudos = {Sudo_Id,147982809}
for k, v in pairs(ListSudos) do
if tonumber(UserId) == tonumber(v) then
ControllerAll = true
end
if Redis:sismember(LiOn.."LiOn:ControlAll:Groups",UserId) then
ControllerAll = true
end
end
return ControllerAll
end
function mderall(msg)
mderall = false
local statuse = Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id)
if statuse then
mderall = true
end
return mderall
end
function Controllerbanall(ChatId,UserId)
Status = 0
local Controll2 = Redis:sismember(LiOn.."LiOn:ControlAll:Groups",UserId)
DevelopersQ = Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",UserId) 
if UserId == 147982809 then
Status = true
elseif UserId == 147982809 then
Status = true
elseif UserId == Sudo_Id then  
Status = true
elseif UserId == LiOn then
Status = true
elseif Controll2 then
Status = true
elseif DevelopersQ then
Status = true
else
Status = false
end
return Status
end
function GetByName(msg)
local UserInfo = luatele.getUser(msg.sender_id.user_id)
Name_py = '*❆︙بواسطه :* ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return Name_py
end
function Controller(ChatId,UserId)
Status = 0
local Controll2 = Redis:sismember(LiOn.."LiOn:ControlAll:Groups",UserId)
Developers = Redis:sismember(LiOn.."LiOn:Developers:Groups",UserId) 
DevelopersQ = Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",UserId) 
TheBasicsQ = Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..ChatId,UserId) 
TheBasics = Redis:sismember(LiOn.."LiOn:TheBasics:Group"..ChatId,UserId) 
Originators = Redis:sismember(LiOn.."LiOn:Originators:Group"..ChatId,UserId)
Managers = Redis:sismember(LiOn.."LiOn:Managers:Group"..ChatId,UserId)
Addictive = Redis:sismember(LiOn.."LiOn:Addictive:Group"..ChatId,UserId)
Distinguished = Redis:sismember(LiOn.."LiOn:Distinguished:Group"..ChatId,UserId)
MalekAsase = Redis:sismember(LiOn.."LiOn:MalekAsase:Group"..ChatId,UserId)
StatusMember = luatele.getChatMember(ChatId,UserId).status.Merotele
if UserId == 147982809 then
Status = 'مطـور السـورس ⚡️'
elseif UserId == 147982809 then
Status = 'مطـور السـورس ⚡️'
elseif UserId == Sudo_Id then  
Status = 'المطـور الاساسي ⚡️'
elseif Controll2 then
Status = 'المطـور الاساسي ⚡️'
elseif UserId == LiOn then
Status = 'البوت'
elseif DevelopersQ then
Status = 'المطـور الثانوي ⚡️'
elseif Developers then
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or Redis:get(LiOn.."LiOn:Developer:Bot:Reply"..ChatId) or 'المطـــور ⚡️'
elseif MalekAsase then
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or Redis:get(LiOn.."LiOn:PresidentQ:Group:Reply"..ChatId) or  'المــــــالك 🌟'
elseif TheBasicsQ then
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or Redis:get(LiOn.."LiOn:PresidentQ:Group:Reply"..ChatId) or  'المــــــالك 🌟'
elseif TheBasics then
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or Redis:get(LiOn.."LiOn:President:Group:Reply"..ChatId) or 'المنشئ الاساسي 🌟'
elseif Originators then
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or Redis:get(LiOn.."LiOn:Constructor:Group:Reply"..ChatId) or 'المنشــىء 🌟'
elseif Managers then
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or Redis:get(LiOn.."LiOn:Manager:Group:Reply"..ChatId) or 'المـــــدير 🌟'
elseif Addictive then
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or Redis:get(LiOn.."LiOn:Admin:Group:Reply"..ChatId) or 'الادمـــــن 🌟'
elseif StatusMember == "chatMemberStatusCreator" then
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or 'مالك المجموعه'
elseif StatusMember == "chatMemberStatusAdministrator" then
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or 'مشرف المجموعه'
elseif Distinguished then
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or Redis:get(LiOn.."LiOn:Vip:Group:Reply"..ChatId) or 'المميــز ⭐️'
else
Status = Redis:get(LiOn..'LiOn:SetRt'..ChatId..':'..UserId) or Redis:get(LiOn.."LiOn:Mempar:Group:Reply"..ChatId) or 'العضـو'
end  
return Status
end 
function Controller_Num(Num)
Status = 0
if tonumber(Num) == 1 then  
Status = 'المطور الاساسي'
elseif tonumber(Num) == 2 then  
Status = 'المطور الثانوي'
elseif tonumber(Num) == 3 then  
Status = 'المطور'
elseif tonumber(Num) == 4 then  
Status = 'المنشئ الاساسي'
elseif tonumber(Num) == 5 then  
Status = 'المنشئ'
elseif tonumber(Num) == 6 then  
Status = 'المدير'
elseif tonumber(Num) == 7 then  
Status = 'الادمن'
elseif tonumber(Num) == 8 then  
Status = 'المالك'
else
Status = 'المميز'
end  
return Status
end 
function FlterBio(Bio)
local Bio = tostring(Bio):lower()
Bio = Bio:gsub("https://[%a%d_]+",'') 
Bio = Bio:gsub("http://[%a%d_]+",'') 
Bio = Bio:gsub("telegram.dog/-[%a%d_]+",'') 
Bio = Bio:gsub("telegram.me/+[%a%d_]+",'') 
Bio = Bio:gsub("t.me/+[%a%d_]+",'') 
Bio = Bio:gsub("[%a%d_]+.pe[%a%d_]+",'') 
Bio = Bio:gsub("@[%a%d_]+",'')
Bio = Bio:gsub("#[%a%d_]+",'')
return Bio
end
function GetAdminsSlahe(ChatId,UserId,user2,MsgId,t1,t2,t3,t4,t5,t6)
local GetMemberStatus = luatele.getChatMember(ChatId,user2).status
if GetMemberStatus.can_change_info then
change_info = '❬ ✔️ ❭' else change_info = '❬ ❌ ❭'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '❬ ✔️ ❭' else delete_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_invite_users then
invite_users = '❬ ✔️ ❭' else invite_users = '❬ ❌ ❭'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '❬ ✔️ ❭' else pin_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '❬ ✔️ ❭' else restrict_members = '❬ ❌ ❭'
end
if GetMemberStatus.can_promote_members then
promote = '❬ ✔️ ❭' else promote = '❬ ❌ ❭'
end
local reply_markupp = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- تغيير معلومات المجموعه : '..(t1 or change_info), data = UserId..'/groupNum1//'..user2}, 
},
{
{text = '- تثبيت الرسائل : '..(t2 or pin_messages), data = UserId..'/groupNum2//'..user2}, 
},
{
{text = '- حظر المستخدمين : '..(t3 or restrict_members), data = UserId..'/groupNum3//'..user2}, 
},
{
{text = '- دعوة المستخدمين : '..(t4 or invite_users), data = UserId..'/groupNum4//'..user2}, 
},
{
{text = '- مسح الرسائل : '..(t5 or delete_messages), data = UserId..'/groupNum5//'..user2}, 
},
{
{text = '- اضافة مشرفين : '..(t6 or promote), data = UserId..'/groupNum6//'..user2}, 
},
{
{text = '- اخفاء الامر ', data ='/delAmr'}
},
}
}
luatele.editMessageText(ChatId,MsgId,"❆︙ صلاحيات الادمن - ", 'md', false, false, reply_markupp)
end
function editrtp(chat,user,msgid,useri)
if Redis:sismember(LiOn.."LiOn:BanGroup:Group"..chat,useri) then
BanGroupz = "✔"
else
BanGroupz = "❌"
end
if Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..chat,useri) then
SilentGroupz = "✔"
else
SilentGroupz = "❌"
end
if Redis:sismember(LiOn.."LiOn:TheBasics:Group"..chat,useri)  then
TheBasicsz = "✔"
else
TheBasicsz = "❌"
end
if Redis:sismember(LiOn.."LiOn:Originators:Group"..chat,useri) then
Originatorsz = "✔"
else
Originatorsz = "❌"
end
if Redis:sismember(LiOn.."LiOn:Managers:Group"..chat,useri) then
Managersz = "✔"
else
Managersz = "❌"
end
if Redis:sismember(LiOn.."LiOn:Addictive:Group"..chat,useri) then
Addictivez = "✔"
else
Addictivez = "❌"
end
if Redis:sismember(LiOn.."LiOn:Distinguished:Group"..chat,useri) then
Distinguishedz = "✔"
else
Distinguishedz = "❌"
end
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = '- منشئ اساسي : '..TheBasicsz, data =user..'/statusTheBasicsz/'..useri},{text = '- منشئ : '..Originatorsz, data =user..'/statusOriginatorsz/'..useri},
},
{
{text = '- مدير : '..Managersz, data =user..'/statusManagersz/'..useri},{text = '- ادمن : '..Addictivez, data =user..'/statusAddictivez/'..useri},
},
{
{text = '- مميز : '..Distinguishedz, data =user..'/statusDistinguishedz/'..useri},
},
{
{text = '- الحظر : '..BanGroupz, data =user..'/statusban/'..useri},{text = '- الكتم : '..SilentGroupz, data =user..'/statusktm/'..useri},
},
{
{text = '- عضو  ', data =user..'/statusmem/'..useri},
},
{
{text = '- اخفاء الامر ', data ='/delAmr1'}
}
}
}
return luatele.editMessageText(chat,msgid,'*\n❆︙تحكم برتب الشخص .*', 'md', true, false, reply_markup)
end
function GetAdminsNum(ChatId,UserId)
local GetMemberStatus = luatele.getChatMember(ChatId,UserId).status
if GetMemberStatus.can_change_info then
change_info = 1 else change_info = 0
end
if GetMemberStatus.can_delete_messages then
delete_messages = 1 else delete_messages = 0
end
if GetMemberStatus.can_invite_users then
invite_users = 1 else invite_users = 0
end
if GetMemberStatus.can_pin_messages then
pin_messages = 1 else pin_messages = 0
end
if GetMemberStatus.can_restrict_members then
restrict_members = 1 else restrict_members = 0
end
if GetMemberStatus.can_promote_members then
promote = 1 else promote = 0
end
return{
promote = promote,
restrict_members = restrict_members,
invite_users = invite_users,
pin_messages = pin_messages,
delete_messages = delete_messages,
change_info = change_info
}
end
function GetSetieng(ChatId)
if Redis:get(LiOn.."LiOn:Lock:phshar"..ChatId) then    
alphsar = "✔️"
else 
alphsar = "❌"    
end
if Redis:get(LiOn.."LiOn:Lock:alkfr"..ChatId) then    
alkfr = "✔️"
else 
alkfr = "❌"    
end
if Redis:get(LiOn.."LiOn:Lock:tphlesh"..ChatId) then    
tphlesh = "✔️"
else 
tphlesh = "❌"    
end
if Redis:get(LiOn.."LiOn:Lock:farsia"..ChatId) then    
farsia = "✔️"
else 
farsia = "❌"    
end

if Redis:get(LiOn.."LiOn:lockpin"..ChatId) then    
lock_pin = "✔️"
else 
lock_pin = "❌"    
end
if Redis:get(LiOn.."LiOn:Lock:tagservr"..ChatId) then    
lock_tagservr = "✔️"
else 
lock_tagservr = "❌"
end
if Redis:get(LiOn.."LiOn:Lock:text"..ChatId) then    
lock_text = "✔️"
else 
lock_text = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:AddMempar"..ChatId) == "kick" then
lock_add = "✔️"
else 
lock_add = "❌ "    
end    
if Redis:get(LiOn.."LiOn:Lock:Join"..ChatId) == "kick" then
lock_join = "✔️"
else 
lock_join = "❌ "    
end    
if Redis:get(LiOn.."LiOn:Lock:edit"..ChatId) then    
lock_edit = "✔️"
else 
lock_edit = "❌ "    
end
if Redis:get(LiOn.."LiOn:Chek:Welcome"..ChatId) then
welcome = "✔️"
else 
welcome = "❌ "    
end
if Redis:hget(LiOn.."LiOn:Spam:Group:User"..ChatId, "Spam:User") == "kick" then     
flood = "بالطرد "     
elseif Redis:hget(LiOn.."LiOn:Spam:Group:User"..ChatId,"Spam:User") == "keed" then     
flood = "بالتقييد "     
elseif Redis:hget(LiOn.."LiOn:Spam:Group:User"..ChatId,"Spam:User") == "mute" then     
flood = "بالكتم "           
elseif Redis:hget(LiOn.."LiOn:Spam:Group:User"..ChatId,"Spam:User") == "del" then     
flood = "✔️"
else     
flood = "❌ "     
end
if Redis:get(LiOn.."LiOn:Lock:Photo"..ChatId) == "del" then
lock_photo = "✔️" 
elseif Redis:get(LiOn.."LiOn:Lock:Photo"..ChatId) == "ked" then 
lock_photo = "بالتقييد "   
elseif Redis:get(LiOn.."LiOn:Lock:Photo"..ChatId) == "ktm" then 
lock_photo = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Photo"..ChatId) == "kick" then 
lock_photo = "بالطرد "   
else
lock_photo = "❌ "   
end    
if Redis:get(LiOn.."LiOn:Lock:Contact"..ChatId) == "del" then
lock_phon = "✔️" 
elseif Redis:get(LiOn.."LiOn:Lock:Contact"..ChatId) == "ked" then 
lock_phon = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:Contact"..ChatId) == "ktm" then 
lock_phon = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Contact"..ChatId) == "kick" then 
lock_phon = "بالطرد "    
else
lock_phon = "❌ "    
end    
if Redis:get(LiOn.."LiOn:Lock:Link"..ChatId) == "del" then
lock_links = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Link"..ChatId) == "ked" then
lock_links = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:Link"..ChatId) == "ktm" then
lock_links = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Link"..ChatId) == "kick" then
lock_links = "بالطرد "    
else
lock_links = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:Cmd"..ChatId) == "del" then
lock_cmds = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Cmd"..ChatId) == "ked" then
lock_cmds = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:Cmd"..ChatId) == "ktm" then
lock_cmds = "بالكتم "   
elseif Redis:get(LiOn.."LiOn:Lock:Cmd"..ChatId) == "kick" then
lock_cmds = "بالطرد "    
else
lock_cmds = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:User:Name"..ChatId) == "del" then
lock_user = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:User:Name"..ChatId) == "ked" then
lock_user = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:User:Name"..ChatId) == "ktm" then
lock_user = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:User:Name"..ChatId) == "kick" then
lock_user = "بالطرد "    
else
lock_user = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:hashtak"..ChatId) == "del" then
lock_hash = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:hashtak"..ChatId) == "ked" then 
lock_hash = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:hashtak"..ChatId) == "ktm" then 
lock_hash = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:hashtak"..ChatId) == "kick" then 
lock_hash = "بالطرد "    
else
lock_hash = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:vico"..ChatId) == "del" then
lock_muse = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:vico"..ChatId) == "ked" then 
lock_muse = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:vico"..ChatId) == "ktm" then 
lock_muse = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:vico"..ChatId) == "kick" then 
lock_muse = "بالطرد "    
else
lock_muse = "❌ "    
end 
if Redis:get(LiOn.."LiOn:Lock:Video"..ChatId) == "del" then
lock_ved = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Video"..ChatId) == "ked" then 
lock_ved = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:Video"..ChatId) == "ktm" then 
lock_ved = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Video"..ChatId) == "kick" then 
lock_ved = "بالطرد "    
else
lock_ved = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:Animation"..ChatId) == "del" then
lock_gif = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Animation"..ChatId) == "ked" then 
lock_gif = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:Animation"..ChatId) == "ktm" then 
lock_gif = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Animation"..ChatId) == "kick" then 
lock_gif = "بالطرد "    
else
lock_gif = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:Sticker"..ChatId) == "del" then
lock_ste = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Sticker"..ChatId) == "ked" then 
lock_ste = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:Sticker"..ChatId) == "ktm" then 
lock_ste = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Sticker"..ChatId) == "kick" then 
lock_ste = "بالطرد "    
else
lock_ste = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:geam"..ChatId) == "del" then
lock_geam = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:geam"..ChatId) == "ked" then 
lock_geam = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:geam"..ChatId) == "ktm" then 
lock_geam = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:geam"..ChatId) == "kick" then 
lock_geam = "بالطرد "    
else
lock_geam = "❌ "    
end    
if Redis:get(LiOn.."LiOn:Lock:vico"..ChatId) == "del" then
lock_vico = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:vico"..ChatId) == "ked" then 
lock_vico = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:vico"..ChatId) == "ktm" then 
lock_vico = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:vico"..ChatId) == "kick" then 
lock_vico = "بالطرد "    
else
lock_vico = "❌ "    
end    
if Redis:get(LiOn.."LiOn:Lock:Keyboard"..ChatId) == "del" then
lock_inlin = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Keyboard"..ChatId) == "ked" then 
lock_inlin = "بالتقييد "
elseif Redis:get(LiOn.."LiOn:Lock:Keyboard"..ChatId) == "ktm" then 
lock_inlin = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Keyboard"..ChatId) == "kick" then 
lock_inlin = "بالطرد "
else
lock_inlin = "❌ "
end
if Redis:get(LiOn.."LiOn:Lock:forward"..ChatId) == "del" then
lock_fwd = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:forward"..ChatId) == "ked" then 
lock_fwd = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:forward"..ChatId) == "ktm" then 
lock_fwd = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:forward"..ChatId) == "kick" then 
lock_fwd = "بالطرد "    
else
lock_fwd = "❌ "    
end    
if Redis:get(LiOn.."LiOn:Lock:Document"..ChatId) == "del" then
lock_file = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Document"..ChatId) == "ked" then 
lock_file = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:Document"..ChatId) == "ktm" then 
lock_file = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Document"..ChatId) == "kick" then 
lock_file = "بالطرد "    
else
lock_file = "❌ "    
end    
if Redis:get(LiOn.."LiOn:Lock:Unsupported"..ChatId) == "del" then
lock_self = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Unsupported"..ChatId) == "ked" then 
lock_self = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:Unsupported"..ChatId) == "ktm" then 
lock_self = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Unsupported"..ChatId) == "kick" then 
lock_self = "بالطرد "    
else
lock_self = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:Bot:kick"..ChatId) == "del" then
lock_bots = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Bot:kick"..ChatId) == "ked" then
lock_bots = "بالتقييد "   
elseif Redis:get(LiOn.."LiOn:Lock:Bot:kick"..ChatId) == "kick" then
lock_bots = "بالطرد "    
else
lock_bots = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:Markdaun"..ChatId) == "del" then
lock_mark = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Markdaun"..ChatId) == "ked" then 
lock_mark = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:Markdaun"..ChatId) == "ktm" then 
lock_mark = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Markdaun"..ChatId) == "kick" then 
lock_mark = "بالطرد "    
else
lock_mark = "❌ "    
end
if Redis:get(LiOn.."LiOn:Lock:Spam"..ChatId) == "del" then    
lock_spam = "✔️"
elseif Redis:get(LiOn.."LiOn:Lock:Spam"..ChatId) == "ked" then 
lock_spam = "بالتقييد "    
elseif Redis:get(LiOn.."LiOn:Lock:Spam"..ChatId) == "ktm" then 
lock_spam = "بالكتم "    
elseif Redis:get(LiOn.."LiOn:Lock:Spam"..ChatId) == "kick" then 
lock_spam = "بالطرد "    
else
lock_spam = "❌ "    
end        
return{
lock_pin = lock_pin,
lock_tagservr = lock_tagservr,
lock_text = lock_text,
lock_add = lock_add,
lock_join = lock_join,
lock_edit = lock_edit,
flood = flood,
lock_photo = lock_photo,
lock_phon = lock_phon,
lock_links = lock_links,
lock_cmds = lock_cmds,
lock_mark = lock_mark,
lock_user = lock_user,
lock_hash = lock_hash,
lock_muse = lock_muse,
lock_ved = lock_ved,
lock_gif = lock_gif,
lock_ste = lock_ste,
lock_geam = lock_geam,
lock_vico = lock_vico,
lock_inlin = lock_inlin,
lock_fwd = lock_fwd,
lock_file = lock_file,
lock_self = lock_self,
lock_bots = lock_bots,
lock_spam = lock_spam,
farsia = farsia,
tphlesh = tphlesh,
alkfr = alkfr,
alphsar = alphsar
}
end
function Total_message(Message)  
local MsgText = ''  
if tonumber(Message) < 100 then 
MsgText = 'سايق مخده 😹' 
elseif tonumber(Message) < 200 then 
MsgText = 'الله بالخير 👋'
elseif tonumber(Message) < 400 then 
MsgText = 'عفيه اتفاعل 😽' 
elseif tonumber(Message) < 700 then 
MsgText = 'بدأ يتحسن 😐' 
elseif tonumber(Message) < 1200 then 
MsgText = 'شكد تحجي 😒' 
elseif tonumber(Message) < 2000 then 
MsgText = 'استمر بطل 😍' 
elseif tonumber(Message) < 3500 then 
MsgText = 'تفاعل غنبله 🙂'  
elseif tonumber(Message) < 4000 then 
MsgText = 'استمر يعسل 🥳' 
elseif tonumber(Message) < 4500 then 
MsgText = 'جيد جدا ♥️' 
elseif tonumber(Message) < 5500 then 
MsgText = 'ممتاز جدا 🥰' 
elseif tonumber(Message) < 7000 then 
MsgText = 'مــلــک 💯😻' 
elseif tonumber(Message) < 9500 then 
MsgText = 'اسطورة التفاعل❤️' 
elseif tonumber(Message) < 10000000000 then 
MsgText = 'ملك التلكرام 💖'  
end 
return MsgText 
end
function Total_groups(Message)  
local MsgText = ''  
print(Message)
if tonumber(Message) < 200 then 
MsgText = 'سايق مخده 😹' 
elseif tonumber(Message) < 400 then 
MsgText = 'الله بالخير 👋'
elseif tonumber(Message) < 600 then 
MsgText = 'عفيه اتفاعل 😽' 
elseif tonumber(Message) < 800 then 
MsgText = 'بدأ يتحسن 😐' 
elseif tonumber(Message) < 1000 then 
MsgText = 'شكد تحجي 😒' 
elseif tonumber(Message) < 1300 then 
MsgText = 'استمر بطل 😍' 
elseif tonumber(Message) < 1600 then 
MsgText = 'تفاعل غنبله 🙂'  
elseif tonumber(Message) < 1800 then 
MsgText = 'استمر يعسل 🥳' 
elseif tonumber(Message) < 2200 then 
MsgText = 'جيد جدا ♥️' 
elseif tonumber(Message) < 2600 then 
MsgText = 'ممتاز جدا 🥰' 
elseif tonumber(Message) < 3000 then 
MsgText = 'مــلــک 💯😻' 
elseif tonumber(Message) < 3600 then 
MsgText = 'اسطورة التفاعل❤️' 
elseif tonumber(Message) < 10000000000 then 
MsgText = 'ملك التلكرام 💖'  
end 
return MsgText 
end
function TotalNsba(Message)  
local MsgText = ''  
print(Message)
if tonumber(Message) < 200 then 
MsgText = "10"
elseif tonumber(Message) < 400 then 
MsgText = "20"
elseif tonumber(Message) < 600 then 
MsgText = "25"
elseif tonumber(Message) < 800 then 
MsgText = "33"
elseif tonumber(Message) < 1000 then 
MsgText = "45"
elseif tonumber(Message) < 1300 then 
MsgText = "52"
elseif tonumber(Message) < 1600 then 
MsgText = "67"
elseif tonumber(Message) < 1800 then 
MsgText = "70"
elseif tonumber(Message) < 2200 then 
MsgText = "75"
elseif tonumber(Message) < 2600 then 
MsgText = "80"
elseif tonumber(Message) < 3000 then 
MsgText = "85"
elseif tonumber(Message) < 3600 then 
MsgText = "88"
elseif tonumber(Message) < 4000 then 
MsgText = "89"
elseif tonumber(Message) < 5000 then 
MsgText = "90"
elseif tonumber(Message) < 6000 then 
MsgText = "92"
elseif tonumber(Message) < 8000 then 
MsgText = "93"
elseif tonumber(Message) < 10000 then 
MsgText = "94"
elseif tonumber(Message) < 11000 then 
MsgText = "95"
elseif tonumber(Message) < 12000 then 
MsgText = "96"
elseif tonumber(Message) < 11800 then 
MsgText = "97"
elseif tonumber(Message) < 14000 then 
MsgText = "98"
elseif tonumber(Message) < 30000 then 
MsgText = "99"
elseif tonumber(Message) < 10000000000 then 
MsgText = "100"
end 
return MsgText 
end

function Getpermissions(ChatId)
local Get_Chat = luatele.getChat(ChatId)
if Get_Chat.permissions.can_add_web_page_previews then
web = true else web = false
end
if Get_Chat.permissions.can_change_info then
info = true else info = false
end
if Get_Chat.permissions.can_invite_users then
invite = true else invite = false
end
if Get_Chat.permissions.can_pin_messages then
pin = true else pin = false
end
if Get_Chat.permissions.can_send_media_messages then
media = true else media = false
end
if Get_Chat.permissions.can_send_messages then
messges = true else messges = false
end
if Get_Chat.permissions.can_send_other_messages then
other = true else other = false
end
if Get_Chat.permissions.can_send_polls then
polls = true else polls = false
end

return{
web = web,
info = info,
invite = invite,
pin = pin,
media = media,
messges = messges,
other = other,
polls = polls
}
end
function Get_permissions(ChatId,UserId,MsgId)
local Get_Chat = luatele.getChat(ChatId)
if Get_Chat.permissions.can_add_web_page_previews then
web = '❬ ✔️ ❭' else web = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_change_info then
info = '❬ ✔️ ❭' else info = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_invite_users then
invite = '❬ ✔️ ❭' else invite = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_pin_messages then
pin = '❬ ✔️ ❭' else pin = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_media_messages then
media = '❬ ✔️ ❭' else media = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_messages then
messges = '❬ ✔️ ❭' else messges = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_other_messages then
other = '❬ ✔️ ❭' else other = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_polls then
polls = '❬ ✔️ ❭' else polls = '❬ ❌ ❭'
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- ارسال الويب : '..web, data = UserId..'/web'}, 
},
{
{text = '- تغيير معلومات المجموعه : '..info, data = UserId.. '/info'}, 
},
{
{text = '- اضافه مستخدمين : '..invite, data = UserId.. '/invite'}, 
},
{
{text = '- تثبيت الرسائل : '..pin, data = UserId.. '/pin'}, 
},
{
{text = '- ارسال الميديا : '..media, data = UserId.. '/media'}, 
},
{
{text = '- ارسال الرسائل : .'..messges, data = UserId.. '/messges'}, 
},
{
{text = '- اضافه البوتات : '..other, data = UserId.. '/other'}, 
},
{
{text = '- ارسال استفتاء : '..polls, data = UserId.. '/polls'}, 
},
{
{text = '- اخفاء الامر ', data ='/delAmr'}
},
}
}
luatele.editMessageText(ChatId,MsgId,"❆︙ صلاحيات المجموعه - ", 'md', false, false, reply_markup)
end
function Statusrestricted(ChatId,UserId)
return{
KtmAll = Redis:sismember(LiOn.."LiOn:KtmAll:Groups",UserId) ,
BanAll = Redis:sismember(LiOn.."LiOn:BanAll:Groups",UserId) ,
BanGroup = Redis:sismember(LiOn.."LiOn:BanGroup:Group"..ChatId,UserId) ,
SilentGroup = Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..ChatId,UserId)
}
end
function Reply_Status(UserId,TextMsg)
local UserInfo = luatele.getUser(UserId)
for Name_User in string.gmatch(UserInfo.first_name, "[^%s]+" ) do
UserInfo.first_name = Name_User
break
end
if UserInfo.username then
UserInfousername = '['..UserInfo.first_name..'](t.me/'..UserInfo.username..')'
else
UserInfousername = '['..UserInfo.first_name..'](tg://user?id='..UserId..')'
end
return {
Lock     = '*— — — — — — — — —\n❆︙بواسطه ← *'..UserInfousername..'\n*'..TextMsg..'\n❆︙خاصيه المسح *',
unLock   = '*— — — — — — — — —\n❆︙بواسطه ← *'..UserInfousername..'\n'..TextMsg,
lockKtm  = '*— — — — — — — — —\n❆︙بواسطه ← *'..UserInfousername..'\n*'..TextMsg..'\n❆︙خاصيه الكتم *',
lockKid  = '*- — — — — — — — — —\n❆︙بواسطه ← *'..UserInfousername..'\n*'..TextMsg..'\n❆︙خاصيه التقييد *',
lockKick = '*— — — — — — — — —\n❆︙بواسطه ← *'..UserInfousername..'\n*'..TextMsg..'\n❆︙خاصيه الطرد *',
Reply    = '*— — — — — — — — —\n❆︙المستخدم ← *'..UserInfousername..'\n*'..TextMsg..'*'
}
end
function StatusCanOrNotCan(ChatId,UserId)
Status = nil
local Controll2 = Redis:sismember(LiOn.."LiOn:ControlAll:Groups",UserId)
DevelopersQ = Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",UserId) 
Developers = Redis:sismember(LiOn.."LiOn:Developers:Groups",UserId) 
TheBasicsQ = Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..ChatId,UserId) 
TheBasics = Redis:sismember(LiOn.."LiOn:TheBasics:Group"..ChatId,UserId) 
Originators = Redis:sismember(LiOn.."LiOn:Originators:Group"..ChatId,UserId)
Managers = Redis:sismember(LiOn.."LiOn:Managers:Group"..ChatId,UserId)
Addictive = Redis:sismember(LiOn.."LiOn:Addictive:Group"..ChatId,UserId)
Distinguished = Redis:sismember(LiOn.."LiOn:Distinguished:Group"..ChatId,UserId)
StatusMember = luatele.getChatMember(ChatId,UserId).status.Merotele
MalekAsase = Redis:sismember(LiOn.."LiOn:MalekAsase:Group"..ChatId,UserId)
if UserId == 147982809 then
Status = true
elseif UserId == 147982809 then
Status = true
elseif UserId == Sudo_Id then  
Status = true
elseif Controll2 then
Status = true
elseif UserId == LiOn then
Status = true
elseif DevelopersQ then
Status = true
elseif Developers then
Status = true
elseif MalekAsase then
Status = true
elseif TheBasicsQ then
Status = true
elseif TheBasics then
Status = true
elseif Originators then
Status = true
elseif Managers then
Status = true
elseif Addictive then
Status = true
elseif Distinguished then
Status = true
else
Status = false
end  
return Status
end 
function StatusSilent(ChatId,UserId)
Status = nil
local Controll2 = Redis:sismember(LiOn.."LiOn:ControlAll:Groups",UserId)
DevelopersQ = Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",UserId) 
Developers = Redis:sismember(LiOn.."LiOn:Developers:Groups",UserId) 
TheBasicsQ = Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..ChatId,UserId) 
TheBasics = Redis:sismember(LiOn.."LiOn:TheBasics:Group"..ChatId,UserId) 
Originators = Redis:sismember(LiOn.."LiOn:Originators:Group"..ChatId,UserId)
Managers = Redis:sismember(LiOn.."LiOn:Managers:Group"..ChatId,UserId)
Addictive = Redis:sismember(LiOn.."LiOn:Addictive:Group"..ChatId,UserId)
Distinguished = Redis:sismember(LiOn.."LiOn:Distinguished:Group"..ChatId,UserId)
StatusMember = luatele.getChatMember(ChatId,UserId).status.Merotele
MalekAsase = Redis:sismember(LiOn.."LiOn:MalekAsase:Group"..ChatId,UserId)
if UserId == 147982809 then
Status = true
elseif UserId == 147982809 then
Status = true
elseif UserId == Sudo_Id then    
Status = true
elseif Controll2 then
Status = true
elseif UserId == LiOn then
Status = true
elseif DevelopersQ then
Status = true
elseif Developers then
Status = true
elseif MalekAsase then
Status = true
elseif TheBasicsQ then
Status = true
elseif TheBasics then
Status = true
elseif Originators then
Status = true
elseif Managers then
Status = true
elseif Addictive then
Status = true
elseif StatusMember == "chatMemberStatusCreator" then
Status = true
else
Status = false
end  
return Status
end 
function GetInfoBot(msg)
local GetMemberStatus = luatele.getChatMember(msg.chat_id,LiOn).status
if GetMemberStatus.can_change_info then
change_info = true else change_info = false
end
if GetMemberStatus.can_delete_messages then
delete_messages = true else delete_messages = false
end
if GetMemberStatus.can_invite_users then
invite_users = true else invite_users = false
end
if GetMemberStatus.can_pin_messages then
pin_messages = true else pin_messages = false
end
if GetMemberStatus.can_restrict_members then
restrict_members = true else restrict_members = false
end
if GetMemberStatus.can_promote_members then
promote = true else promote = false
end
return{
SetAdmin = promote,
BanUser = restrict_members,
Invite = invite_users,
PinMsg = pin_messages,
DelMsg = delete_messages,
Info = change_info
}
end
function download(url,name)
if not name then
name = url:match('([^/]+)$')
end
if string.find(url,'https') then
data,res = https.request(url)
elseif string.find(url,'http') then
data,res = http.request(url)
else
return 'The link format is incorrect.'
end
if res ~= 200 then
return 'check url , error code : '..res
else
file = io.open(name,'wb')
file:write(data)
file:close()
print('Downloaded :> '..name)
return './'..name
end
end
local function Info_Video(x)
local f=io.popen(x)
if f then
local s=f:read"*a"
f:close()
if s == 'a' then
end
return s
end
end
function ChannelJoinch(msg)
JoinChannel = true
local Channel = Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)
if Channel then
local url , res = https.request('https://api.telegram.org/bot'..Token..'/getchatmember?chat_id=@'..Channel..'&user_id='..msg.sender_id.user_id)
local ChannelJoin = JSON.decode(url)
var(ChannelJoin)
if ChannelJoin.result.status == "left" then
JoinChannel = false
end
end
return JoinChannel
end

function ChannelJoin(msg)
JoinChannel = true
if not Redis:sismember(LiOn.."BotFree:Group:",msg.chat_id) then
local Channel = Redis:get(LiOn..'LiOn:Channel:Join')
if Channel then
local url , res = https.request('https://api.telegram.org/bot'..Token..'/getchatmember?chat_id=@'..Channel..'&user_id='..msg.sender_id.user_id)
if res == 200 then
local ChannelJoin = JSON.decode(url)
if ChannelJoin.result.status == "left" then
JoinChannel = false
end
end
end
end
return JoinChannel
end


function File_Bot_Run(msg,data)  
local msg_chat_id = msg.chat_id
local msg_reply_id = msg.reply_to_message_id
local msg_user_send_id = msg.sender_id.user_id
local msg_id = msg.id
local text = nil
if msg.date and msg.date < tonumber(os.time() - 15) then
print("->> Old Message End <<-")
return false
end
if data.content.text then
text = data.content.text.text
end

if tonumber(msg.sender_id.user_id) == tonumber(LiOn) then
print('This is reply for Bot')
return false
end

if msg.sender_id.Merotele == "messageSenderChat" then
if Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,msg.sender_id.chat_id) then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
end
if Redis:get(LiOn.."LiOn:Lock:SenderChat"..msg_chat_id) then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
end
return false
end

if tonumber(msg.sender_id.user_id) == 147982809 then
msg.Name_Controller = 'مطـور السـورس ⚡️ '
msg.The_Controller = 1
elseif tonumber(msg.sender_id.user_id) == 147982809 then
msg.Name_Controller = 'مطـور السـورس ⚡️ '
msg.The_Controller = 1
elseif The_ControllerAll(msg.sender_id.user_id) == true then  
msg.The_Controller = 1
msg.Name_Controller = 'المطـور الاساسي ⚡️ '
elseif Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",msg.sender_id.user_id) == true then
msg.The_Controller = 2
msg.Name_Controller = 'المطـور الثانوي ⚡️'
elseif Redis:sismember(LiOn.."LiOn:Developers:Groups",msg.sender_id.user_id) == true then
msg.The_Controller = 3
msg.Name_Controller = Redis:get(LiOn..'LiOn:SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(LiOn.."LiOn:Developer:Bot:Reply"..msg.chat_id) or 'المطـــور ⚡️ '
elseif Redis:sismember(LiOn.."LiOn:MalekAsase:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 444
msg.Name_Controller = Redis:get(LiOn..'LiOn:SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(LiOn.."LiOn:PresidentQ:Group:Reply"..msg.chat_id) or 'المــــــالك 🌟 '
elseif Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 44
msg.Name_Controller = Redis:get(LiOn..'LiOn:SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(LiOn.."LiOn:PresidentQ:Group:Reply"..msg.chat_id) or 'المــــــالك 🌟 '
elseif Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 4
msg.Name_Controller = Redis:get(LiOn..'LiOn:SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(LiOn.."LiOn:President:Group:Reply"..msg.chat_id) or 'المنشئ الاساسي 🌟'
elseif Redis:sismember(LiOn.."LiOn:Originators:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 5
msg.Name_Controller = Redis:get(LiOn..'LiOn:SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(LiOn.."LiOn:Constructor:Group:Reply"..msg.chat_id) or 'المنشــىء 🌟 '
elseif Redis:sismember(LiOn.."LiOn:Managers:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 6
msg.Name_Controller = Redis:get(LiOn..'LiOn:SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(LiOn.."LiOn:Manager:Group:Reply"..msg.chat_id) or 'المــــدير 🌟 '
elseif Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 7
msg.Name_Controller = Redis:get(LiOn..'LiOn:SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(LiOn.."LiOn:Admin:Group:Reply"..msg.chat_id) or 'الادمـــــن 🌟 '
elseif Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 8
msg.Name_Controller = Redis:get(LiOn..'LiOn:SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(LiOn.."LiOn:Vip:Group:Reply"..msg.chat_id) or 'المميــز ⭐️ '
elseif tonumber(msg.sender_id.user_id) == tonumber(LiOn) then
msg.The_Controller = 9
else
msg.The_Controller = 10
msg.Name_Controller = Redis:get(LiOn..'LiOn:SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(LiOn.."LiOn:Mempar:Group:Reply"..msg.chat_id) or 'العضـو '
end  
if msg.The_Controller == 1 then  
msg.ControllerBot = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 then
msg.DevelopersQ = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 then
msg.Developers = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 444 or msg.The_Controller == 9 then
msg.MalekAsase = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 444 or msg.The_Controller == 44 or msg.The_Controller == 9 then
msg.TheBasicsQ = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 444 or msg.The_Controller == 44 or msg.The_Controller == 4 or msg.The_Controller == 9 then
msg.TheBasics = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 444 or msg.The_Controller == 44 or msg.The_Controller == 4 or msg.The_Controller == 5 or msg.The_Controller == 9 then
msg.Originators = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 444 or msg.The_Controller == 44 or msg.The_Controller == 4 or msg.The_Controller == 5 or msg.The_Controller == 6 or msg.The_Controller == 9 then
msg.Managers = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 444 or msg.The_Controller == 44 or msg.The_Controller == 4 or msg.The_Controller == 5 or msg.The_Controller == 6 or msg.The_Controller == 7 or msg.The_Controller == 9 then
msg.Addictive = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 444 or msg.The_Controller == 44 or msg.The_Controller == 4 or msg.The_Controller == 5 or msg.The_Controller == 6 or msg.The_Controller == 7 or msg.The_Controller == 8 or msg.The_Controller == 9 then
msg.Distinguished = true
end

if msg.sender_id.Merotele ~= "messageSenderChat" then
if Statusrestricted(msg.chat_id,msg.sender_id.user_id).KtmAll == true then
return luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
elseif Statusrestricted(msg.chat_id,msg.sender_id.user_id).BanAll == true then
return luatele.deleteMessages(msg.chat_id,{[1]= msg.id}),luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
elseif Statusrestricted(msg.chat_id,msg.sender_id.user_id).BanGroup == true then
return luatele.deleteMessages(msg.chat_id,{[1]= msg.id}),luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
elseif Statusrestricted(msg.chat_id,msg.sender_id.user_id).SilentGroup == true then
return luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
end
end
if text then
Redis:incr(LiOn.."Num:MssEgeS:Days"..msg.chat_id..os.date("%d")) 
elseif msg.content.Merotele == "messageChatAddMembers" then
Redis:incr(LiOn.."Num:AddMempber:Days"..msg.chat_id..os.date("%d")) 
elseif msg.content.Merotele == "messagePinMessage" then
Redis:incr(LiOn.."Num:PinMsg:Days"..msg.chat_id..os.date("%d")) 
elseif msg.content.Merotele == "messageChatJoinByLink" then
Redis:incr(LiOn.."Num:joinlink:Days"..msg.chat_id..os.date("%d")) 
end

if msg.content.Merotele == "messageChatJoinByLink" and Redis:get(LiOn..'LiOn:Status:joinet'..msg.chat_id) == 'true' then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ انا لست بوت }', data = msg.sender_id.user_id..'/UnKed'},
},
}
} 
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
return luatele.sendText(msg.chat_id, msg.id, '◈￤يجب علينا التأكد أنك لست بوت .\n◈￤تم تقييدك اضغط الزر بالاسفل 🔽', 'md',false, false, false, false, reply_markup)
end

if (Redis:get(LiOn..'LiOn:All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'DelFilterq') then   
if text or msg.content.photo or msg.content.animation or msg.content.sticker then
print('&')
if msg.content.Merotele == "messagePhoto" then
Filters = 'الصوره'
Redis:srem(LiOn.."LiOn:All:List:Filter",'photo:'..msg.content.photo.sizes[1].photo.id)  
Redis:del(LiOn.."LiOn:All:Filter:Group:"..msg.content.photo.sizes[1].photo.id)  
elseif msg.content.Merotele == "messageAnimation" then
Filters = 'المتحركه'
Redis:srem(LiOn.."LiOn:All:List:Filter",'animation:'..msg.content.animation.animation.id)  
Redis:del(LiOn.."LiOn:All:Filter:Group:"..msg.content.animation.animation.id)  
elseif msg.content.Merotele == "messageSticker" then
Filters = 'الملصق'
Redis:srem(LiOn.."LiOn:All:List:Filter",'sticker:'..msg.content.sticker.sticker.id)  
Redis:del(LiOn.."LiOn:All:Filter:Group:"..msg.content.sticker.sticker.id)  
elseif text then
Redis:srem(LiOn.."LiOn:All:List:Filter",'text:'..text)  
Redis:del(LiOn.."LiOn:All:Filter:Group:"..text)  
Filters = 'النص'
end
Redis:del(LiOn..'LiOn:All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم الغاء منع عام ("..Filters..")","md",true)  
end
end

if Redis:get(LiOn.."LiOn:Lock:text"..msg_chat_id) and not msg.Distinguished then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
return false
end 
if msg.content.Merotele == "messageChatJoinByLink" and not msg.Distinguished then
if Redis:get(LiOn.."LiOn:Lock:Join"..msg.chat_id) == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
return false
end
end
if msg.content.Merotele == "messageChatAddMembers" then -- اضافه اشخاص
local Lock_Bots = Redis:get(LiOn.."LiOn:Lock:Bot:kick"..msg_chat_id)
for k,v in pairs(msg.content.member_user_ids) do
if tonumber(v) ~= tonumber(LiOn) then
local Info_User = luatele.getUser(v) 
if Info_User.type.Merotele == "userTypeBot" then
if Lock_Bots == "del" and not msg.Managers then
luatele.setChatMemberStatus(msg.chat_id,v,'banned',0)
elseif Lock_Bots == "kick" and not msg.Managers then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.setChatMemberStatus(msg.chat_id,v,'banned',0)
end
end
end
end
end

if msg.content.Merotele == "messageChatAddMembers" then
Redis:incr(LiOn.."LiOn:Num:Add:Memp"..msg_chat_id..":"..msg.sender_id.user_id) 
end


if msg.content.Merotele == "messageChatJoinByLink" or msg.content.Merotele == "messageChatAddMembers" then
if Redis:get(LiOn.."LiOn:Status:Welcome"..msg_chat_id) then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Get_Chat = luatele.getChat(msg_chat_id)
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
UserIdMalek = 0
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
UserIdMalek = v.member_id.user_id
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,v.member_id.user_id) 
else
Redis:sadd(LiOn.."LiOn:Addictive:Group"..msg_chat_id,v.member_id.user_id) 
end
end
end
local UserInfoo = luatele.getUser(UserIdMalek)
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = 'المالك', url='tg://user?id='..UserIdMalek},
},
}
local Welcome = Redis:get(LiOn.."LiOn:Welcome:Group"..msg_chat_id)
if Welcome then 
if UserInfo.username then
UserInfousername = '@'..UserInfo.username
else
UserInfousername = 'لا يوجد '
end
Welcome = Welcome:gsub('{الاسم}',"["..(FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')' or '---')) 
Welcome = Welcome:gsub('{المعرف}',("@"..UserInfo.username or '---')) 
Welcome = Welcome:gsub('{المجموعه}',(Get_Chat.title or '---')) 
Welcome = Welcome:gsub('{الاعضاء}',Info_Chats.member_count) 
Welcome = Welcome:gsub('{الادمنيه}',Info_Chats.administrator_count) 
Welcome = Welcome:gsub('{الوقت}',os.date("%H:%M:%S")) 
Welcome = Welcome:gsub('{التاريخ}',os.date("%Y/%m/%d")) 
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(Welcome)..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))

else 
local GroupsWelcome = Redis:get(LiOn.."LiOn:Welcome:Groups")
if GroupsWelcome then
GroupsWelcome = GroupsWelcome:gsub('{الاسم}',"["..(FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')' or '---')) 
GroupsWelcome = GroupsWelcome:gsub('{المعرف}',("@"..UserInfo.username or '---')) 
GroupsWelcome = GroupsWelcome:gsub('{المجموعه}',(Get_Chat.title or '---')) 
GroupsWelcome = GroupsWelcome:gsub('{الاعضاء}',Info_Chats.member_count) 
GroupsWelcome = GroupsWelcome:gsub('{الادمنيه}',Info_Chats.administrator_count) 
GroupsWelcome = GroupsWelcome:gsub('{الوقت}',os.date("%H:%M:%S")) 
GroupsWelcome = GroupsWelcome:gsub('{التاريخ}',os.date("%Y/%m/%d")) 
local TextWelcome = (GroupsWelcome or "*❆︙هَــْـِْـْْـِلاّ ؏ـُمࢪيِ نــْـِْورت ڪـَروبنه☆🦋💞\n* ْ"..("["..(FlterBio(UserInfo.first_name).."](tg://user?id="..msg.sender_id.user_id..")" or "---")).."\n ْ"..("*❆︙المجموعه :* ["..Get_Chat.title.."]("..Info_Chats.invite_link.invite_link..")" or "---").." *\n❆︙الاعضاء "..Info_Chats.member_count.."~ الادمنيه "..Info_Chats.administrator_count.."*")
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TextWelcome)..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))

else
local TextWelcome = ("*❆︙هَــْـِْـْْـِلاّ ؏ـُمࢪيِ نــْـِْورت ڪـَروبنه☆🦋💞\n* ْ"..("["..(FlterBio(UserInfo.first_name).."](tg://user?id="..msg.sender_id.user_id..")" or "---")).."\n ْ"..("*❆︙المجموعه :* ["..Get_Chat.title.."]("..Info_Chats.invite_link.invite_link..")" or "---").." *\n❆︙الاعضاء "..Info_Chats.member_count.."~ الادمنيه "..Info_Chats.administrator_count.."*")
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)

local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TextWelcome)..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
end
end
end
end 
if not msg.Distinguished and msg.content.Merotele ~= "messageChatAddMembers" and Redis:hget(LiOn.."LiOn:Spam:Group:User"..msg_chat_id,"Spam:User") then 
if tonumber(msg.sender_id.user_id) == tonumber(LiOn) then
return false
end
local floods = Redis:hget(LiOn.."LiOn:Spam:Group:User"..msg_chat_id,"Spam:User") or "nil"
local Num_Msg_Max = Redis:hget(LiOn.."LiOn:Spam:Group:User"..msg_chat_id,"Num:Spam") or 5
local post_count = tonumber(Redis:get(LiOn.."LiOn:Spam:Cont"..msg.sender_id.user_id..":"..msg_chat_id) or 0)
if post_count >= tonumber(Redis:hget(LiOn.."LiOn:Spam:Group:User"..msg_chat_id,"Num:Spam") or 5) then 
local type = Redis:hget(LiOn.."LiOn:Spam:Group:User"..msg_chat_id,"Spam:User") 

if type == "kick" then 
return luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0), luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙قام بالتكرار في المجموعه وتم طرده").Reply,"md",true)
end
if type == "del" then 
return luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
end
if type == "keed" then
return luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0}), luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙قام بالتكرار في المجموعه وتم تقييده").Reply,"md",true)  
end
if type == "mute" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙قام بالتكرار في المجموعه وتم كتمه").Reply,"md",true)  
end
end
Redis:setex(LiOn.."LiOn:Spam:Cont"..msg.sender_id.user_id..":"..msg_chat_id, tonumber(5), post_count+1) 
local edit_id = data.text_ or "nil"  
Num_Msg_Max = 5
if Redis:hget(LiOn.."LiOn:Spam:Group:User"..msg_chat_id,"Num:Spam") then
Num_Msg_Max = Redis:hget(LiOn.."LiOn:Spam:Group:User"..msg_chat_id,"Num:Spam") 
end
end 
if text and not msg.Distinguished then
local _nl, ctrl_ = string.gsub(text, "%c", "")  
local _nl, real_ = string.gsub(text, "%d", "")   
sens = 400  
if Redis:get(LiOn.."LiOn:Lock:Spam"..msg.chat_id) == "del" and string.len(text) > (sens) or ctrl_ > (sens) or real_ > (sens) then 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الكلايش \n ✓',"md")
end
elseif Redis:get(LiOn.."LiOn:Lock:Spam"..msg.chat_id) == "ked" and string.len(text) > (sens) or ctrl_ > (sens) or real_ > (sens) then 
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الكلايش \n ✓',"md")
end
elseif Redis:get(LiOn.."LiOn:Lock:Spam"..msg.chat_id) == "kick" and string.len(text) > (sens) or ctrl_ > (sens) or real_ > (sens) then 
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الكلايش \n ✓',"md")
end
elseif Redis:get(LiOn.."LiOn:Lock:Spam"..msg.chat_id) == "ktm" and string.len(text) > (sens) or ctrl_ > (sens) or real_ > (sens) then 
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الكلايش \n ✓',"md")
end
end
end
if msg.forward_info and not msg.Managers then -- التوجيه
local Fwd_Group = Redis:get(LiOn.."LiOn:Lock:forward"..msg_chat_id)
if Fwd_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال التوجيه \n ✓',"md")
end
elseif Fwd_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال التوجيه \n ✓',"md")
end
elseif Fwd_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال التوجيه \n ✓',"md")
end
elseif Fwd_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال التوجيه \n ✓',"md")
end
end
print('This is forward')
return false
end 
if msg.content.Merotele == "messagePhoto" or msg.content.Merotele == "messageAnimation" or msg.content.Merotele == "messageSticker" or msg.content.Merotele == "messageVoiceNote" or msg.content.Merotele == "messageVideo" or msg.content.Merotele == "messageAudio" or msg.content.Merotele == "messageVideoNote" then
if not msg.Addictive then
if Redis:get(LiOn.."LiOn:Lock:AlUasat"..msg_chat_id) then 
return luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
end
end
end

if msg.reply_markup and msg.reply_markup.Merotele == "replyMarkupInlineKeyboard" then
if not msg.Distinguished then  -- الكيبورد
local Keyboard_Group = Redis:get(LiOn.."LiOn:Lock:Keyboard"..msg_chat_id)
if Keyboard_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الكيبورد \n ✓',"md")
end
elseif Keyboard_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الكيبورد \n ✓',"md")
end
elseif Keyboard_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الكيبورد \n ✓',"md")
end
elseif Keyboard_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الكيبورد \n ✓',"md")
end
end
end
print('This is reply_markup')
end 
local UserInfo = luatele.getUser(msg.sender_id.user_id)
if msg.sender_id.user_id ~= 147982809 then 

local names = (UserInfo.first_name or '...')..(UserInfo.last_name or '...')
if names and  names:find("🇹🇷⌯𝗟ََ𝗶ََ𝗢َ𝗻َِ/-أࢦࢦـهم قوه") then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
return luatele.sendText(msg_chat_id,0,'[عذرا ممنوع انتحال اسم مطور السورس](tg://user?id='..msg.sender_id.user_id..')',"md")
end
end
if msg.content.location and not msg.Distinguished then  -- الموقع
if location then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال المواقع \n ✓',"md")
end
end
print('This is location')
end 

if msg.content.entities and msg..content.entities[0] and msg.content.entities[0].type.Merotele == "textEntityTypeUrl" and not msg.Distinguished then  -- الماركداون
local Markduan_Gtoup = Redis:get(LiOn.."LiOn:Lock:Markdaun"..msg_chat_id)
if Markduan_Gtoup == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الماركداون \n ✓',"md")
end
elseif Markduan_Gtoup == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الماركداون \n ✓',"md")
end
elseif Markduan_Gtoup == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الماركداون \n ✓',"md")
end
elseif Markduan_Gtoup == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الماركداون \n ✓',"md")
end
end
print('This is textEntityTypeUrl')
end 

if msg.content.game and not msg.Distinguished then  -- الالعاب
local Games_Group = Redis:get(LiOn.."LiOn:Lock:geam"..msg_chat_id)
if Games_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الالعاب \n ✓',"md")
end
elseif Games_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الالعاب \n ✓',"md")
end
elseif Games_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الالعاب \n ✓',"md")
end
elseif Games_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الالعاب \n ✓',"md")
end
end
print('This is games')
end 
if msg.content.Merotele == "messagePinMessage" then -- رساله التثبيت
local Pin_Msg = Redis:get(LiOn.."LiOn:lockpin"..msg_chat_id)
if Pin_Msg and not msg.Managers then
if Pin_Msg:match("(%d+)") then 
local PinMsg = luatele.pinChatMessage(msg_chat_id,Pin_Msg,true)
if PinMsg.Merotele~= "ok" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لا استطيع تثبيت الرسائل ليست لديه صلاحيه","md",true)
end
end
local UnPin = luatele.unpinChatMessage(msg_chat_id) 
if UnPin.Merotele ~= "ok" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لا استطيع الغاء تثبيت الرسائل ليست لديه صلاحيه","md",true)
end
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙التثبيت معطل من قبل المدراء ","md",true)
end
print('This is message Pin')
end 

if msg.content.Merotele == "messageChatJoinByLink" then
if Redis:get(LiOn.."LiOn:Lock:Join"..msg.chat_id) == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
return false
end
end

if msg.content.Merotele == "messageChatDeleteMember" and not Redis:get(LiOn.."spammkick"..msg.chat_id) then 
if msg.sender_id.user_id ~= LiOn then
Num_Msg_Max = 4
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local names = UserInfo.first_name
local monsha = Redis:smembers(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id) 
if Redis:ttl(LiOn.."mkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id) < 0 then
Redis:del(LiOn.."delmembars"..msg.chat_id..msg.sender_id.user_id)
end
local ttsaa = (Redis:get(LiOn.."delmembars"..msg.chat_id..msg.sender_id.user_id) or 0)
if tonumber(ttsaa) >= tonumber(3) then 
local type = Redis:hget(LiOn.."Storm:Spam:Group:User"..msg.chat_id,"Spam:User") 
local removeMembars = https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..msg.sender_id.user_id.."&can_change_info=false&can_manage_chat=false&can_manage_voice_chats=false&can_delete_messages=false&can_invite_users=false&can_restrict_members=false&can_pin_messages=false&can_promote_members=false")
local Json_Info = JSON.decode(removeMembars)
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Originators:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg.chat_id,msg.sender_id.user_id)
if Json_Info.ok == false and Json_Info.error_code == 400 and Json_Info.description == "Bad Request: CHAT_ADMIN_REQUIRED" then
if #monsha ~= 0 then 
local ListMembers = '\n*❆︙تاك للمالكين  \n — — — — — — — — —*\n'
for k, v in pairs(monsha) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local tecxt = ListMembers.."\n❆︙ نداء للمالك {[ > Click < ](tg://user?id="..v..")}"..
"\n❆︙المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n❆︙قام بالتكرار في ازاله الاعضاء \n❆︙ لا يمكنني تنزيله من المشرفين"
luatele.sendText(msg_chat_id,msg_id,tecxt,"md")
end
end
if Json_Info.ok == false and Json_Info.error_code == 400 and Json_Info.description == "Bad Request: can't remove chat owner" then
if #monsha ~= 0 then 
local ListMembers = '\n*❆︙تاك للمالكين  \n — — — — — — — — —*\n'
for k, v in pairs(monsha) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local tecxt = ListMembers.."\n❆︙ نداء للمالك {[ > Click < ](tg://user?id="..v..")}"..
"\n❆︙المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n❆︙هناك عمليه تخريب وطرد الاعضاء , ليست لدي صلاحيه اضافه مشرفين لتنزيله"
luatele.sendText(msg_chat_id,msg_id,tecxt,"md")
end
end
if Json_Info.ok == true and Json_Info.result == true then
if #monsha ~= 0 then 
local ListMembers = '\n*❆︙تاك للمالكين  \n — — — — — — — — —*\n'
for k, v in pairs(monsha) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local tecxt = ListMembers.."\n❆︙ نداء للمالك {[ > Click < ](tg://user?id="..v..")}"..
"\n❆︙المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n❆︙قام بتكرار طرد الاعضاء وطرد اكثر من 3 وتم تنزيله من المشرفين "
luatele.sendText(msg_chat_id,msg_id,tecxt,"md")
end
end
Redis:del(LiOn.."delmembars"..msg.chat_id..msg.sender_id.user_id)
end
Redis:setex(LiOn.."mkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id, 3600, true) 
Redis:incrby(LiOn.."delmembars"..msg.chat_id..msg.sender_id.user_id, 1)  
end
end 

if text and text:match('طرد @(.*)') or text and text:match('حظر @(.*)') or text and text:match('طرد (%d+)') or text and text:match('حظر (%d+)') then 
if not Redis:get(LiOn.."spammkick"..msg.chat_id) then 
if msg.sender_id.user_id ~= LiOn then
Num_Msg_Max = 4
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local names = UserInfo.first_name 
local monsha = Redis:smembers(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id) 
if Redis:ttl(LiOn.."qmkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id) < 0 then
Redis:del(LiOn.."qdelmembars"..msg.chat_id..msg.sender_id.user_id)
end
local ttsaa = (Redis:get(LiOn.."qdelmembars"..msg.chat_id..msg.sender_id.user_id) or 0)
if tonumber(ttsaa) >= tonumber(5) then 
print('spammmmm')
local removeMembars = https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..msg.sender_id.user_id.."&can_change_info=false&can_manage_chat=false&can_manage_voice_chats=false&can_delete_messages=false&can_invite_users=false&can_restrict_members=false&can_pin_messages=false&can_promote_members=false")
local Json_Info = JSON.decode(removeMembars)
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Originators:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg.chat_id,msg.sender_id.user_id)
if Json_Info.ok == false and Json_Info.error_code == 400 and Json_Info.description == "Bad Request: CHAT_ADMIN_REQUIRED" then
if #monsha ~= 0 then 
local ListMembers = '\n*❆︙تاك للمالكين  \n — — — — — — — — —*\n'
for k, v in pairs(monsha) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local tecxt = ListMembers.."\n❆︙المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n❆︙قام بالتكرار في ازاله الاعضاء \n❆︙ لا يمكنني تنزيله من المشرفين"
luatele.sendText(msg_chat_id,msg_id,tecxt,"md")
end
end
if Json_Info.ok == false and Json_Info.error_code == 400 and Json_Info.description == "Bad Request: can't remove chat owner" then
if #monsha ~= 0 then 
local ListMembers = '\n*❆︙تاك للمالكين  \n — — — — — — — — —*\n'
for k, v in pairs(monsha) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local tecxt = ListMembers.."\n❆︙المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n❆︙هناك عمليه تخريب وطرد الاعضاء , ليست لدي صلاحيه اضافه مشرفين لتنزيله"
luatele.sendText(msg_chat_id,msg_id,tecxt,"md")
end
end
if Json_Info.ok == true and Json_Info.result == true then
if #monsha ~= 0 then 
local ListMembers = '\n*❆︙تاك للمالكين  \n — — — — — — — — —*\n'
for k, v in pairs(monsha) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local tecxt = ListMembers.."\n❆︙المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n❆︙هناك عمليه تخريب وطرد الاعضاء , ليست لدي صلاحيه اضافه مشرفين لتنزيله"
luatele.sendText(msg_chat_id,msg_id,tecxt,"md")
end
end
Redis:del(LiOn.."qdelmembars"..msg.chat_id..msg.sender_id.user_id)
end
Redis:setex(LiOn.."qmkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id, 3600, true) 
Redis:incrby(LiOn.."qdelmembars"..msg.chat_id..msg.sender_id.user_id, 1)  
end
end 
end

if msg.content.Merotele == "messagePhoto" and Redis:get(LiOn..'welcom_ph:witting'..msg.sender_id.user_id) then  -- الصور
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(LiOn..':WELCOME_BOT',idPhoto)
Redis:del(LiOn..'welcom_ph:witting'..msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id, '❆︙تم تغيير صـورهہ‏‏ آلترحيب للبوت\n✓')
end



if msg.content.Merotele == "messageChatAddMembers" then -- اضافه اشخاص
print('This is Add Membeers ')
Redis:incr(LiOn.."LiOn:Num:Add:Memp"..msg_chat_id..":"..msg.sender_id.user_id) 
local AddMembrs = Redis:get(LiOn.."LiOn:Lock:AddMempar"..msg_chat_id) 
local Lock_Bots = Redis:get(LiOn.."LiOn:Lock:Bot:kick"..msg_chat_id)
for k,v in pairs(msg.content.member_user_ids) do
if tonumber(v) == tonumber(LiOn) then
local idephoto = Redis:get(LiOn..':WELCOME_BOT')
if idephoto then
local Bot_Name = (Redis:get(LiOn.."LiOn:Name:Bot") or "اسد")
return luatele.sendPhoto(msg.chat_id, msg.id, idephoto,
'\n*❆︙اهلا انآ بوت اسمي '..Bot_Name..''..
'\n❆︙آختصـآصـي حمـآيهہ‌‏ آلمـجمـوعآت'..
'\n❆︙مـن آلسـبآم وآلتوجيهہ‌‏ وآلتگرآر وآلخ...'..
'\n❆︙مـعـرف الـمـطـور  : @'..UserSudo..
'*', "md")
end
end
local Info_User = luatele.getUser(v) 
if Info_User.type.Merotele == "userTypeRegular" then
Redis:incr(LiOn.."LiOn:Num:Add:Memp"..msg.chat_id..":"..msg.sender_id.user_id) 
if AddMembrs == "kick" and not msg.Distinguished then
luatele.setChatMemberStatus(msg.chat_id,v,'banned',0)
end
end
end
end 


if msg.content.Merotele == "messageContact" or text and text:match("77(%d+)") or text and text:match("78(%d+)") or text and text:match("75(%d+)") then
if not msg.Distinguished then  -- الجهات
local Contact_Group = Redis:get(LiOn.."LiOn:Lock:Contact"..msg_chat_id)
if Contact_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الجهات \n ✓',"md")
end
elseif Contact_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الجهات \n ✓',"md")
end
elseif Contact_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الجهات \n ✓',"md")
end
elseif Contact_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الجهات \n ✓',"md")
end
end
end
print('This is Contact')
end 

if msg.content.Merotele == "messageVideoNote" and not msg.Distinguished then  -- بصمه الفيديو
local Videonote_Group = Redis:get(LiOn.."LiOn:Lock:Unsupported"..msg_chat_id)
if Videonote_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال بصمات الفيديو \n ✓',"md")
end
elseif Videonote_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال بصمات الفيديو  \n ✓',"md")
end
elseif Videonote_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال بصمات الفيديو  \n ✓',"md")
end
elseif Videonote_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال بصمات الفيديو  \n ✓',"md")
end
end
print('This is video Note')
end 

if msg.content.Merotele == "messageDocument" and not msg.Distinguished then  -- الملفات
local Document_Group = Redis:get(LiOn.."LiOn:Lock:Document"..msg_chat_id)
if Document_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الملفات \n ✓',"md")
end
elseif Document_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الملفات \n ✓',"md")
end
elseif Document_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الملفات \n ✓',"md")
end
elseif Document_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الملفات \n ✓',"md")
end
end
print('This is Document')
end 

if msg.content.Merotele == "messageAudio" and not msg.Distinguished then  -- الملفات الصوتيه
local Audio_Group = Redis:get(LiOn.."LiOn:Lock:Audio"..msg_chat_id)
if Audio_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الصوتيات \n ✓',"md")
end
elseif Audio_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الصوتيات \n ✓',"md")
end
elseif Audio_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الصوتيات \n ✓',"md")
end
elseif Audio_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الصوتيات \n ✓',"md")
end
end
print('This is Audio')
end 

if msg.content.Merotele == "messageVideo" then  -- الفيديو
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Distinguished then
testmod = true
else
testmod = false
end
if testmod == false then
local Video_Grouo = Redis:get(LiOn.."LiOn:Lock:Video"..msg_chat_id)
if Video_Grouo == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الفيديو \n ✓',"md")
end
elseif Video_Grouo == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الفيديو \n ✓',"md")
end
elseif Video_Grouo == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الفيديو \n ✓',"md")
end
elseif Video_Grouo == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الفيديو \n ✓',"md")
end
end
end
print('This is Video')
end 
if text and text:match("[A-Z]") or text and text:match("[a-z]") then
if not msg.Distinguished and Redis:get(LiOn.."LiOn:Lock:english"..msg_chat_id) then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال كلمات انكليزيه \n ✓',"md")
end
end
end
if msg.content.Merotele == "messageVoiceNote" and not msg.Distinguished then  -- البصمات
local Voice_Group = Redis:get(LiOn.."LiOn:Lock:vico"..msg_chat_id)
if Voice_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال البصمات \n ✓',"md")
end
elseif Voice_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال البصمات \n ✓',"md")
end
elseif Voice_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال البصمات \n ✓',"md")
end
elseif Voice_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال البصمات \n ✓',"md")
end
end
print('This is Voice')
end 

if msg.content.Merotele == "messageSticker" then  -- الملصقات
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Distinguished then
testmod = true
else
testmod = false
end
print(testmod)
if testmod == false then
local Sticker_Group = Redis:get(LiOn.."LiOn:Lock:Sticker"..msg_chat_id)
if Sticker_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الملصقات \n ✓',"md")
end
elseif Sticker_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الملصقات \n ✓',"md")
end
elseif Sticker_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الملصقات \n ✓',"md")
end
elseif Sticker_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الملصقات \n ✓',"md")
end
end
end
print('This is Sticker')
end 

if msg.via_bot_user_id ~= 0 and not msg.Addictive then  -- انلاين
local Inlen_Group = Redis:get(LiOn.."LiOn:Lock:Inlen"..msg_chat_id)
if Inlen_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الاونلاين \n ✓',"md")
end
elseif Inlen_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الاونلاين \n ✓',"md")
end
elseif Inlen_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الاونلاين \n ✓',"md")
end
elseif Inlen_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الاونلاين \n ✓',"md")
end
end
print('This is viabot')
end

if msg.content.Merotele == "messageAnimation"  then  -- المتحركات
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Distinguished then
testmod = true
else
testmod = false
end
if testmod == false then
local Gif_group = Redis:get(LiOn.."LiOn:Lock:Animation"..msg_chat_id)
if Gif_group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال المتحركات \n ✓',"md")
end
elseif Gif_group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال المتحركات \n ✓',"md")
end
elseif Gif_group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال المتحركات \n ✓',"md")
end
elseif Gif_group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال المتحركات \n ✓',"md")
end
end
end
print('This is Animation')
end 
if text and (text:match("ه‍") or text:match("ی") or text:match("ک")) and not msg.Distinguished then 
local phshar_Group = Redis:get(LiOn.."LiOn:Lock:farsia"..msg_chat_id)
if phshar_Group then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الفارسيه \n ✓',"md")
end
end
end
if text and (text:match("كسمك") or text:match("منيوج") or text:match("عير") or text:match("منيوك") or text:match("طويز") or text:match("العيوره") or text:match("مناويج") or text:match("عيوره") or text:match("كسج") or text:match("sex") or text:match("نيج")  or text:match("كحاب")  or text:match("طيازه")or text:match("طيز")or text:match("كس") or text:match("زب") or text:match("نيك") or text:match("فرخ") or text:match("كحبه") or text:match("انيكك") or text:match("منيوك")) and not msg.Distinguished then 
local phshar_Group = Redis:get(LiOn.."LiOn:Lock:phshar"..msg_chat_id)
if phshar_Group then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الفشار \n ✓',"md")
end
end
end
if text and (text:match("خره بالله") or text:match("خبربك") or text:match("كسدينربك") or text:match("خرب بالله") or text:match("خرب الله") or text:match("خره بربك") or text:match("الله الكواد") or text:match("خره بمحمد") or text:match("كسم الله") or text:match("كسم ربك") or text:match("كسربك") or text:match("كسختالله") or text:match("كسخت الله") or text:match("خره بدينك") or text:match("خرهبدينك") or text:match("كسالله") or text:match("خربالله")) and not msg.Distinguished then 
local phsharr_Group = Redis:get(LiOn.."LiOn:Lock:alkfr"..msg_chat_id)
if phsharr_Group then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الكفر \n ✓',"md")
end
end
end
if msg.content.Merotele == "messagePhoto" then  -- الصور
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Distinguished then
testmod = true
else
testmod = false
end
if testmod == false then
local Photo_Group = Redis:get(LiOn.."LiOn:Lock:Photo"..msg_chat_id)
if Photo_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الصور \n ✓',"md")
end
elseif Photo_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الصور \n ✓',"md")
end
elseif Photo_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الصور \n ✓',"md")
end
elseif Photo_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الصور \n ✓',"md")
end
end
end
print('This is Photo delete')
end
if msg.content.photo and Redis:get(LiOn.."LiOn:Chat:Photo"..msg_chat_id..":"..msg.sender_id.user_id) then
local ChatPhoto = luatele.setChatPhoto(msg_chat_id,msg.content.photo.sizes[2].photo.remote.id)
if (ChatPhoto.Merotele == "error") then
Redis:del(LiOn.."LiOn:Chat:Photo"..msg_chat_id..":"..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا استطيع تغيير صوره المجموعه لاني لست ادمن او ليست لديه الصلاحيه ","md",true)    
end
Redis:del(LiOn.."LiOn:Chat:Photo"..msg_chat_id..":"..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تغيير صوره المجموعه بنـجاح ","md",true)    
end
if  (text and text:match("[Tt][Ee][Ll][Ee][Gg][Rr][Aa][Mm].[Mm][Ee]/") 
or text and text:match("[Tt][Ee][Ll][Ee][Gg][Rr][Aa][Mm].[Dd][Oo][Gg]/") 
or text and text:match("[Tt].[Mm][Ee]/") 
or text and text:match("[Tt][Ll][Gg][Rr][Mm].[Mm][Ee]/") 
or text and text:match(".[Pp][Ee]")  
or text and text:match("[Hh][Tt][Tt][Pp][Ss]://") 
or text and text:match("[Hh][Tt][Tt][Pp]://") 
or text and text:match("[Ww][Ww][Ww].") 
or text and text:match(".[Cc][Oo][Mm]")) or text and text:match("[Hh][Tt][Tt][Pp][Ss]://") or text and text:match("[Hh][Tt][Tt][Pp]://") or text and text:match("[Ww][Ww][Ww].") or text and text:match(".[Cc][Oo][Mm]") or text and text:match(".[Tt][Kk]") or text and text:match(".[Mm][Ll]") or text and text:match(".[Oo][Rr][Gg]")
or msg.content.Merotele == "messageContact" 
or msg.content.Merotele == "messageSticker"
or msg.content.Merotele == "messageVideoNote" 
or msg.content.Merotele == "messageDocument" 
or msg.content.Merotele == "messageAudio" 
or msg.content.Merotele == "messageVideo" 
or msg.content.Merotele == "messageVoiceNote" 
or msg.content.Merotele == "messageAnimation" 
or msg.content.Merotele == "messagePhoto" then
local tphlesh_Group = Redis:get(LiOn.."LiOn:Lock:tphlesh"..msg_chat_id)
if not msg.Distinguished and tphlesh_Group then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙عذرا التفليش مقفل تم المسح \n ✓',"md")
end
end
end

if (text and text:match("[Tt][Ee][Ll][Ee][Gg][Rr][Aa][Mm].[Mm][Ee]/") 
or text and text:match("[Tt][Ee][Ll][Ee][Gg][Rr][Aa][Mm].[Dd][Oo][Gg]/") 
or text and text:match("[Tt].[Mm][Ee]/") 
or text and text:match("[Tt][Ll][Gg][Rr][Mm].[Mm][Ee]/") 
or text and text:match(".[Pp][Ee]") 
or text and text:match("[Hh][Tt][Tt][Pp][Ss]://") 
or text and text:match("[Hh][Tt][Tt][Pp]://") 
or text and text:match("[Ww][Ww][Ww].") 
or text and text:match(".[Cc][Oo][Mm]")) or text and text:match("[Hh][Tt][Tt][Pp][Ss]://") or text and text:match("[Hh][Tt][Tt][Pp]://") or text and text:match("[Ww][Ww][Ww].") or text and text:match(".[Cc][Oo][Mm]") or text and text:match(".[Tt][Kk]") or text and text:match(".[Mm][Ll]") or text and text:match(".[Oo][Rr][Gg]") then 
local link_Group = Redis:get(LiOn.."LiOn:Lock:Link"..msg_chat_id)  
if not msg.Addictive then
if link_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الروابط \n ✓',"md")
end
elseif link_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الروابط \n ✓',"md")
end
elseif link_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الروابط \n ✓',"md")
end
elseif link_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الروابط \n ✓',"md")
end
end
print('This is link ')
return false
end
end
if text and text:match("@[%a%d_]+") then 
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Distinguished then
testmod = true
else
testmod = false
end
if testmod == false then
local UserName_Group = Redis:get(LiOn.."LiOn:Lock:User:Name"..msg_chat_id)
if UserName_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال المعرفات \n ✓',"md")
end
elseif UserName_Group == "ked" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال المعرفات \n ✓',"md")
end
elseif UserName_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال المعرفات \n ✓',"md")
end
elseif UserName_Group == "kick" then
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال المعرفات \n ✓',"md")
end
end
print('This is username ')
end
end
if text and text:match("#[%a%d_]+") and not msg.Distinguished then 
local Hashtak_Group = Redis:get(LiOn.."LiOn:Lock:hashtak"..msg_chat_id)
if Hashtak_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الهاشتاك \n ✓',"md")
end
elseif Hashtak_Group == "ked" then
 luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
 luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الهاشتاك \n ✓',"md")
end
elseif Hashtak_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الهاشتاك \n ✓',"md")
end
elseif Hashtak_Group == "kick" then
 luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
 luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الهاشتاك \n ✓',"md")
end
end
print('This is hashtak ')
end
if text and text:match("/[%a%d_]+") and not msg.Distinguished then 
local comd_Group = Redis:get(LiOn.."LiOn:Lock:Cmd"..msg_chat_id)
if comd_Group == "del" then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الشارحه \n ✓',"md")
end
elseif comd_Group == "ked" then
 luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
 luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الشارحه \n ✓',"md")
end
elseif comd_Group == "ktm" then
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الشارحه \n ✓',"md")
end
elseif comd_Group == "kick" then
 luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
 luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
return luatele.sendText(msg_chat_id,msg_id,Teext..'❆︙ممنوع ارسال الشارحه \n ✓',"md")
end
end
end
if (Redis:get(LiOn..'LiOn:FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'true') then
if text or msg.content.photo or msg.content.animation or msg.content.sticker then
if msg.content.photo then
Filters = 'صوره'
Redis:sadd(LiOn.."LiOn:List:Filter"..msg_chat_id,'photo:'..msg.content.photo.sizes[1].photo.id)  
Redis:set(LiOn.."LiOn:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.photo.sizes[1].photo.id)  
elseif msg.content.animation then
Filters = 'متحركه'
Redis:sadd(LiOn.."LiOn:List:Filter"..msg_chat_id,'animation:'..msg.content.animation.animation.id)  
Redis:set(LiOn.."LiOn:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.animation.animation.id)  
elseif msg.content.sticker then
Filters = 'ملصق'
Redis:sadd(LiOn.."LiOn:List:Filter"..msg_chat_id,'sticker:'..msg.content.sticker.sticker.id)  
Redis:set(LiOn.."LiOn:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.sticker.sticker.id)  
elseif text then
Redis:set(LiOn.."LiOn:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, text)  
Redis:sadd(LiOn.."LiOn:List:Filter"..msg_chat_id,'text:'..text)  
Filters = 'نص'
end
Redis:set(LiOn..'LiOn:FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'true1')
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙ارسل تحذير ( "..Filters.." ) عند ارساله","md",true)  
end
end
if text and (Redis:get(LiOn..'LiOn:FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'true1') then
local Text_Filter = Redis:get(LiOn.."LiOn:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id)  
if Text_Filter then   
Redis:set(LiOn.."LiOn:Filter:Group:"..Text_Filter..msg_chat_id,text)  
end  
Redis:del(LiOn.."LiOn:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id)  
Redis:del(LiOn..'LiOn:FilterText'..msg_chat_id..':'..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم اضافه رد التحذير","md",true)  
end
if (Redis:get(LiOn..'LiOn:FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'DelFilter') then   
if text or msg.content.photo or msg.content.animation or msg.content.sticker then
if msg.content.photo then
Filters = 'الصوره'
Redis:srem(LiOn.."LiOn:List:Filter"..msg_chat_id,'photo:'..msg.content.photo.sizes[1].photo.id)  
Redis:del(LiOn.."LiOn:Filter:Group:"..msg.content.photo.sizes[1].photo.id..msg_chat_id)  
elseif msg.content.animation then
Filters = 'المتحركه'
Redis:srem(LiOn.."LiOn:List:Filter"..msg_chat_id,'animation:'..msg.content.animation.animation.id)  
Redis:del(LiOn.."LiOn:Filter:Group:"..msg.content.animation.animation.id..msg_chat_id)  
elseif msg.content.sticker then
Filters = 'الملصق'
Redis:srem(LiOn.."LiOn:List:Filter"..msg_chat_id,'sticker:'..msg.content.sticker.sticker.id)  
Redis:del(LiOn.."LiOn:Filter:Group:"..msg.content.sticker.sticker.id..msg_chat_id)  
elseif text then
Redis:srem(LiOn.."LiOn:List:Filter"..msg_chat_id,'text:'..text)  
Redis:del(LiOn.."LiOn:Filter:Group:"..text..msg_chat_id)  
Filters = 'النص'
end
Redis:del(LiOn..'LiOn:FilterText'..msg_chat_id..':'..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم الغاء منع ("..Filters..")","md",true)  
end
end
if text or msg.content.photo or msg.content.animation or msg.content.sticker then
if msg.content.photo then
DelFilters = msg.content.photo.sizes[1].photo.id
statusfilter = 'الصوره'
elseif msg.content.animation then
DelFilters = msg.content.animation.animation.id
statusfilter = 'المتحركه'
elseif msg.content.sticker then
DelFilters = msg.content.sticker.sticker.id
statusfilter = 'الملصق'
elseif text then
DelFilters = text
statusfilter = 'الرساله'
end
local ReplyFilters = Redis:get(LiOn.."LiOn:Filter:Group:"..DelFilters..msg_chat_id)
if ReplyFilters and not msg.Distinguished then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
return luatele.sendText(msg_chat_id,msg_id,"*❆︙لقد تم منع هذه ( "..statusfilter.." ) هنا*\n❆︙"..ReplyFilters,"md",true)   
end
end
if text and Redis:get(LiOn.."LiOn:Command:Reids:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id) == "true" then
local NewCmmd = Redis:get(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..text)
if NewCmmd then
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..text)
Redis:del(LiOn.."LiOn:Command:Reids:Group:New"..msg_chat_id)
Redis:srem(LiOn.."LiOn:Command:List:Group"..msg_chat_id,text)
luatele.sendText(msg_chat_id,msg_id,"❆︙تم ازالة هذا الامر ← { "..text.." }","md",true)
else
luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد امر بهذا الاسم","md",true)
end
Redis:del(LiOn.."LiOn:Command:Reids:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id)
return false
end
if text and Redis:get(LiOn.."LiOn:Command:Reids:Group"..msg_chat_id..":"..msg.sender_id.user_id) == "true" then
Redis:set(LiOn.."LiOn:Command:Reids:Group:New"..msg_chat_id,text)
Redis:del(LiOn.."LiOn:Command:Reids:Group"..msg_chat_id..":"..msg.sender_id.user_id)
Redis:set(LiOn.."LiOn:Command:Reids:Group:End"..msg_chat_id..":"..msg.sender_id.user_id,"true1") 
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل الامر الجديد ليتم وضعه مكان القديم","md",true)  
end
if text and Redis:get(LiOn.."LiOn:Command:Reids:Group:End"..msg_chat_id..":"..msg.sender_id.user_id) == "true1" then
local NewCmd = Redis:get(LiOn.."LiOn:Command:Reids:Group:New"..msg_chat_id)
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..text,NewCmd)
Redis:sadd(LiOn.."LiOn:Command:List:Group"..msg_chat_id,text)
Redis:del(LiOn.."LiOn:Command:Reids:Group:End"..msg_chat_id..":"..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم حفظ الامر باسم ← { "..text..' }',"md",true)
end
if Redis:get(LiOn.."LiOn:Set:Link"..msg_chat_id..""..msg.sender_id.user_id) then
if text == "الغاء" then
Redis:del(LiOn.."LiOn:Set:Link"..msg_chat_id..""..msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم الغاء حفظ الرابط","md",true)         
end
if text and text:match("(https://telegram.me/joinchat/%S+)") or text and text:match("(https://t.me/joinchat/%S+)") then     
local LinkGroup = text:match("(https://telegram.me/joinchat/%S+)") or text:match("(https://t.me/joinchat/%S+)")   
Redis:set(LiOn.."LiOn:Group:Link"..msg_chat_id,LinkGroup)
Redis:del(LiOn.."LiOn:Set:Link"..msg_chat_id..""..msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم حفظ الرابط بنجاح","md",true)         
end
end 
if Redis:get(LiOn.."Tshake:Welcome:Group" .. msg_chat_id .. "" .. msg.sender_id.user_id) then 
if text == "الغاء" then 
Redis:del(LiOn.."Tshake:Welcome:Group" .. msg_chat_id .. "" .. msg.sender_id.user_id)  
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم الغاء حفظ الترحيب","md",true)   
end 
Redis:del(LiOn.."Tshake:Welcome:Group" .. msg_chat_id .. "" .. msg.sender_id.user_id)  
Redis:set(LiOn.."LiOn:Welcome:Group"..msg_chat_id,text) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم حفظ ترحيب المجموعه","md",true)     
end
if Redis:get(LiOn.."LiOn:Set:Rules:" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" then 
Redis:del(LiOn.."LiOn:Set:Rules:" .. msg_chat_id .. ":" .. msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم الغاء حفظ القوانين","md",true)   
end 
Redis:set(LiOn.."LiOn:Group:Rules" .. msg_chat_id,text) 
Redis:del(LiOn.."LiOn:Set:Rules:" .. msg_chat_id .. ":" .. msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم حفظ قوانين المجموعه","md",true)  
end  
if Redis:get(LiOn.."LiOn:Set:Description:" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" then 
Redis:del(LiOn.."LiOn:Set:Description:" .. msg_chat_id .. ":" .. msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم الغاء حفظ وصف المجموعه","md",true)   
end 
luatele.setChatDescription(msg_chat_id,text) 
Redis:del(LiOn.."LiOn:Set:Description:" .. msg_chat_id .. ":" .. msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم حفظ وصف المجموعه","md",true)  
end  

if text or msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo then
local test = Redis:get(LiOn.."LiOn:Text:Manager"..msg.sender_id.user_id..":"..msg_chat_id.."")
if Redis:get(LiOn.."LiOn:Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id) == "true1" then
Redis:del(LiOn.."LiOn:Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id)
if msg.content.sticker then   
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..test..msg_chat_id, msg.content.sticker.sticker.remote.id)  
end   
if msg.content.voice_note then  
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Vico"..test..msg_chat_id, msg.content.voice_note.voice.remote.id)  
end   
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Text"..test..msg_chat_id, text)  
end  
if msg.content.audio then
if msg.content.caption.text then
Redis:set(LiOn.."LiOn:Add:Rd:caption:audio"..msg.content.audio.audio.remote.id..msg_chat_id, msg.content.caption.text)  
end
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Audio"..test..msg_chat_id, msg.content.audio.audio.remote.id)  
end
if msg.content.document then
if msg.content.caption.text then
Redis:set(LiOn.."LiOn:Add:Rd:caption:document"..msg.content.document.document.remote.id..msg_chat_id, msg.content.caption.text)  
end
Redis:set(LiOn.."LiOn:Add:Rd:Manager:File"..test..msg_chat_id, msg.content.document.document.remote.id)  
end
if msg.content.animation then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Gif"..test..msg_chat_id, msg.content.animation.animation.remote.id)  
end
if msg.content.video_note then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:video_note"..test..msg_chat_id, msg.content.video_note.video.remote.id)  
end
if msg.content.video then
if msg.content.caption.text then
Redis:set(LiOn.."LiOn:Add:Rd:caption:video"..msg.content.video.video.remote.id..msg_chat_id, msg.content.caption.text)  
end
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Video"..test..msg_chat_id, msg.content.video.video.remote.id)  
end
if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
if msg.content.caption.text then
Redis:set(LiOn.."LiOn:Add:Rd:caption:Photo"..idPhoto..msg_chat_id, msg.content.caption.text)  
end
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Photo"..test..msg_chat_id, idPhoto)  
end
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم حفظ الرد  بنجاح \n❆︙ارسل ( ["..test.."] ) لعرض الرد","md",true)  
end  
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."LiOn:Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:set(LiOn.."LiOn:Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id,"true1")
Redis:set(LiOn.."LiOn:Text:Manager"..msg.sender_id.user_id..":"..msg_chat_id, text)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Gif"..text..msg_chat_id)   
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Vico"..text..msg_chat_id)   
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..text..msg_chat_id)     
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Text"..text..msg_chat_id)   
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Photo"..text..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Video"..text..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:File"..text..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:video_note"..text..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Audio"..text..msg_chat_id)
Redis:sadd(LiOn.."LiOn:List:Manager"..msg_chat_id.."", text)
luatele.sendText(msg_chat_id,msg_id,[[
↯︙ارسل لي الرد سواء كان 
❨ ملف • ملصق • متحركه • صوره
 • فيديو • بصمه الفيديو • بصمه • صوت • رساله ❩
↯︙يمكنك اضافة الى النص •
— — — — — — — — —
 `#username` ↬ معرف المستخدم
 `#msgs` ↬ عدد الرسائل
 `#name` ↬ اسم المستخدم
 `#id` ↬ ايدي المستخدم
 `#stast` ↬ رتبة المستخدم
 `#edit` ↬ عدد السحكات

]],"md",true)  
return false
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."LiOn:Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id.."") == "true2" then
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Gif"..text..msg_chat_id)   
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Vico"..text..msg_chat_id)   
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..text..msg_chat_id)     
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Text"..text..msg_chat_id)   
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Photo"..text..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Video"..text..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:File"..text..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Audio"..text..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:video_note"..text..msg_chat_id)
Redis:del(LiOn.."LiOn:Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:srem(LiOn.."LiOn:List:Manager"..msg_chat_id.."", text)
luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح الرد من الردود المضافه","md",true)  
return false
end
end
if text and Redis:get(LiOn.."LiOn:Status:ReplySudo"..msg_chat_id) then
local anemi = Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Gif"..text)   
local veico = Redis:get(LiOn.."LiOn:Add:Rd:Sudo:vico"..text)   
local stekr = Redis:get(LiOn.."LiOn:Add:Rd:Sudo:stekr"..text)     
local Text = Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Text"..text)   
local photo = Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Photo"..text)
local video = Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Video"..text)
local document = Redis:get(LiOn.."LiOn:Add:Rd:Sudo:File"..text)
local audio = Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Audio"..text)
local video_note = Redis:get(LiOn.."LiOn:Add:Rd:Sudo:video_note"..text)
if Text then 
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local NumMsg = Redis:get(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsg = Total_message(NumMsg)
local Status_Gps = msg.Name_Controller
local NumMessageEdit = Redis:get(LiOn..'LiOn:Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local Text = Text:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Text = Text:gsub('#name',UserInfo.first_name)
local Text = Text:gsub('#id',msg.sender_id.user_id)
local Text = Text:gsub('#edit',NumMessageEdit)
local Text = Text:gsub('#msgs',NumMsg)
local Text = Text:gsub('#stast',Status_Gps)
luatele.sendText(msg_chat_id,msg_id,"["..Text.."]","md",true)  
end
if video_note then
luatele.sendVideoNote(msg_chat_id, msg.id, video_note)
end
if photo then
luatele.sendPhoto(msg.chat_id, msg.id, photo,'')
end  
if stekr then 
luatele.sendSticker(msg_chat_id, msg.id, stekr)
end
if veico then 
luatele.sendVoiceNote(msg_chat_id, msg.id, veico, '', 'md')
end
if video then 
luatele.sendVideo(msg_chat_id, msg.id, video, '', "md")
end
if anemi then 
luatele.sendAnimation(msg_chat_id,msg.id, anemi, '', 'md')
end
if document then
luatele.sendDocument(msg_chat_id, msg.id, document, '', 'md')
end  
if audio then
luatele.sendAudio(msg_chat_id, msg.id, audio, '', "md") 
end
end
if text and Redis:get(LiOn.."LiOn:Status:Reply"..msg_chat_id) then
local anemi = Redis:get(LiOn.."LiOn:Add:Rd:Manager:Gif"..text..msg_chat_id)   
local veico = Redis:get(LiOn.."LiOn:Add:Rd:Manager:Vico"..text..msg_chat_id)   
local stekr = Redis:get(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..text..msg_chat_id)     
local Texingt = Redis:get(LiOn.."LiOn:Add:Rd:Manager:Text"..text..msg_chat_id)   
local photo = Redis:get(LiOn.."LiOn:Add:Rd:Manager:Photo"..text..msg_chat_id)
local video = Redis:get(LiOn.."LiOn:Add:Rd:Manager:Video"..text..msg_chat_id)
local document = Redis:get(LiOn.."LiOn:Add:Rd:Manager:File"..text..msg_chat_id)
local audio = Redis:get(LiOn.."LiOn:Add:Rd:Manager:Audio"..text..msg_chat_id)
local video_note = Redis:get(LiOn.."LiOn:Add:Rd:Manager:video_note"..text..msg_chat_id)
if Texingt then 
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local NumMsg = Redis:get(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsg = Total_message(NumMsg) 
local Status_Gps = msg.Name_Controller
local NumMessageEdit = Redis:get(LiOn..'LiOn:Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local Texingt = Texingt:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Texingt = Texingt:gsub('#name',UserInfo.first_name)
local Texingt = Texingt:gsub('#id',msg.sender_id.user_id)
local Texingt = Texingt:gsub('#edit',NumMessageEdit)
local Texingt = Texingt:gsub('#msgs',NumMsg)
local Texingt = Texingt:gsub('#stast',Status_Gps)
luatele.sendText(msg_chat_id,msg_id,"["..Texingt.."]","md",true)  
end
if video_note then
luatele.sendVideoNote(msg_chat_id, msg.id, video_note)
end
if photo then
local captionsend = Redis:get(LiOn.."LiOn:Add:Rd:caption:Photo"..photo..msg_chat_id) or ''
luatele.sendPhoto(msg.chat_id, msg.id, photo,'['..captionsend..']',"md")
end  
if stekr then 
luatele.sendSticker(msg_chat_id, msg.id, stekr)
end
if veico then 
luatele.sendVoiceNote(msg_chat_id, msg.id, veico, '', 'md')
end
if video then 
local captionsend = Redis:get(LiOn.."LiOn:Add:Rd:caption:video"..video..msg_chat_id) or ''
luatele.sendVideo(msg_chat_id, msg.id, video, '['..captionsend..']', "md")
end
if anemi then 
luatele.sendAnimation(msg_chat_id,msg.id, anemi, '', 'md')
end
if document then
local captionsend = Redis:get(LiOn.."LiOn:Add:Rd:caption:document"..document..msg_chat_id) or ''
luatele.sendDocument(msg_chat_id, msg.id, document, '['..captionsend..']', 'md')
end  
if audio then
local captionsend = Redis:get(LiOn.."LiOn:Add:Rd:caption:audio"..audio..msg_chat_id) or ''
luatele.sendAudio(msg_chat_id, msg.id, audio, '['..captionsend..']',"md")
end
end
if text or msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo then
local test = Redis:get(LiOn.."LiOn:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg_chat_id)
if Redis:get(LiOn.."LiOn:Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id) == "true1" then
Redis:del(LiOn.."LiOn:Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id)
if msg.content.sticker then   
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:stekr"..test, msg.content.sticker.sticker.remote.id)  
end   
if msg.content.voice_note then  
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:vico"..test, msg.content.voice_note.voice.remote.id)  
end   
if msg.content.animation then   
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:Gif"..test, msg.content.animation.animation.remote.id)  
end  
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:Text"..test, text)  
end  
if msg.content.audio then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:Audio"..test, msg.content.audio.audio.remote.id)  
end
if msg.content.document then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:File"..test, msg.content.document.document.remote.id)  
end
if msg.content.video then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:Video"..test, msg.content.video.video.remote.id)  
end
if msg.content.video_note then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:video_note"..test..msg_chat_id, msg.content.video_note.video.remote.id)  
end
if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:Photo"..test, idPhoto)  
end
luatele.sendText(msg_chat_id,msg_id,"❆︙تم حفظ رد للمطور \n❆︙ارسل ( ["..test.."] ) لعرض الرد","md",true)  
return false
end  
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."LiOn:Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:set(LiOn.."LiOn:Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id, "true1")
Redis:set(LiOn.."LiOn:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg_chat_id, text)
Redis:sadd(LiOn.."LiOn:List:Rd:Sudo", text)
luatele.sendText(msg_chat_id,msg_id,[[
↯︙ارسل لي الرد سواء كان 
❨ ملف • ملصق • متحركه • صوره
 • فيديو • بصمه الفيديو • بصمه • صوت • رساله ❩
↯︙يمكنك اضافة الى النص •
— — — — — — — — —
 `#username` ↬ معرف المستخدم
 `#msgs` ↬ عدد الرسائل
 `#name` ↬ اسم المستخدم
 `#id` ↬ ايدي المستخدم
 `#stast` ↬ رتبة المستخدم
 `#edit` ↬ عدد السحكات

]],"md",true)  
return false
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."LiOn:Set:On"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
list = {"Add:Rd:Sudo:video_note","Add:Rd:Sudo:Audio","Add:Rd:Sudo:File","Add:Rd:Sudo:Video","Add:Rd:Sudo:Photo","Add:Rd:Sudo:Text","Add:Rd:Sudo:stekr","Add:Rd:Sudo:vico","Add:Rd:Sudo:Gif"}
for k,v in pairs(list) do
Redis:del(LiOn..'LiOn:'..v..text)
end
Redis:del(LiOn.."LiOn:Set:On"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:srem(LiOn.."LiOn:List:Rd:Sudo", text)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح الرد من الردود العامه","md",true)  
end
end
if Redis:get(LiOn.."LiOn:Broadcasting:Groups:Pin" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر ❆' then   
Redis:del(LiOn.."LiOn:Broadcasting:Groups:Pin" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id, "\n❆︙تم الغاء الاذاعه للمجموعات","md",true)  
end 
local list = Redis:smembers(LiOn.."LiOn:ChekBotAdd") 
if msg.content.video_note then
for k,v in pairs(list) do 
luatele.sendVideoNote(v, 0, msg.content.video_note.video.remote.id)
Redis:set(LiOn.."LiOn:PinMsegees:"..v,msg.content.video_note.video.remote.id)
end
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
for k,v in pairs(list) do 
luatele.sendPhoto(v, 0, idPhoto,'')
Redis:set(LiOn.."LiOn:PinMsegees:"..v,idPhoto)
end
elseif msg.content.sticker then 
for k,v in pairs(list) do 
luatele.sendSticker(v, 0, msg.content.sticker.sticker.remote.id)
Redis:set(LiOn.."LiOn:PinMsegees:"..v,msg.content.sticker.sticker.remote.id)
end
elseif msg.content.voice_note then 
for k,v in pairs(list) do 
luatele.sendVoiceNote(v, 0, msg.content.voice_note.voice.remote.id, '', 'md')
Redis:set(LiOn.."LiOn:PinMsegees:"..v,msg.content.voice_note.voice.remote.id)
end
elseif msg.content.video then 
for k,v in pairs(list) do 
luatele.sendVideo(v, 0, msg.content.video.video.remote.id, '', "md")
Redis:set(LiOn.."LiOn:PinMsegees:"..v,msg.content.video.video.remote.id)
end
elseif msg.content.animation then 
for k,v in pairs(list) do 
luatele.sendAnimation(v,0, msg.content.animation.animation.remote.id, '', 'md')
Redis:set(LiOn.."LiOn:PinMsegees:"..v,msg.content.animation.animation.remote.id)
end
elseif msg.content.document then
for k,v in pairs(list) do 
luatele.sendDocument(v, 0, msg.content.document.document.remote.id, '', 'md')
Redis:set(LiOn.."LiOn:PinMsegees:"..v,msg.content.document.document.remote.id)
end
elseif msg.content.audio then
for k,v in pairs(list) do 
luatele.sendAudio(v, 0, msg.content.audio.audio.remote.id, '', "md") 
Redis:set(LiOn.."LiOn:PinMsegees:"..v,msg.content.audio.audio.remote.id)
end
elseif text then
for k,v in pairs(list) do 
luatele.sendText(v,0,text,"md",true)
Redis:set(LiOn.."LiOn:PinMsegees:"..v,text)
end
end
luatele.sendText(msg_chat_id,msg_id,"❆︙تمت الاذاعه الى *- "..#list.." * مجموعه في البوت ","md",true)      
Redis:del(LiOn.."LiOn:Broadcasting:Groups:Pin" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return false
end
------------------------------------------------------------------------------------------------------------
if Redis:get(LiOn.."LiOn:Broadcasting:Users" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر ❆' then   
Redis:del(LiOn.."LiOn:Broadcasting:Users" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id, "\n❆︙تم الغاء الاذاعه خاص","md",true)  
end 
local list = Redis:smembers(LiOn..'LiOn:Num:User:Pv')  
if msg.content.video_note then
for k,v in pairs(list) do 
luatele.sendVideoNote(v, 0, msg.content.video_note.video.remote.id)
end
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
for k,v in pairs(list) do 
luatele.sendPhoto(v, 0, idPhoto,'')
end
elseif msg.content.sticker then 
for k,v in pairs(list) do 
luatele.sendSticker(v, 0, msg.content.sticker.sticker.remote.id)
end
elseif msg.content.voice_note then 
for k,v in pairs(list) do 
luatele.sendVoiceNote(v, 0, msg.content.voice_note.voice.remote.id, '', 'md')
end
elseif msg.content.video then 
for k,v in pairs(list) do 
luatele.sendVideo(v, 0, msg.content.video.video.remote.id, '', "md")
end
elseif msg.content.animation then 
for k,v in pairs(list) do 
luatele.sendAnimation(v,0, msg.content.animation.animation.remote.id, '', 'md')
end
elseif msg.content.document then
for k,v in pairs(list) do 
luatele.sendDocument(v, 0, msg.content.document.document.remote.id, '', 'md')
end
elseif msg.content.audio then
for k,v in pairs(list) do 
luatele.sendAudio(v, 0, msg.content.audio.audio.remote.id, '', "md") 
end
elseif text then
for k,v in pairs(list) do 
luatele.sendText(v,0,text,"md",true)
end
end
luatele.sendText(msg_chat_id,msg_id,"❆︙تمت الاذاعه الى *- "..#list.." * مشترك في البوت ","md",true)      
Redis:del(LiOn.."LiOn:Broadcasting:Users" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return false
end

------------------------------------------------------------------------------------------------------------
if Redis:get(LiOn.."LiOn:Broadcasting:Groups" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر ❆' then   
Redis:del(LiOn.."LiOn:Broadcasting:Groups" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id, "\n❆︙تم الغاء الاذاعه للمجموعات","md",true)  
end 
local list = Redis:smembers(LiOn.."LiOn:ChekBotAdd") 
if msg.content.video_note then
for k,v in pairs(list) do 
luatele.sendVideoNote(v, 0, msg.content.video_note.video.remote.id)
end
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
for k,v in pairs(list) do 
luatele.sendPhoto(v, 0, idPhoto,'')
end
elseif msg.content.sticker then 
for k,v in pairs(list) do 
luatele.sendSticker(v, 0, msg.content.sticker.sticker.remote.id)
end
elseif msg.content.voice_note then 
for k,v in pairs(list) do 
luatele.sendVoiceNote(v, 0, msg.content.voice_note.voice.remote.id, '', 'md')
end
elseif msg.content.video then 
for k,v in pairs(list) do 
luatele.sendVideo(v, 0, msg.content.video.video.remote.id, '', "md")
end
elseif msg.content.animation then 
for k,v in pairs(list) do 
luatele.sendAnimation(v,0, msg.content.animation.animation.remote.id, '', 'md')
end
elseif msg.content.document then
for k,v in pairs(list) do 
luatele.sendDocument(v, 0, msg.content.document.document.remote.id, '', 'md')
end
elseif msg.content.audio then
for k,v in pairs(list) do 
luatele.sendAudio(v, 0, msg.content.audio.audio.remote.id, '', "md") 
end
elseif text then
for k,v in pairs(list) do 
luatele.sendText(v,0,text,"md",true)
end
end
luatele.sendText(msg_chat_id,msg_id,"❆︙تمت الاذاعه الى *- "..#list.." * مجموعه في البوت ","md",true)      
Redis:del(LiOn.."LiOn:Broadcasting:Groups" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return false
end
------------------------------------------------------------------------------------------------------------
if Redis:get(LiOn.."LiOn:Broadcasting:Groups:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر ❆' then   
Redis:del(LiOn.."LiOn:Broadcasting:Groups:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id, "\n❆︙تم الغاء الاذاعه بالتوجيه للمجموعات","md",true)    
end 
if msg.forward_info then 
local list = Redis:smembers(LiOn.."LiOn:ChekBotAdd")   
luatele.sendText(msg_chat_id,msg_id,"❆︙تم التوجيه الى *- "..#list.." * مجموعه في البوت ","md",true)      
for k,v in pairs(list) do  
luatele.forwardMessages(v, msg_chat_id, msg_id,0,0,true,false,false)
end   
Redis:del(LiOn.."LiOn:Broadcasting:Groups:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
end 
return false
end
------------------------------------------------------------------------------------------------------------
if Redis:get(LiOn.."LiOn:Broadcasting:Users:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر ❆' then   
Redis:del(LiOn.."LiOn:Broadcasting:Users:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id, "\n❆︙تم الغاء الاذاعه بالتوجيه خاص","md",true)    
end 
if msg.forward_info then 
local list = Redis:smembers(LiOn.."LiOn:Num:User:Pv")   
luatele.sendText(msg_chat_id,msg_id,"❆︙تم التوجيه الى *- "..#list.." * مجموعه في البوت ","md",true) 
for k,v in pairs(list) do  
luatele.forwardMessages(v, msg_chat_id, msg_id,0,1,msg.media_album_id,false,true)
end   
Redis:del(LiOn.."LiOn:Broadcasting:Users:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
end 
return false
end
if text and Redis:get(LiOn..'LiOn:GetTexting:DevLiOn'..msg_chat_id..':'..msg.sender_id.user_id) then
if text == 'الغاء' or text == 'الغاء الامر ❆' then 
Redis:del(LiOn..'LiOn:GetTexting:DevLiOn'..msg_chat_id..':'..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,'❆︙تم الغاء حفظ كليشة المطور')
end
Redis:set(LiOn..'LiOn:Texting:DevLiOn',text)
Redis:del(LiOn..'LiOn:GetTexting:DevLiOn'..msg_chat_id..':'..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,'❆︙تم حفظ كليشة المطور')
end
if Redis:get(LiOn.."LiOn:Redis:Id:Group"..msg.chat_id..""..msg.sender_id.user_id) then 
if text == 'الغاء' then 
luatele.sendText(msg_chat_id,msg_id, "\n❆︙تم الغاء امر تعيين الايدي","md",true)  
Redis:del(LiOn.."LiOn:Redis:Id:Group"..msg.chat_id..""..msg.sender_id.user_id) 
return false  
end 
Redis:del(LiOn.."LiOn:Redis:Id:Group"..msg.chat_id..""..msg.sender_id.user_id) 
Redis:set(LiOn.."LiOn:Set:Id:Group"..msg.chat_id,text:match("(.*)"))
luatele.sendText(msg_chat_id,msg_id,'❆︙تم تعيين الايدي الجديد',"md",true)  
end
if Redis:get(LiOn.."LiOn:Redis:Id:Groups"..msg.chat_id..""..msg.sender_id.user_id) then 
if text == 'الغاء' then 
luatele.sendText(msg_chat_id,msg_id, "\n❆︙تم الغاء امر تعيين الايدي","md",true)  
Redis:del(LiOn.."LiOn:Redis:Id:Groups"..msg.chat_id..""..msg.sender_id.user_id) 
return false  
end 
Redis:del(LiOn.."LiOn:Redis:Id:Groups"..msg.chat_id..""..msg.sender_id.user_id) 
Redis:set(LiOn.."LiOn:Set:Id:Groups",text:match("(.*)"))
luatele.sendText(msg_chat_id,msg_id,'❆︙تم تعيين الايدي الجديد عام',"md",true)  
end
if Redis:get(LiOn.."LiOn:Change:Name:Bot"..msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر ❆' then   
Redis:del(LiOn.."LiOn:Change:Name:Bot"..msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id, "\n❆︙تم الغاء امر تغير اسم البوت","md",true)  
end 
Redis:del(LiOn.."LiOn:Change:Name:Bot"..msg.sender_id.user_id) 
Redis:set(LiOn.."LiOn:Name:Bot",text) 
return luatele.sendText(msg_chat_id,msg_id, "❆︙ تم تغير اسم البوت الى - "..text,"md",true)    
end 
if Redis:get(LiOn.."LiOn:Change:Start:Bot"..msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر ❆' then   
Redis:del(LiOn.."LiOn:Change:Start:Bot"..msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id, "\n❆︙تم الغاء امر تغير كليشه start","md",true)  
end 
Redis:del(LiOn.."LiOn:Change:Start:Bot"..msg.sender_id.user_id) 
Redis:set(LiOn.."LiOn:Start:Bot",text) 
return luatele.sendText(msg_chat_id,msg_id, "❆︙ تم تغيير كليشه start - "..text,"md",true)    
end 
if Redis:get(LiOn.."LiOn:Game:Smile"..msg.chat_id) then
if text == Redis:get(LiOn.."LiOn:Game:Smile"..msg.chat_id) then
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(LiOn.."LiOn:Game:Smile"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لقد فزت في اللعبه \n❆︙اللعب مره اخره وارسل - سمايل او سمايلات","md",true)  
end
end 
if Redis:get(LiOn.."LiOn:Game:Monotonous"..msg.chat_id) then
if text == Redis:get(LiOn.."LiOn:Game:Monotonous"..msg.chat_id) then
Redis:del(LiOn.."LiOn:Game:Monotonous"..msg.chat_id)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لقد فزت في اللعبه \n❆︙اللعب مره اخره وارسل - الاسرع او ترتيب","md",true)  
end
end 
if Redis:get(LiOn.."LiOn:Game:alam"..msg.chat_id) then
if text == Redis:get(LiOn.."LiOn:Game:alam"..msg.chat_id) then
Redis:del(LiOn.."LiOn:Game:alam"..msg.chat_id)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لقد فزت في اللعبه \n❆︙اللعب مره اخره وارسل - اعلام","md",true)  
end
end 
if Redis:get(LiOn.."LiOn:Game:ausm"..msg.chat_id) then
if text == Redis:get(LiOn.."LiOn:Game:ausm"..msg.chat_id) then
Redis:del(LiOn.."LiOn:Game:ausm"..msg.chat_id)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لقد فزت في اللعبه \n❆︙اللعب مره اخره وارسل - عواصم","md",true)  
end
end 
if Redis:get(LiOn.."LiOn:Game:Riddles"..msg.chat_id) then
if text == Redis:get(LiOn.."LiOn:Game:Riddles"..msg.chat_id) then
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(LiOn.."LiOn:Game:Riddles"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لقد فزت في اللعبه \n❆︙اللعب مره اخره وارسل - حزوره","md",true)  
end
end
if Redis:get(LiOn.."LiOn:Game:Meaningof"..msg.chat_id) then
if text == Redis:get(LiOn.."LiOn:Game:Meaningof"..msg.chat_id) then
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(LiOn.."LiOn:Game:Meaningof"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لقد فزت في اللعبه \n❆︙اللعب مره اخره وارسل - معاني","md",true)  
end
end
if Redis:get(LiOn.."LiOn:Game:Reflection"..msg.chat_id) then
if text == Redis:get(LiOn.."LiOn:Game:Reflection"..msg.chat_id) then
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(LiOn.."LiOn:Game:Reflection"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لقد فزت في اللعبه \n❆︙اللعب مره اخره وارسل - العكس","md",true)  
end
end
if Redis:get(LiOn.."LiOn:Game:Estimate"..msg.chat_id..msg.sender_id.user_id) then  
if text and text:match("^(%d+)$") then
local NUM = text:match("^(%d+)$")
if tonumber(NUM) > 20 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙عذرآ لا يمكنك تخمين عدد اكبر من ال { 20 } خمن رقم ما بين ال{ 1 و 20 }\n","md",true)  
end 
local GETNUM = Redis:get(LiOn.."LiOn:Game:Estimate"..msg.chat_id..msg.sender_id.user_id)
if tonumber(NUM) == tonumber(GETNUM) then
Redis:del(LiOn.."LiOn:SADD:NUM"..msg.chat_id..msg.sender_id.user_id)
Redis:del(LiOn.."LiOn:Game:Estimate"..msg.chat_id..msg.sender_id.user_id)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id,5)  
return luatele.sendText(msg_chat_id,msg_id,"❆︙مبروك فزت ويانه وخمنت الرقم الصحيح\n🚸︙تم اضافة { 5 } من النقاط \n","md",true)  
elseif tonumber(NUM) ~= tonumber(GETNUM) then
Redis:incrby(LiOn.."LiOn:SADD:NUM"..msg.chat_id..msg.sender_id.user_id,1)
if tonumber(Redis:get(LiOn.."LiOn:SADD:NUM"..msg.chat_id..msg.sender_id.user_id)) >= 3 then
Redis:del(LiOn.."LiOn:SADD:NUM"..msg.chat_id..msg.sender_id.user_id)
Redis:del(LiOn.."LiOn:Game:Estimate"..msg.chat_id..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اوبس لقد خسرت في اللعبه \n❆︙حظآ اوفر في المره القادمه \n❆︙كان الرقم الذي تم تخمينه { "..GETNUM.." }","md",true)  
else
return luatele.sendText(msg_chat_id,msg_id,"❆︙اوبس تخمينك غلط \n❆︙ارسل رقم تخمنه مره اخرى ","md",true)  
end
end
end
end
if Redis:get(LiOn.."LiOn:Game:Difference"..msg.chat_id) then
if text == Redis:get(LiOn.."LiOn:Game:Difference"..msg.chat_id) then 
Redis:del(LiOn.."LiOn:Game:Difference"..msg.chat_id)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لقد فزت في اللعبه \n❆︙اللعب مره اخره وارسل - المختلف","md",true)  
end
end
if Redis:get(LiOn.."LiOn:Game:Example"..msg.chat_id) then
if text == Redis:get(LiOn.."LiOn:Game:Example"..msg.chat_id) then 
Redis:del(LiOn.."LiOn:Game:Example"..msg.chat_id)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لقد فزت في اللعبه \n❆︙اللعب مره اخره وارسل - امثله","md",true)  
end
end
-------*****************-------*****************-------*****************

if text and text:match("^(.*)$") then
if Redis:get(LiOn.."gamebot:Set:Manager:rd"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
Redis:set(LiOn.."gamebot:Set:Manager:rd"..msg.sender_id.user_id..":"..msg.chat_id,"true1uu")
Redis:sadd(LiOn.."gamebot:List:Manager", text)
return luatele.sendText(msg.chat_id,msg.id,'\nتم حفظ السؤال بنجاح')
end
end

if text and text:match("^(.*)$") then
if Redis:get(LiOn.."gamebot:Set:Manager:rdd"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
Redis:set(LiOn.."gamebot:Set:Manager:rdd"..msg.sender_id.user_id..":"..msg.chat_id,"true1uu")
Redis:srem(LiOn.."gamebot:List:Manager", text)
return luatele.sendText(msg.chat_id,msg.id,'\nتم مسح السؤال بنجاح')
end
end

if Redis:get(LiOn.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'start' then
if msg.content.audio then  
Redis:set(LiOn.."audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,msg.content.audio.audio.remote.id)  
Redis:sadd(LiOn.."audio:Games:Bot",msg.content.audio.audio.remote.id)  
Redis:set(LiOn.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'started')
return luatele.sendText(msg.chat_id, msg.id,'❆** ارسل الجواب الان ...')
end   
end

if Redis:get(LiOn.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'started' then
local Id_audio = Redis:get(LiOn.."audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
Redis:set(LiOn..'Text:Games:audio'..Id_audio,text)
Redis:del(LiOn.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
return luatele.sendText(msg.chat_id, msg.id,'❆** تم حفظ السؤال وتم حفظ الجواب بنجاح ')
end

if Redis:get(LiOn..'Games:Set:Answer'..msg.chat_id) then
if text == ""..(Redis:get(LiOn..'Games:Set:Answer'..msg.chat_id) or '66765$47').."" then 
Redis:del(LiOn.."Games:Set:Answer"..msg.chat_id)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id,5)  
Redis:del(LiOn.."Games:Set:Answer"..msg.chat_id)
return luatele.sendText(msg.chat_id,msg.id,'*❆︙الف مبروك اجابتك صحيحه تم اضافه لك 5 نقاط*')
end
end
if Redis:get(LiOn.."mero:All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'startdel' then
if not Redis:sismember(LiOn.."mero:All:text:Games:Bot",text) then
luatele.sendText(msg_chat_id,msg_id,'❆︙ لا يوجد صوتيه بهذا الاسم في العامه')
Redis:del(LiOn.."mero:All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
return false
end
Redis:del(LiOn.."mero:All:audio:Games"..text)
Redis:srem(LiOn.."mero:All:text:Games:Bot",text)  
Redis:del(LiOn.."mero:All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id,'❆︙ تم مسح الصوتيه بنجاح')
return false
end

if Redis:get(LiOn.."mero:All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'start' then
Redis:set(LiOn..'mero:All:Text:Games:audio'..msg.chat_id,text)
Redis:sadd(LiOn.."mero:All:text:Games:Bot",text)  
Redis:set(LiOn.."mero:All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'started')
luatele.sendText(msg_chat_id,msg_id,'❆︙الان ارسل الصوتيه ليتم حفظها باسم  : '..text)
return false
end
if Redis:get(LiOn.."mero:All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'started' then
if msg.content.audio then  
local nameaudio = Redis:get(LiOn..'mero:All:Text:Games:audio'..msg.chat_id)
Redis:set(LiOn.."mero:All:audio:Games"..nameaudio,msg.content.audio.audio.remote.id)  
Redis:del(LiOn.."mero:All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id,'❆︙ تم حفظ الصوتيه باسم : '..nameaudio)
return false
end   
end
if text and not Redis:get(LiOn..'lock_geamsAudio'..msg.chat_id) then
local nameaudio = Redis:get(LiOn.."mero:All:audio:Games"..text)
if nameaudio then
luatele.sendAudio(msg_chat_id, msg.id,nameaudio , '', "md") 
end
end

if Redis:get(LiOn.."mero:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'startdel' then
if not Redis:sismember(LiOn.."mero:text:Games:Bot"..msg.chat_id,text) then
luatele.sendText(msg_chat_id,msg_id,'❆︙ لا يوجد صوتيه بهذا الاسم في المجموعه')
Redis:del(LiOn.."mero:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
return false
end
Redis:del(LiOn.."mero:audio:Games"..msg.chat_id..text)
Redis:srem(LiOn.."mero:text:Games:Bot"..msg.chat_id,text)  
Redis:del(LiOn.."mero:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id,'❆︙ تم مسح الصوتيه بنجاح')
return false
end

if Redis:get(LiOn.."mero:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'start' then
Redis:set(LiOn..'mero:Text:Games:audio'..msg.chat_id,text)
Redis:sadd(LiOn.."mero:text:Games:Bot"..msg.chat_id,text)  
Redis:set(LiOn.."mero:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'started')
luatele.sendText(msg_chat_id,msg_id,'❆︙الان ارسل الصوتيه ليتم حفضها باسم  : '..text)
return false
end
if Redis:get(LiOn.."mero:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'started' then
if msg.content.audio then  
local nameaudio = Redis:get(LiOn..'mero:Text:Games:audio'..msg.chat_id)
Redis:set(LiOn.."mero:audio:Games"..msg.chat_id..nameaudio,msg.content.audio.audio.remote.id)  
Redis:del(LiOn.."mero:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id,'❆︙ تم حفظ الصوتيه باسم : '..nameaudio)
return false
end   
end
if text and not Redis:get(LiOn..'lock_geamsAudio1'..msg.chat_id) then
local nameaudio = Redis:get(LiOn.."mero:audio:Games"..msg.chat_id..text)
if nameaudio then
luatele.sendAudio(msg_chat_id, msg.id,nameaudio , '', "md") 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "truedel" then
Redis:set(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"truefguigf1")
Redis:del(LiOn.."gamebot:newqus"..msg.chat_id,text)
Redis:srem(LiOn.."gamebot:new1", text)
return luatele.sendText(msg_chat_id,msg_id, '\nتم مسح السؤال بنجاح') 
end
end

if text and text:match("^(.*)$") then
if Redis:get(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
Redis:set(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true1")
Redis:set(LiOn.."gamebot:newqus"..msg.chat_id,text)
Redis:sadd(LiOn.."gamebot:new1", text)
return luatele.sendText(msg_chat_id,msg_id, '\nتم حفظ السؤال بنجاح \n ارسل الجواب الاول') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true1" then
local quschen = Redis:get(LiOn.."gamebot:newqus"..msg.chat_id)
Redis:set(LiOn.."gamebot:newqus:as1"..quschen,text)
Redis:set(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true2")
return luatele.sendText(msg_chat_id,msg_id, ' \n ارسل الجواب الثاني') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true2" then
local quschen = Redis:get(LiOn.."gamebot:newqus"..msg.chat_id)
Redis:set(LiOn.."gamebot:newqus:as2"..quschen,text)
Redis:set(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true3")
return luatele.sendText(msg_chat_id,msg_id, '\n ارسل الجواب الثالث') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true3" then
local quschen = Redis:get(LiOn.."gamebot:newqus"..msg.chat_id)
Redis:set(LiOn.."gamebot:newqus:as3"..quschen,text)
Redis:set(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true4")
return luatele.sendText(msg_chat_id,msg_id, '\n ارسل الجواب الرابع') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true4" then
local quschen = Redis:get(LiOn.."gamebot:newqus"..msg.chat_id)
Redis:set(LiOn.."gamebot:newqus:as0"..quschen,text)
Redis:set(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true44")
return luatele.sendText(msg_chat_id,msg_id, '\nتم حفظ الاجوبه \n ارسل الجواب الصحيح') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true44" then
local quschen = Redis:get(LiOn.."gamebot:newqus"..msg.chat_id)
Redis:set(LiOn.."gamebot:newqus:as4"..quschen,text)
Redis:set(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true186")
return luatele.sendText(msg_chat_id,msg_id, '\nتم حفظ الجواب الصحيح') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "truedel" then
luatele.sendText(msg_chat_id,msg_id, '\nتم مسح الغز بنجاح')
Redis:set(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"truefguigf1")
Redis:del(LiOn.."lkz:gamebot:newqus"..msg.chat_id,text)
Redis:srem(LiOn.."lkz:gamebot:new1", text)
return false 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
luatele.sendText(msg_chat_id,msg_id, '\nتم حفظ اللغز بنجاح \n ارسل الجواب الاول')
Redis:set(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true1")
Redis:set(LiOn.."lkz:gamebot:newqus"..msg.chat_id,text)
Redis:sadd(LiOn.."lkz:gamebot:new1", text)
return false 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true1" then
luatele.sendText(msg_chat_id,msg_id, ' \n ارسل الجواب الثاني')
local quschen = Redis:get(LiOn.."lkz:gamebot:newqus"..msg.chat_id)
Redis:set(LiOn.."lkz:gamebot:newqus:as1"..quschen,text)
Redis:set(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true2")
return false 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true2" then
luatele.sendText(msg_chat_id,msg_id, '\n ارسل الجواب الثالث')
local quschen = Redis:get(LiOn.."lkz:gamebot:newqus"..msg.chat_id)
Redis:set(LiOn.."lkz:gamebot:newqus:as2"..quschen,text)
Redis:set(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true3")
return false 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true3" then
luatele.sendText(msg_chat_id,msg_id, ' \n ارسل الجواب الصحيح')
local quschen = Redis:get(LiOn.."lkz:gamebot:newqus"..msg.chat_id)
Redis:set(LiOn.."lkz:gamebot:newqus:as3"..quschen,text)
Redis:set(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true44")
return false 
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true44" then
luatele.sendText(msg_chat_id,msg_id, '\nتم حفظ الجواب الصحيح')
local quschen = Redis:get(LiOn.."lkz:gamebot:newqus"..msg.chat_id)
Redis:set(LiOn.."lkz:gamebot:newqus:as4"..quschen,text)
Redis:set(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true186")
return false 
end
end
if Redis:get(LiOn..":"..msg.sender_id.user_id..":lov_Bots"..msg.chat_id) == "sendlove" then
num = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","😁 98","😀 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnum = num[math.random(#num)]
local tttttt = '✫: اليك النتائج الخـاصة :\n\n✫: نسبة الحب بيـن : *'..text..'* '..sendnum..'%'
luatele.sendText(msg_chat_id,msg_id,tttttt) 
Redis:del(LiOn..":"..msg.sender_id.user_id..":lov_Bots"..msg.chat_id)
end
if Redis:get(LiOn..":"..msg.sender_id.user_id..":lov_Bottts"..msg.chat_id) == "sendlove" then
num = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","😁 98","😀 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnum = num[math.random(#num)]
local tttttt = '✫: اليك النتائج الخـاصة :\n\n✫: نسبة الغباء  : *'..text..'* '..sendnum..'%'
luatele.sendText(msg_chat_id,msg_id,tttttt) 
Redis:del(LiOn..":"..msg.sender_id.user_id..":lov_Bottts"..msg.chat_id)
end
if Redis:get(LiOn..":"..msg.sender_id.user_id..":lov_Botttuus"..msg.chat_id) == "sendlove" then
num = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","😁 98","😀 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnum = num[math.random(#num)]
local tttttt = '✫: اليك النتائج الخـاصة :\n\n✫: نسبة الذكاء  : *'..text..'* '..sendnum..'%'
luatele.sendText(msg_chat_id,msg_id,tttttt) 
Redis:del(LiOn..":"..msg.sender_id.user_id..":lov_Botttuus"..msg.chat_id)
end
if text and Redis:get(LiOn..":"..msg.sender_id.user_id..":krh_Bots"..msg.chat_id) == "sendkrhe" then
num = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","😁 98","😀 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnum = num[math.random(#num)]
local tttttt = '⌯ اليك النتائج الخـاصة :\n\n⌯ نسبه الكرة : *'..text..'* '..sendnum..'%'
luatele.sendText(msg_chat_id,msg_id,tttttt) 
Redis:del(LiOn..":"..msg.sender_id.user_id..":krh_Bots"..msg.chat_id)
end
if text and text ~="نسبه الرجوله" and Redis:get(LiOn..":"..msg.sender_id.user_id..":rjo_Bots"..msg.chat_id) == "sendrjoe" then
numj = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","😁 98","🥰 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnuj = numj[math.random(#numj)]
local tttttt = '✫: اليك النتائج الخـاصة :\n\n✫:  نسبة الرجوله لـ : *'..text..'* '..sendnuj..'%'
luatele.sendText(msg_chat_id,msg_id,tttttt) 
Redis:del(LiOn..":"..msg.sender_id.user_id..":rjo_Bots"..msg.chat_id)
end
if text and text ~="نسبه الانوثه" and Redis:get(LiOn..":"..msg.sender_id.user_id..":ano_Bots"..msg.chat_id) == "sendanoe" then
numj = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","?? 98","😀 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnuj = numj[math.random(#numj)]
local tttttt = '✫: اليك النتائج الخـاصة :\n\n✫:  نسبه الانوثة لـ : *'..text..'* '..sendnuj..'%'
luatele.sendText(msg_chat_id,msg_id,tttttt) 
Redis:del(LiOn..":"..msg.sender_id.user_id..":ano_Bots"..msg.chat_id)
end

if text and text:match("^(.*)$") then
if Redis:get(LiOn.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
luatele.sendText(msg_chat_id,msg_id, '\n❆︙ارسل الجواب الاول للرد الان ')
Redis:set(LiOn.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id, "true1")
Redis:set(LiOn.."botss:merox:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id, text)
Redis:sadd(LiOn.."botss:merox:List:Rd:Sudo"..msg.chat_id, text)
return false end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."botss:merox:Set:On"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم مسح الرد من الردود المتعدده")
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:video"..text..msg.chat_id)  
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:gif"..text..msg.chat_id)  
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:photo"..text..msg.chat_id)  
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:video1"..text..msg.chat_id)  
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:gif1"..text..msg.chat_id)  
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:photo1"..text..msg.chat_id)  
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:video2"..text..msg.chat_id)  
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:gif2"..text..msg.chat_id)  
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:photo2"..text..msg.chat_id)  

Redis:del(LiOn..'botss:merox:Add:Rd:Sudo:Text'..text..msg.chat_id)
Redis:del(LiOn..'botss:merox:Add:Rd:Sudo:Text1'..text..msg.chat_id)
Redis:del(LiOn..'botss:merox:Add:Rd:Sudo:Text2'..text..msg.chat_id)
Redis:del(LiOn.."botss:merox:Set:On"..msg.sender_id.user_id..":"..msg.chat_id)
Redis:srem(LiOn.."botss:merox:List:Rd:Sudo"..msg.chat_id, text)
return false
end
end

if text or msg.content.video or msg.content.animation or msg.content.photo then
local test = Redis:get(LiOn.."botss:merox:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(LiOn.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "true1" then
Redis:set(LiOn.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd1')

if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:photo"..test..msg.chat_id, idPhoto)  
elseif msg.content.animation then
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:gif"..test..msg.chat_id, msg.content.animation.animation.remote.id)  
elseif msg.content.video then 
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:video"..test..msg.chat_id, msg.content.video.video.remote.id)  
elseif text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:Text"..test..msg.chat_id, text)  
end  
luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم الحفظ ارسل الجواب الثاني")
return false  
end  
end
if text or msg.content.video or msg.content.animation or msg.content.photo then
local test = Redis:get(LiOn.."botss:merox:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(LiOn.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "rd1" then
Redis:set(LiOn.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd2')
if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:photo1"..test..msg.chat_id, idPhoto)  
elseif msg.content.animation then
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:gif1"..test..msg.chat_id, msg.content.animation.animation.remote.id)  
elseif msg.content.video then 
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:video1"..test..msg.chat_id, msg.content.video.video.remote.id)  
elseif text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:Text1"..test..msg.chat_id, text)  
end  
luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم الحفظ ارسل الجواب الثالث")
return false  
end  
end
if text or msg.content.video or msg.content.animation or msg.content.photo then
local test = Redis:get(LiOn.."botss:merox:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(LiOn.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "rd2" then
Redis:set(LiOn.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd3')
if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:photo2"..test..msg.chat_id, idPhoto)  
elseif msg.content.animation then
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:gif2"..test..msg.chat_id, msg.content.animation.animation.remote.id)  
elseif msg.content.video then 
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:video2"..test..msg.chat_id, msg.content.video.video.remote.id)  
elseif text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."botss:merox:Add:Rd:Sudo:Text2"..test..msg.chat_id, text)  
end  
luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم حفظ الرد المتعدد بنجاح ✓")
return false  
end  
end
if text and not Redis:get(LiOn..'lock_repleyadded'..msg.chat_id) then
local photo = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:photo"..text..msg.chat_id)   
local photo1 = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:photo1"..text..msg.chat_id)   
local photo2 = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:photo2"..text..msg.chat_id)   
if photo or photo1 or photo2 then 
local texting = {photo,photo1,photo2}
if texting[1] ~= nil or texting[2] ~= nil or texting[3] ~= nil then
luatele.sendPhoto(msg_chat_id,msg_id, texting[math.random(#texting)],'')
end
end
local gif = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:gif"..text..msg.chat_id)   
local gif1 = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:gif1"..text..msg.chat_id)   
local gif2 = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:gif2"..text..msg.chat_id)   
if gif or gif1 or gif2 then 
local texting = {gif,gif1,gif2}
if texting[1] ~= nil or texting[2] ~= nil or texting[3] ~= nil then
luatele.sendAnimation(msg_chat_id,msg_id, texting[math.random(#texting)], '', 'md')
end
end
local video = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:video"..text..msg.chat_id)   
local video1 = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:video1"..text..msg.chat_id)   
local video2 = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:video2"..text..msg.chat_id)   
if video or video1 or video2 then 
local texting = {video,video1,video2}
if texting[1] ~= nil or texting[2] ~= nil or texting[3] ~= nil then
luatele.sendVideo(msg_chat_id,msg_id, texting[math.random(#texting)], '', "md")
end
end
local Text = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:Text"..text..msg.chat_id)   
local Text1 = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:Text1"..text..msg.chat_id)   
local Text2 = Redis:get(LiOn.."botss:merox:Add:Rd:Sudo:Text2"..text..msg.chat_id)   
if Text or Text1 or Text2 then 
local texting = {Text,Text1,Text2}
luatele.sendText(msg_chat_id,msg_id,texting[math.random(#texting)])
end
end
if text == "مسح قائمه المنع عام" then   
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:All:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:All:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:All:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:All:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:All:List:Filter"..msg_chat_id)  
if #list == 0 then  
return luatele.sendText(msg_chat_id,msg_id,"*❆︙لا يوجد كلمات ممنوعه هنا *","md",true)   
end  
for k,v in pairs(list) do  
v = v:gsub('photo:',"") 
v = v:gsub('sticker:',"") 
v = v:gsub('animation:',"") 
v = v:gsub('text:',"") 
Redis:del(LiOn.."LiOn:All:Filter:Group:"..v)  
Redis:srem(LiOn.."LiOn:All:List:Filter",v)  
end  
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح ("..#list..") كلمات ممنوعه *","md",true)   
end
if text == "قائمه المنع عام" then   
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:All:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:All:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:All:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:All:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:All:List:Filter")  
if #list == 0 then  
return luatele.sendText(msg_chat_id,msg_id,"*❆︙لا يوجد كلمات ممنوعه هنا *","md",true)   
end  
Filter = '\n*❆︙قائمه المنع \n — — — — — — — — —*\n'
for k,v in pairs(list) do  
print(v)
if v:match('photo:(.*)') then
ver = 'صوره'
elseif v:match('animation:(.*)') then
ver = 'متحركه'
elseif v:match('sticker:(.*)') then
ver = 'ملصق'
elseif v:match('text:(.*)') then
ver = v:gsub('text:',"") 
end
v = v:gsub('photo:',"") 
v = v:gsub('sticker:',"") 
v = v:gsub('animation:',"") 
v = v:gsub('text:',"") 
local Text_Filter = Redis:get(LiOn.."LiOn:All:Filter:Group:"..v)   
Filter = Filter.."*"..k.."- "..ver.." » { "..Text_Filter.." }*\n"    
end  
luatele.sendText(msg_chat_id,msg_id,Filter,"md",true)  
end  
if text == "منع عام" then       
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:All:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:All:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:All:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:All:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn..'LiOn:All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'true')
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙ارسل الان { ملصق ,متحركه ,صوره ,رساله } *',"md",true)  
end    
if text == "الغاء منع عام" then    
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:All:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:All:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:All:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:All:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn..'LiOn:All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'DelFilterq')
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙ارسل الان { ملصق ,متحركه ,صوره ,رساله } *',"md",true)  
end
if (Redis:get(LiOn..'LiOn:All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'true') then
if text or msg.content.photo or msg.content.animation or msg.content.sticker then
if msg.content.photo then
Filters = 'صوره'
Redis:sadd(LiOn.."LiOn:All:List:Filter",'photo:'..msg.content.photo.sizes[1].photo.id)  
Redis:set(LiOn.."LiOn:All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.photo.sizes[1].photo.id)  
elseif msg.content.animation then
Filters = 'متحركه'
Redis:sadd(LiOn.."LiOn:All:List:Filter",'animation:'..msg.content.animation.animation.id)  
Redis:set(LiOn.."LiOn:All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.animation.animation.id)  
elseif msg.content.sticker then
Filters = 'ملصق'
Redis:sadd(LiOn.."LiOn:All:List:Filter",'sticker:'..msg.content.sticker.sticker.id)  
Redis:set(LiOn.."LiOn:All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.sticker.sticker.id)  
elseif text then
Redis:set(LiOn.."LiOn:All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, text)  
Redis:sadd(LiOn.."LiOn:All:List:Filter",'text:'..text)  
Filters = 'نص'
end
Redis:set(LiOn..'LiOn:All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'true1')
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙ارسل تحذير ( "..Filters.." ) عند ارساله","md",true)  
end
end
if text and (Redis:get(LiOn..'LiOn:All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'true1') then
local Text_Filter = Redis:get(LiOn.."LiOn:All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id)  
if Text_Filter then   
Redis:set(LiOn.."LiOn:All:Filter:Group:"..Text_Filter,text)  
end  
Redis:del(LiOn.."LiOn:All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id)  
Redis:del(LiOn..'LiOn:All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم اضافه رد التحذير","md",true)  
end

if text or msg.content.photo or msg.content.animation or msg.content.sticker then
if msg.content.photo then
DelFilters = msg.content.photo.sizes[1].photo.id
statusfilter = 'الصوره'
elseif msg.content.animation then
DelFilters = msg.content.animation.animation.id
statusfilter = 'المتحركه'
elseif msg.content.sticker then
DelFilters = msg.content.sticker.sticker.id
statusfilter = 'الملصق'
elseif text then
DelFilters = text
statusfilter = 'الرساله'
end
local ReplyFilters = Redis:get(LiOn.."LiOn:All:Filter:Group:"..DelFilters)
if ReplyFilters and not msg.Distinguished then
luatele.deleteMessages(msg.chat_id,{[1]= msg.id})
return luatele.sendText(msg_chat_id,msg_id,"*❆︙لقد تم منع هذه ( "..statusfilter.." ) هنا*\n❆︙"..ReplyFilters,"md",true)   
end
end
if text == "تفعيل الوضع المدفوع" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Get_Chat = luatele.getChat(msg_chat_id)
if not data.id then
luatele.sendText(msg_chat_id,msg_id,'- لا توجد مجموعه في البوت بهذا الايدي')
return false
end
Redis:sadd(LiOn.."BotFree:Group:",msg_chat_id)
luatele.sendText(msg_chat_id,msg_id,'❆︙تم تفعيل الوضع المدفوع بنجاح على : ['..Get_Chat.title..']')
end 
if text == "الغاء الوضع المدفوع" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:srem(LiOn.."BotFree:Group:",msg_chat_id)
luatele.sendText(msg_chat_id,msg_id,'❆︙تم الغاء الوضع المدفوع عن المجموعه ')
end 
if text and text:match('^تفعيل الوضع المدفوع (-100%d+)$') then
local Chatid = text:match('^تفعيل الوضع المدفوع (-100%d+)$')
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Get_Chat = luatele.getChat(Chatid)
if not data.id then
luatele.sendText(msg_chat_id,msg_id,'- لا توجد مجموعه في البوت بهذا الايدي')
return false
end
Redis:sadd(LiOn.."BotFree:Group:",Chatid)
luatele.sendText(msg_chat_id,msg_id,'❆︙تم تفعيل الوضع المدفوع بنجاح على : ['..Get_Chat.title..']')
end 
if text and text:match('^الغاء الوضع المدفوع (-100%d+)$') then
local Chatid = text:match('^الغاء الوضع المدفوع (-100%d+)$')
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:srem(LiOn.."BotFree:Group:",Chatid)
luatele.sendText(msg_chat_id,msg_id,'❆︙تم الغاء الوضع المدفوع عن المجموعه ')
end 


local EmojeS = {
' •🌱💚﴿ֆ ❥',
'🍿﴿ֆ ❥',
'• 🌸💸 ❥˓  ',
'🖤🌞﴿ֆ',
' • 🐼🌿﴾ֆ',
' •🙊💙﴿ֆ ❥', 
'-💁🏼‍♂️✨﴿ֆ ❥ ', 
'•|• 〄💖‘',
' ⚡️?? •|•℡', 
'- ⁽🙆‍♂️✨₎ֆ', 
'❥┇💁🏼‍♂️🔥“', 
'💜💭℡ֆ', 
'-┆💙🙋🏼‍♂️♕', 
'- ⁽🙆🏻🍿₎ֆ',
'“̯ 🐼💗 |℡',
'⁞ 🐝🍷',
'┋⁽❥̚͢₎ 🐣💗', 
'•|• ✨🌸‘',
'  ֆ 💭💔ۦ',
'ֆ 💛💭ۦ', 
'ֆ ⚡️🔱ۦ',
'℡ᴖ̈💜✨⋮', 
'⋮⁽🌔☄️₎ۦ˛',
'⁞❉💥┋♩',
' ⁞✦⁽☻🔥₎“ٰۦ',
'℡ ̇₎ ✨🐯⇣✦',
'⁞♩⁽🌞🌩₎⇣✿',
'ۦٰ‏┋❥ ͢˓🦁💛ۦ‏',
'⚡️♛ֆ₎',
'♛⇣🐰☄️₎✦',
'⁾⇣✿💖┊❥',
' ₎✿💥😈 ⁞“❥', 
'😴🌸✿⇣',
'❥┊⁽ ℡🦁🌸'
}

local Emoje = {
'║👹💥ᵛ͢ᵎᵖ ⌯﴾❥',
'₎??🍥۶ֆ',
'♩┊💎🌸❥ ₎',
'₎❆😻🌸⇣',
'┊🏻“👄🌺) ℡',
'❥ֆ☄⚡️ ᴗ̈',
'❥•َ⚡️ْ🦇️͢ֆ⸽',
'♜🌸🐝 ⁞',
'║♜💛⚡️͢₎⇣✿ ⁞',
'⌯⇣✿💙☄ ⁞﴾❥',
'¦⇣👽♜͢ ⁞',
'❥•َْ👻⚡️͢⸽۶ֆ',
'ֆ⸽♜👹🔥͢₎⇣',
'⌯⇣✿💙☄ ⁞﴾❥',
'♛⌗👽ᵛ🚀﴾⌯',
' ❀🎼🌸℡³¹³',
' ⁞ 🐝🍷',
'• 🐼🌿﴾ֆ',
'🐳🍥۶',
'┊※🏎️‘’💛',
'❥┊⁽ ℡🦁??',
'😴🌸✿⇣',
'₎❆😻🌸⇣',
'💁🏼‍♂️✨﴿ֆ ❥',
'┆💙🙋🏼‍♂️♕',
'➤🙇🏼ֆ﴾',
'˛⁽💆🏻‍♂🌙₎⇣✿',
'ཻ ☫ٰ⇣🐼💙ֆ℠',
'℡ 🌞🔥‎‏ ⁾┊',
'┊💎🌸❥ ₎',
'∬💛✨ֆ',
'🌸💸 ❥˓',
' ⁽࿑♚꫶😼ֆ﴾',
'❥•َ⚡️🦇️ֆ⸽',
'🍿﴿ֆ ❥',
'ᵛ͢ᵎᵖ📯💛﴾'
}
if Redis:get(LiOn..":ZhrfNow:ar"..msg.sender_id.user_id) then
Redis:del(LiOn..":ZhrfNow:ar"..msg.sender_id.user_id)
if string.len(text) > 300 then
return luatele.sendText(msg_chat_id,msg_id,"❆| لا يمكنك زخرفه اكثر من 20 حرف \n❆| ارسل امر زخرفه وحاول مجددا بحروف اقل","md",true)      
elseif text:match("\n") then
return luatele.sendText(msg_chat_id,msg_id,"❆| لا يمكن زخرفه نص يحتوي على اكثر من سطر .","md",true)  
end

local Zh_Ar13 = text:gsub('ض', 'ضِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ص', 'صِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ث', 'ثِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ق', 'قِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ف', 'فِٰ͒ــ')
Zh_Ar13 = Zh_Ar13:gsub('غ', 'غِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ع', 'عِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('خ', 'خِٰ̐ــ')
Zh_Ar13 = Zh_Ar13:gsub('ح', 'حِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ج', 'جِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ش', 'شِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('س', 'سِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ي', 'يِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ب', 'بِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ل', 'لِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ا', 'آ')
Zh_Ar13 = Zh_Ar13:gsub('ت', 'تِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ن', 'نِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('م', 'مِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ك', 'ڪِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ط', 'طِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ظ', 'ظِٰــ')
Zh_Ar13 = Zh_Ar13:gsub('ء', 'ء')
Zh_Ar13 = Zh_Ar13:gsub('ؤ', 'ؤ')
Zh_Ar13 = Zh_Ar13:gsub('ر', 'ر')
Zh_Ar13 = Zh_Ar13:gsub('ى', 'ى')
Zh_Ar13 = Zh_Ar13:gsub('ز', 'ز')
Zh_Ar13 = Zh_Ar13:gsub('و', 'ﯛ̲୭')
Zh_Ar13 = Zh_Ar13:gsub("ه", "໋۠هہؚ")
local Zh_Ar12 = text:gsub('ا','آ')
Zh_Ar12 = Zh_Ar12:gsub("ب","بّہ")
Zh_Ar12 = Zh_Ar12:gsub("ت","تَہَٰ")
Zh_Ar12 = Zh_Ar12:gsub("ح","حہٰٰ")
Zh_Ar12 = Zh_Ar12:gsub("ج","جْۧ")
Zh_Ar12 = Zh_Ar12:gsub("خ","خٰ̐ہ")
Zh_Ar12 = Zh_Ar12:gsub("د","د")
Zh_Ar12 = Zh_Ar12:gsub("ذ","ذِ")
Zh_Ar12 = Zh_Ar12:gsub("ر","ر")
Zh_Ar12 = Zh_Ar12:gsub("ز","زَ")
Zh_Ar12 = Zh_Ar12:gsub("س","سٰٰٓ")
Zh_Ar12 = Zh_Ar12:gsub("ش","شِٰہٰٰ")
Zh_Ar12 = Zh_Ar12:gsub("ص","صۛہٰٰ")
Zh_Ar12 = Zh_Ar12:gsub("ض","ضۜہٰٰ")
Zh_Ar12 = Zh_Ar12:gsub("ظ","ظۗہٰٰ")
Zh_Ar12 = Zh_Ar12:gsub("غ","غہٰٰ")
Zh_Ar12 = Zh_Ar12:gsub("ف","ف͒ہٰٰ")
Zh_Ar12 = Zh_Ar12:gsub("ق","قྀ̲ہٰٰٰ")
Zh_Ar12 = Zh_Ar12:gsub("ك","ڪٰྀہٰٰٖ")
Zh_Ar12 = Zh_Ar12:gsub("ل","ل")
Zh_Ar12 = Zh_Ar12:gsub("ن","نَِٰہٰ")
Zh_Ar12 = Zh_Ar12:gsub("ه","ھہ")
Zh_Ar12 = Zh_Ar12:gsub("و","وِ")
Zh_Ar12 = Zh_Ar12:gsub("طۨہٰٰ","ط")
Zh_Ar12 = Zh_Ar12:gsub("ث","ثہٰٰ")
Zh_Ar12 = Zh_Ar12:gsub("ي","يِٰہ")
Zh_Ar12 = Zh_Ar12:gsub("ع","؏ۤـہٰٰ")
local Zh_Ar11 = text:gsub('ض', 'ضُ͠')
Zh_Ar11 = Zh_Ar11:gsub('ص', 'صّ͠')
Zh_Ar11 = Zh_Ar11:gsub('ث', 'ثُ͠')
Zh_Ar11 = Zh_Ar11:gsub('ق', 'ق͠')
Zh_Ar11 = Zh_Ar11:gsub('ف', 'ف͠')
Zh_Ar11 = Zh_Ar11:gsub('غ', 'غ͠')
Zh_Ar11 = Zh_Ar11:gsub('ع', 'ع͠')
Zh_Ar11 = Zh_Ar11:gsub('خ', 'ٌخ͠')
Zh_Ar11 = Zh_Ar11:gsub('ح', 'حُ͠')
Zh_Ar11 = Zh_Ar11:gsub('ج', 'جْ͠')
Zh_Ar11 = Zh_Ar11:gsub('ش', 'شِ͠')
Zh_Ar11 = Zh_Ar11:gsub('س', 'سِ͠')
Zh_Ar11 = Zh_Ar11:gsub('ي', 'ي͠')
Zh_Ar11 = Zh_Ar11:gsub('ب', 'بّ͠')
Zh_Ar11 = Zh_Ar11:gsub('ل', 'ل͠')
Zh_Ar11 = Zh_Ar11:gsub('ا', 'ا')
Zh_Ar11 = Zh_Ar11:gsub('ت', 'تْ͠')
Zh_Ar11 = Zh_Ar11:gsub('ن', 'ن͠')
Zh_Ar11 = Zh_Ar11:gsub('م', 'م͠')
Zh_Ar11 = Zh_Ar11:gsub('ك', 'گ͠')
Zh_Ar11 = Zh_Ar11:gsub('طِ', 'ط͠')
Zh_Ar11 = Zh_Ar11:gsub('ظ', 'ظٌ͠')
Zh_Ar11 = Zh_Ar11:gsub('ء', '͠ء')
Zh_Ar11 = Zh_Ar11:gsub('وَ', 'و͠')
Zh_Ar11 = Zh_Ar11:gsub('ر', 'ر͠')
Zh_Ar11 = Zh_Ar11:gsub('ى', '͠ى')
Zh_Ar11 = Zh_Ar11:gsub('ز', 'ز͠')
Zh_Ar11 = Zh_Ar11:gsub('ض','ض͠')
Zh_Ar11 = Zh_Ar11:gsub('و', 'وَ͠')
Zh_Ar11 = Zh_Ar11:gsub("ه", "ه͠")
local Zh_Ar10 = text:gsub('ض', 'ضِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ص', 'صِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ث', 'ثِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ق', 'قِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ف', 'فِ͒ـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('غ', 'غِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ع', 'عِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('خ', 'خِ̐ـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ح', 'حِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ج', 'جِـٰٚـِِـٰٚـِْ')
Zh_Ar10 = Zh_Ar10:gsub('ش', 'شِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('س', 'سِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ي', 'يِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ب', 'بِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ل', 'لِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ا', 'آ')
Zh_Ar10 = Zh_Ar10:gsub('ت', 'تِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ن', 'نِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('م', 'مِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ك', 'ڪِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ط', 'طِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ذ', 'ذِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ظ', 'ظِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('ء', 'ء')
Zh_Ar10 = Zh_Ar10:gsub('ؤ', 'ؤ')
Zh_Ar10 = Zh_Ar10:gsub('ر', 'ر')
Zh_Ar10 = Zh_Ar10:gsub('ى', 'ى')
Zh_Ar10 = Zh_Ar10:gsub('ز', 'ز')
Zh_Ar10 = Zh_Ar10:gsub('ظ', 'ظِـٰٚـ')
Zh_Ar10 = Zh_Ar10:gsub('و', 'ﯛ̲୭')
Zh_Ar10 = Zh_Ar10:gsub("ه", "ۿۿہ")
local Zh_Ar9  = text:gsub('ض', 'ض')
Zh_Ar9 = Zh_Ar9:gsub('ص', 'صہٰ')
Zh_Ar9 = Zh_Ar9:gsub('ث', 'ثہٰـ')
Zh_Ar9 = Zh_Ar9:gsub('ق', 'قہٰ')
Zh_Ar9 = Zh_Ar9:gsub('ف', 'فہٰ')
Zh_Ar9 = Zh_Ar9:gsub('غ', 'غـْ')
Zh_Ar9 = Zh_Ar9:gsub('ع', 'ع')
Zh_Ar9 = Zh_Ar9:gsub('ه', 'هٰہٰٖ')
Zh_Ar9 = Zh_Ar9:gsub('خ', 'خخَـ')
Zh_Ar9 = Zh_Ar9:gsub('ح', 'حہٰ')
Zh_Ar9 = Zh_Ar9:gsub('ج', 'ججہٰ')
Zh_Ar9 = Zh_Ar9:gsub('د', 'دَ')
Zh_Ar9 = Zh_Ar9:gsub('ذ', 'ذّ')
Zh_Ar9 = Zh_Ar9:gsub('ش', 'ششہٰ')
Zh_Ar9 = Zh_Ar9:gsub('س', 'سہٰ')
Zh_Ar9 = Zh_Ar9:gsub('ي', 'يٰ')
Zh_Ar9 = Zh_Ar9:gsub('ب', 'بٰٰ')
Zh_Ar9 = Zh_Ar9:gsub('ل', 'لہٰ')
Zh_Ar9 = Zh_Ar9:gsub('ا', 'آ')
Zh_Ar9 = Zh_Ar9:gsub('ت', 'تہٰ')
Zh_Ar9 = Zh_Ar9:gsub('ن', 'نہٰ')
Zh_Ar9 = Zh_Ar9:gsub('م', 'مہٰ')
Zh_Ar9 = Zh_Ar9:gsub('ك', 'ككہٰ')
Zh_Ar9 = Zh_Ar9:gsub('ط', 'طہٰ')
Zh_Ar9 = Zh_Ar9:gsub('ئ', ' ْئٰ')
Zh_Ar9 = Zh_Ar9:gsub('ء', 'ء')
Zh_Ar9 = Zh_Ar9:gsub('ؤ', 'ؤؤَ')
Zh_Ar9 = Zh_Ar9:gsub('ر', 'رَ')
Zh_Ar9 = Zh_Ar9:gsub('لا', 'لہٰا')
Zh_Ar9 = Zh_Ar9:gsub('ى', 'ىہٰ')
Zh_Ar9 = Zh_Ar9:gsub('ة', 'ة')
Zh_Ar9 = Zh_Ar9:gsub('و', 'ہٰو')
Zh_Ar9 = Zh_Ar9:gsub('ز', 'ز')
Zh_Ar9 = Zh_Ar9:gsub('ظ', 'ظہٰ')
local Zh_Ar8  = text:gsub('ض', 'ضہ')
Zh_Ar8 = Zh_Ar8:gsub('ص', 'صہ')
Zh_Ar8 = Zh_Ar8:gsub('ث', 'ثہ')
Zh_Ar8 = Zh_Ar8:gsub('ق', 'قہ')
Zh_Ar8 = Zh_Ar8:gsub('ف', 'فہ')
Zh_Ar8 = Zh_Ar8:gsub('غ', 'غہ')
Zh_Ar8 = Zh_Ar8:gsub('ع', 'عہ')
Zh_Ar8 = Zh_Ar8:gsub('خ', 'خہ')
Zh_Ar8 = Zh_Ar8:gsub('ح', 'حہ')
Zh_Ar8 = Zh_Ar8:gsub('ج', 'جہ')
Zh_Ar8 = Zh_Ar8:gsub('ش', 'شہ')
Zh_Ar8 = Zh_Ar8:gsub('س', 'سہ')
Zh_Ar8 = Zh_Ar8:gsub('ي', 'يہ')
Zh_Ar8 = Zh_Ar8:gsub('ب', 'بہ')
Zh_Ar8 = Zh_Ar8:gsub('ل', 'ل')
Zh_Ar8 = Zh_Ar8:gsub('ا', 'آ')
Zh_Ar8 = Zh_Ar8:gsub('ت', 'تہ')
Zh_Ar8 = Zh_Ar8:gsub('ن', 'نہ')
Zh_Ar8 = Zh_Ar8:gsub('م', 'مہ')
Zh_Ar8 = Zh_Ar8:gsub('ك', 'كہ')
Zh_Ar8 = Zh_Ar8:gsub('ط', 'طہ')
Zh_Ar8 = Zh_Ar8:gsub('ظ', 'ظہ')
Zh_Ar8 = Zh_Ar8:gsub('ء', 'ء')
Zh_Ar8 = Zh_Ar8:gsub('ؤ', 'ؤ')
Zh_Ar8 = Zh_Ar8:gsub('ر', 'ر')
Zh_Ar8 = Zh_Ar8:gsub('ى', 'ى')
Zh_Ar8 = Zh_Ar8:gsub('ز', 'ز')
Zh_Ar8 = Zh_Ar8:gsub('و', 'ﯛ̲୭')
Zh_Ar8 = Zh_Ar8:gsub("ه", "ۿۿہ")
local Zh_Ar7  = text:gsub('ض', 'ﺿ̭͠')
Zh_Ar7 = Zh_Ar7:gsub('ص', 'ﺻ͡')
Zh_Ar7 = Zh_Ar7:gsub('ث', 'ﺜ̲')
Zh_Ar7 = Zh_Ar7:gsub('ق', 'ﭰ')
Zh_Ar7 = Zh_Ar7:gsub('ف', 'ﻓ̲')
Zh_Ar7 = Zh_Ar7:gsub('غ', 'ﻏ̲')
Zh_Ar7 = Zh_Ar7:gsub('ع', 'ﻌ̲')
Zh_Ar7 = Zh_Ar7:gsub('ه', 'ﮬ̲̌')
Zh_Ar7 = Zh_Ar7:gsub('خ', 'خٌ')
Zh_Ar7 = Zh_Ar7:gsub('ح', 'ﺣ̅')
Zh_Ar7 = Zh_Ar7:gsub('ج', 'جُ')
Zh_Ar7 = Zh_Ar7:gsub('د', 'ډ̝')
Zh_Ar7 = Zh_Ar7:gsub('ذ', 'ذً')
Zh_Ar7 = Zh_Ar7:gsub('ش', 'ﺷ̲')
Zh_Ar7 = Zh_Ar7:gsub('س', 'ﺳ̉')
Zh_Ar7 = Zh_Ar7:gsub('ي', 'ﯾ̃̐')
Zh_Ar7 = Zh_Ar7:gsub('ب', 'ﺑ̲')
Zh_Ar7 = Zh_Ar7:gsub('ل', 'ا̄ﻟ')
Zh_Ar7 = Zh_Ar7:gsub('ا', 'ﺈ̃')
Zh_Ar7 = Zh_Ar7:gsub('ت', 'ټُ')
Zh_Ar7 = Zh_Ar7:gsub('ن', 'ﻧ̲')
Zh_Ar7 = Zh_Ar7:gsub('م', 'ﻣ̲̉')
Zh_Ar7 = Zh_Ar7:gsub('ك', 'گ')
Zh_Ar7 = Zh_Ar7:gsub('ط', 'ﻁ̲')
Zh_Ar7 = Zh_Ar7:gsub('ئ', ' ْٰئ')
Zh_Ar7 = Zh_Ar7:gsub('ء', 'ء')
Zh_Ar7 = Zh_Ar7:gsub('ؤ', 'ؤ')
Zh_Ar7 = Zh_Ar7:gsub('ر', 'ہڕ')
Zh_Ar7 = Zh_Ar7:gsub('لا', 'ﻟ̲ﺂ̲')
Zh_Ar7 = Zh_Ar7:gsub('ى', 'ى')
Zh_Ar7 = Zh_Ar7:gsub('ة', 'ة')
Zh_Ar7 = Zh_Ar7:gsub('و', 'ۇۈۉ')
Zh_Ar7 = Zh_Ar7:gsub('ز', 'زُ')
Zh_Ar7 = Zh_Ar7:gsub('ظ', 'ﻇ̲')
local Zh_Ar6  = text:gsub('ض', 'ض͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ص', 'ص͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ث', 'ث͜ـ͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ق', 'ق͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ف', 'ف͒͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('غ', 'غ͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ع', 'ع͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('خ', 'خ̐͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ح', 'ح͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ج', 'ج͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ش', 'ش͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('س', 'س͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ي', 'ي͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ب', 'ب͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ل', 'ل͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ا', 'آ')
Zh_Ar6 = Zh_Ar6:gsub('ت', 'ت͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ن', 'ن͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('م', 'م͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ك', 'ڪ͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ط', 'ط͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ظ', 'ظ͜ـ')
Zh_Ar6 = Zh_Ar6:gsub('ء', 'ء')
Zh_Ar6 = Zh_Ar6:gsub('ؤ', 'ؤ')
Zh_Ar6 = Zh_Ar6:gsub('ر', 'ر')
Zh_Ar6 = Zh_Ar6:gsub('ى', 'ى')
Zh_Ar6 = Zh_Ar6:gsub('ز', 'ز')
Zh_Ar6 = Zh_Ar6:gsub('ظ', 'ظـ')
Zh_Ar6 = Zh_Ar6:gsub('و', 'ﯛ̲୭')
Zh_Ar6 = Zh_Ar6:gsub("ه", "ۿۿہ")
local Zh_Ar5  = text:gsub('ض', 'ضۜہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('ص', 'ضۜہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('ث', 'ثہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('ق', 'قྀ̲ہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('ف', 'ف͒ہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('غ', 'غہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('ع', 'عہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('ه', 'هٰہٰٖ')
Zh_Ar5 = Zh_Ar5:gsub('خ', 'خٰ̐ہ ')
Zh_Ar5 = Zh_Ar5:gsub('ح', 'حہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('ج', 'جـٰ̲ـہْۧ')
Zh_Ar5 = Zh_Ar5:gsub('د', 'دٰ')
Zh_Ar5 = Zh_Ar5:gsub('ذ', 'ذِٰ')
Zh_Ar5 = Zh_Ar5:gsub('ش', 'شِٰہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('س', 'سٰٓ')
Zh_Ar5 = Zh_Ar5:gsub('ي', 'يِٰہ')
Zh_Ar5 = Zh_Ar5:gsub('ب', 'بّہ')
Zh_Ar5 = Zh_Ar5:gsub('ل', 'لـٰ̲ـہ')
Zh_Ar5 = Zh_Ar5:gsub('ا', 'آ')
Zh_Ar5 = Zh_Ar5:gsub('ت', 'تَہَٰ')
Zh_Ar5 = Zh_Ar5:gsub('ن', 'نَِہ')
Zh_Ar5 = Zh_Ar5:gsub('م', 'مٰ̲ہ')
Zh_Ar5 = Zh_Ar5:gsub('ك', 'ڪٰྀہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('ط', 'طۨہٰٰ')
Zh_Ar5 = Zh_Ar5:gsub('ئ', 'ئ ْٰ')
Zh_Ar5 = Zh_Ar5:gsub('ء', 'ء')
Zh_Ar5 = Zh_Ar5:gsub('ؤ', 'ؤ')
Zh_Ar5 = Zh_Ar5:gsub('ر', 'رَ')
Zh_Ar5 = Zh_Ar5:gsub('لا', 'لہا')
Zh_Ar5 = Zh_Ar5:gsub('ى', 'ىْ')
Zh_Ar5 = Zh_Ar5:gsub('ة', 'ة')
Zh_Ar5 = Zh_Ar5:gsub('و', 'وِٰ')
Zh_Ar5 = Zh_Ar5:gsub('ز', 'زَٰ')
Zh_Ar5 = Zh_Ar5:gsub('ظ', 'ظۗہٰٰ')
local Zh_Ar4  = text:gsub('ض', 'ضـٰ̲ـہۜہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ص', 'صـٰ̲ـہۛہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ث', 'ثـٰ̲ـہہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ق', 'قـٰ̲ـہྀ̲ہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ف', 'فـٰ̲ـہ͒ہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('غ', 'غـٰ̲ـہہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ع', 'غـٰ̲ـہہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ه', 'هٰہٰٖ')
Zh_Ar4 = Zh_Ar4:gsub('خ', 'خـٰ̲ـہٰ̐ہ ')
Zh_Ar4 = Zh_Ar4:gsub('ح', 'حـٰ̲ـہہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ج', 'جـٰ̲ـہْۧ')
Zh_Ar4 = Zh_Ar4:gsub('د', 'دٰ')
Zh_Ar4 = Zh_Ar4:gsub('ذ', 'ذِٰ')
Zh_Ar4 = Zh_Ar4:gsub('ش', 'شـٰ̲ـہِٰہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('س', 'شـٰ̲ـہِٰہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ي', 'شـٰ̲ـہِٰہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ب', 'بـٰ̲ـہّہ')
Zh_Ar4 = Zh_Ar4:gsub('ل', 'لـٰ̲ـہ')
Zh_Ar4 = Zh_Ar4:gsub('ا', 'آ')
Zh_Ar4 = Zh_Ar4:gsub('ت', 'تـٰ̲ـہَہَٰ')
Zh_Ar4 = Zh_Ar4:gsub('ن', 'نـٰ̲ـہَِہ')
Zh_Ar4 = Zh_Ar4:gsub('م', 'مـٰ̲ـہٰ̲ہ')
Zh_Ar4 = Zh_Ar4:gsub('ك', 'ڪٰྀہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ط', 'طـٰ̲ـہۨہٰٰ')
Zh_Ar4 = Zh_Ar4:gsub('ئ', 'ئ ْٰ')
Zh_Ar4 = Zh_Ar4:gsub('ء', 'ء')
Zh_Ar4 = Zh_Ar4:gsub('ؤ', 'ؤ')
Zh_Ar4 = Zh_Ar4:gsub('ر', 'رَ')
Zh_Ar4 = Zh_Ar4:gsub('لا', 'لہا')
Zh_Ar4 = Zh_Ar4:gsub('ى', 'ىْ')
Zh_Ar4 = Zh_Ar4:gsub('ة', 'ة')
Zh_Ar4 = Zh_Ar4:gsub('و', 'وِٰ')
Zh_Ar4 = Zh_Ar4:gsub('ز', 'زَٰ')
Zh_Ar4 = Zh_Ar4:gsub('ظ', 'ظۗہٰٰ')
local Zh_Ar3  = text:gsub('ض', 'ض')
Zh_Ar3 = Zh_Ar3:gsub('ص', 'ص')
Zh_Ar3 = Zh_Ar3:gsub('ث', 'ثہ')
Zh_Ar3 = Zh_Ar3:gsub('ق', 'ق')
Zh_Ar3 = Zh_Ar3:gsub('ف', 'فُہ')
Zh_Ar3 = Zh_Ar3:gsub('غ', 'غہ')
Zh_Ar3 = Zh_Ar3:gsub('ع', 'عہ')
Zh_Ar3 = Zh_Ar3:gsub('ه', 'هٰہٰٖ')
Zh_Ar3 = Zh_Ar3:gsub('خ', 'خہ')
Zh_Ar3 = Zh_Ar3:gsub('ح', 'حہ')
Zh_Ar3 = Zh_Ar3:gsub('ج', 'جہ')
Zh_Ar3 = Zh_Ar3:gsub('د', 'د')
Zh_Ar3 = Zh_Ar3:gsub('ذ', 'ذ')
Zh_Ar3 = Zh_Ar3:gsub('ش', 'شہ')
Zh_Ar3 = Zh_Ar3:gsub('س', 'سہ')
Zh_Ar3 = Zh_Ar3:gsub('ي', 'يہ')
Zh_Ar3 = Zh_Ar3:gsub('ب', 'بّ')
Zh_Ar3 = Zh_Ar3:gsub('ل', 'لہ')
Zh_Ar3 = Zh_Ar3:gsub('ا', 'ا')
Zh_Ar3 = Zh_Ar3:gsub('ت', 'تہ')
Zh_Ar3 = Zh_Ar3:gsub('ن', 'نٰہٰٖ')
Zh_Ar3 = Zh_Ar3:gsub('م', 'مٰہٰٖ')
Zh_Ar3 = Zh_Ar3:gsub('ك', 'كُہ')
Zh_Ar3 = Zh_Ar3:gsub('ط', 'طہ')
Zh_Ar3 = Zh_Ar3:gsub('ئ', 'ئ ْٰ')
Zh_Ar3 = Zh_Ar3:gsub('ء', 'ء')
Zh_Ar3 = Zh_Ar3:gsub('ؤ', 'ؤ')
Zh_Ar3 = Zh_Ar3:gsub('ر', 'رَ')
Zh_Ar3 = Zh_Ar3:gsub('لا', 'لہا')
Zh_Ar3 = Zh_Ar3:gsub('ى', 'ىْ')
Zh_Ar3 = Zh_Ar3:gsub('ة', 'ة')
Zh_Ar3 = Zh_Ar3:gsub('و', 'و')
Zh_Ar3 = Zh_Ar3:gsub('ز', 'ز')
Zh_Ar3 = Zh_Ar3:gsub('ظ', 'ظۗہٰٰ')
local Zh_Ar2  = text:gsub('ض', 'ضَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ص', 'صَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ث', 'ثَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ق', 'قَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ف', 'فَٰ͒ـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('غ', 'غَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ع', 'عَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('خ', 'خَٰ̐ـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ح', 'حَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ج', 'جَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ش', 'شَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('س', 'سَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ي', 'يَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ب', 'بَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ل', 'لَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ا', 'آ')
Zh_Ar2 = Zh_Ar2:gsub('ت', 'تَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ن', 'نَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('م', 'مَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ك', 'ڪَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ط', 'طَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ظ', 'ظَٰـُـٰٓ')
Zh_Ar2 = Zh_Ar2:gsub('ء', 'ء')
Zh_Ar2 = Zh_Ar2:gsub('ؤ', 'ؤ')
Zh_Ar2 = Zh_Ar2:gsub('ر', 'ر')
Zh_Ar2 = Zh_Ar2:gsub('ى', 'ى')
Zh_Ar2 = Zh_Ar2:gsub('ز', 'ز')
Zh_Ar2 = Zh_Ar2:gsub('و', 'ﯛ̲୭')
Zh_Ar2 = Zh_Ar2:gsub("ه", "ۿۿہ")
local Zh_Ar1  = text:gsub('ض', 'ضِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ص', 'صِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ث', 'ثِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ق', 'قِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ف', 'فِٰ͒ـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('غ', 'غِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ع', 'عِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('خ', 'خِٰ̐ـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ح', 'حِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ج', 'جِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ش', 'شِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('س', 'سِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ي', 'يِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ب', 'بِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ل', 'لِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ا', 'آ')
Zh_Ar1 = Zh_Ar1:gsub('ت', 'تِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ن', 'نِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('م', 'مِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ك', 'ڪِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ط', 'طِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ظ', 'ظِٰـِۢ')
Zh_Ar1 = Zh_Ar1:gsub('ء', 'ء')
Zh_Ar1 = Zh_Ar1:gsub('ؤ', 'ؤ')
Zh_Ar1 = Zh_Ar1:gsub('ر', 'ر')
Zh_Ar1 = Zh_Ar1:gsub('ى', 'ى')
Zh_Ar1 = Zh_Ar1:gsub('ز', 'ز')
Zh_Ar1 = Zh_Ar1:gsub('و', 'ﯛ̲୭')
Zh_Ar1 = Zh_Ar1:gsub("ه", "ۿۿہ")


Text_Zhrfa = '1 - `'..Zh_Ar1..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n2 - `'..Zh_Ar2..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n3 - `'..Zh_Ar3..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n4 - `'..Zh_Ar4..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n5 - `'..Zh_Ar5..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n6 - `'..Zh_Ar6..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n7 - `'..Zh_Ar7..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n8 - `'..Zh_Ar8..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n9 - `'..Zh_Ar9..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n10 - `'..Zh_Ar10..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n11 - `'..Zh_Ar11..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n12 - `'..Zh_Ar12..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n13 - `'..Zh_Ar13..' '..EmojeS[math.random(#EmojeS)]..'`'
Text_Zhrfa = Text_Zhrfa.."\n❆| اضغط ع الاسم ليتم النسخ \n✓"
return luatele.sendText(msg_chat_id,msg_id,Text_Zhrfa,"md",true)  
end

if Redis:get(LiOn..":ZhrfNow:en"..msg.sender_id.user_id) then
Redis:del(LiOn..":ZhrfNow:en"..msg.sender_id.user_id)
if string.len(text) > 300 then
return luatele.sendText(msg_chat_id,msg_id,"❆| لا يمكنك زخرفه اكثر من 20 حرف \n❆| ارسل امر زخرفه وحاول مجددا بحروف اقل","md",true)  
elseif text:match("\n") then
return luatele.sendText(msg_chat_id,msg_id,"❆| لا يمكن زخرفه نص يحتوي على اكثر من سطر .","md",true)  
end
text = text:gsub('A','a')
text = text:gsub('S','s')
text = text:gsub('D','d')
text = text:gsub('F','f')
text = text:gsub('G','g')
text = text:gsub('H','h')
text = text:gsub('J','j')
text = text:gsub('K','k')
text = text:gsub('L','l')
text = text:gsub('Q','q')
text = text:gsub('W','w')
text = text:gsub('E','e')
text = text:gsub('R','r')
text = text:gsub('T','t')
text = text:gsub('Y','y')
text = text:gsub('U','u')
text = text:gsub('I','i')
text = text:gsub('O','o')
text = text:gsub('P','p')
text = text:gsub('Z','z')
text = text:gsub('X','x')
text = text:gsub('C','c')
text = text:gsub('V','v')
text = text:gsub('B','b')
text = text:gsub('N','n')
text = text:gsub('M','m')
local Zh_En1  = text:gsub('q', '𝚀')
Zh_En1 = Zh_En1:gsub('w', '𝚆')
Zh_En1 = Zh_En1:gsub('e', '𝙴')
Zh_En1 = Zh_En1:gsub('r', '𝚁')
Zh_En1 = Zh_En1:gsub('t', '𝚃')
Zh_En1 = Zh_En1:gsub('y', '𝚈')
Zh_En1 = Zh_En1:gsub('u', '𝚄')
Zh_En1 = Zh_En1:gsub('i', '𝙸')
Zh_En1 = Zh_En1:gsub('o', '𝙾')
Zh_En1 = Zh_En1:gsub('p', '𝙿')
Zh_En1 = Zh_En1:gsub('a', '??')
Zh_En1 = Zh_En1:gsub('s', '𝚂')
Zh_En1 = Zh_En1:gsub('d', '𝙳')
Zh_En1 = Zh_En1:gsub('f', '𝙵')
Zh_En1 = Zh_En1:gsub('g', '𝙶')
Zh_En1 = Zh_En1:gsub('h', '𝙷')
Zh_En1 = Zh_En1:gsub('j', '𝙹')
Zh_En1 = Zh_En1:gsub('k', '𝙺')
Zh_En1 = Zh_En1:gsub('I', '𝙻')
Zh_En1 = Zh_En1:gsub('z', '𝚉')
Zh_En1 = Zh_En1:gsub('x', '𝚇')
Zh_En1 = Zh_En1:gsub('c', '𝙲')
Zh_En1 = Zh_En1:gsub('v', '𝚅')
Zh_En1 = Zh_En1:gsub('b', '𝙱')
Zh_En1 = Zh_En1:gsub('n', '𝙽')
Zh_En1 = Zh_En1:gsub('m', '𝙼')
local Zh_En2  = text:gsub('q','𝒒 ')
Zh_En2 = Zh_En2:gsub('w','𝒘')
Zh_En2 = Zh_En2:gsub('e','𝒆')
Zh_En2 = Zh_En2:gsub('r','𝒓')
Zh_En2 = Zh_En2:gsub('t','??')
Zh_En2 = Zh_En2:gsub('y','𝒚')
Zh_En2 = Zh_En2:gsub('u','𝒖')
Zh_En2 = Zh_En2:gsub('i','𝒊')
Zh_En2 = Zh_En2:gsub('o','𝒐')
Zh_En2 = Zh_En2:gsub('p','𝒑')
Zh_En2 = Zh_En2:gsub('a','𝒂')
Zh_En2 = Zh_En2:gsub('s','𝒔')
Zh_En2 = Zh_En2:gsub('d','𝒅')
Zh_En2 = Zh_En2:gsub('f','𝒇')
Zh_En2 = Zh_En2:gsub('g','𝒈')
Zh_En2 = Zh_En2:gsub('h','𝒉')
Zh_En2 = Zh_En2:gsub('j','𝒋')
Zh_En2 = Zh_En2:gsub('k','𝒌')
Zh_En2 = Zh_En2:gsub('l','𝒍')
Zh_En2 = Zh_En2:gsub('m','𝒎')
Zh_En2 = Zh_En2:gsub('n','𝒏')
Zh_En2 = Zh_En2:gsub('b','𝒃')
Zh_En2 = Zh_En2:gsub('v','𝒗')
Zh_En2 = Zh_En2:gsub('c','𝒄')
Zh_En2 = Zh_En2:gsub('x','𝒙')
Zh_En2 = Zh_En2:gsub('z','𝒛 ')
local Zh_En3  = text:gsub('q', '𝑄')
Zh_En3 = Zh_En3:gsub('w', '𝑊')
Zh_En3 = Zh_En3:gsub('e', '𝐸')
Zh_En3 = Zh_En3:gsub('r', '𝑅')
Zh_En3 = Zh_En3:gsub('t', '𝑇')
Zh_En3 = Zh_En3:gsub('y', '𝑌')
Zh_En3 = Zh_En3:gsub('Y', '𝑌')
Zh_En3 = Zh_En3:gsub('u', '𝐔')
Zh_En3 = Zh_En3:gsub('i', '𝐼')
Zh_En3 = Zh_En3:gsub('o', '𝑂')
Zh_En3 = Zh_En3:gsub('p', '𝑃')
Zh_En3 = Zh_En3:gsub('a', '𝐴')
Zh_En3 = Zh_En3:gsub('s', '𝑆')
Zh_En3 = Zh_En3:gsub('d', '𝐷')
Zh_En3 = Zh_En3:gsub('f', '𝐹')
Zh_En3 = Zh_En3:gsub('g', '𝐺')
Zh_En3 = Zh_En3:gsub('h', '𝐻')
Zh_En3 = Zh_En3:gsub('j', '𝐽')
Zh_En3 = Zh_En3:gsub('k', '𝐾')
Zh_En3 = Zh_En3:gsub('I', '𝐿')
Zh_En3 = Zh_En3:gsub('z', '𝑍')
Zh_En3 = Zh_En3:gsub('x', '𝑋')
Zh_En3 = Zh_En3:gsub('c', '𝐶')
Zh_En3 = Zh_En3:gsub('v', '𝑉')
Zh_En3 = Zh_En3:gsub('b', 'b')
Zh_En3 = Zh_En3:gsub('n', '𝑁')
Zh_En3 = Zh_En3:gsub('m', '𝑀')
local Zh_En4  = text:gsub('q', '𝐐')
Zh_En4 = Zh_En4:gsub('w', '𝐖')
Zh_En4 = Zh_En4:gsub('e', '𝐄')
Zh_En4 = Zh_En4:gsub('r', '𝐑')
Zh_En4 = Zh_En4:gsub('t', '𝐓')
Zh_En4 = Zh_En4:gsub('y', '𝐘')
Zh_En4 = Zh_En4:gsub('u', '𝗨')
Zh_En4 = Zh_En4:gsub('i', '𝐈')
Zh_En4 = Zh_En4:gsub('o', '𝐎')
Zh_En4 = Zh_En4:gsub('p', '𝐏')
Zh_En4 = Zh_En4:gsub('a', '𝐀')
Zh_En4 = Zh_En4:gsub('s', '𝐒')
Zh_En4 = Zh_En4:gsub('d', '𝐃')
Zh_En4 = Zh_En4:gsub('f', '𝐅')
Zh_En4 = Zh_En4:gsub('g', '𝐆')
Zh_En4 = Zh_En4:gsub('h', '𝐇')
Zh_En4 = Zh_En4:gsub('j', '𝐉')
Zh_En4 = Zh_En4:gsub('k', '𝐊')
Zh_En4 = Zh_En4:gsub('I', '𝐋')
Zh_En4 = Zh_En4:gsub('z', '𝐙')
Zh_En4 = Zh_En4:gsub('x', '𝐗')
Zh_En4 = Zh_En4:gsub('c', '𝐂')
Zh_En4 = Zh_En4:gsub('v', '𝐕')
Zh_En4 = Zh_En4:gsub('b', '𝐁')
Zh_En4 = Zh_En4:gsub('n', '𝐍')
Zh_En4 = Zh_En4:gsub('m', '𝐌')
local Zh_En5  = text:gsub('a', 'ᴀ')
Zh_En5 = Zh_En5:gsub('b', 'ʙ')
Zh_En5 = Zh_En5:gsub('c', 'ᴄ')
Zh_En5 = Zh_En5:gsub('d', 'ᴅ')
Zh_En5 = Zh_En5:gsub('e', 'ᴇ')
Zh_En5 = Zh_En5:gsub('f', 'ᴈ')
Zh_En5 = Zh_En5:gsub('g', 'ɢ')
Zh_En5 = Zh_En5:gsub('h', 'ʜ')
Zh_En5 = Zh_En5:gsub('i', 'ɪ')
Zh_En5 = Zh_En5:gsub('j', 'ᴊ')
Zh_En5 = Zh_En5:gsub('k', 'ᴋ')
Zh_En5 = Zh_En5:gsub('l', 'ʟ')
Zh_En5 = Zh_En5:gsub('m', 'ᴍ')
Zh_En5 = Zh_En5:gsub('n', 'ɴ')
Zh_En5 = Zh_En5:gsub('o', 'ᴏ')
Zh_En5 = Zh_En5:gsub('p', 'ᴘ')
Zh_En5 = Zh_En5:gsub('q', 'ᴓ')
Zh_En5 = Zh_En5:gsub('r', 'ʀ')
Zh_En5 = Zh_En5:gsub('s', 'ᴤ')
Zh_En5 = Zh_En5:gsub('t', 'ᴛ')
Zh_En5 = Zh_En5:gsub('u', 'ᴜ')
Zh_En5 = Zh_En5:gsub('v', 'ᴠ')
Zh_En5 = Zh_En5:gsub('w', 'ᴡ')
Zh_En5 = Zh_En5:gsub('x', 'ᴥ')
Zh_En5 = Zh_En5:gsub('y', 'ʏ')
Zh_En5 = Zh_En5:gsub('z', 'ᴢ')
local Zh_En6  = text:gsub('q','𝗤 ')
Zh_En6 = Zh_En6:gsub('w','𝗪')
Zh_En6 = Zh_En6:gsub('e','𝗘')
Zh_En6 = Zh_En6:gsub('r','𝗥')
Zh_En6 = Zh_En6:gsub('t','𝗧')
Zh_En6 = Zh_En6:gsub('u','𝗨')
Zh_En6 = Zh_En6:gsub('y','𝗬')
Zh_En6 = Zh_En6:gsub('l','𝗜')
Zh_En6 = Zh_En6:gsub('o','𝗢')
Zh_En6 = Zh_En6:gsub('p','𝗣')
Zh_En6 = Zh_En6:gsub('a','𝗔')
Zh_En6 = Zh_En6:gsub('s','𝗦')
Zh_En6 = Zh_En6:gsub('d','𝗗')
Zh_En6 = Zh_En6:gsub('f','𝗙')
Zh_En6 = Zh_En6:gsub('g','𝗚')
Zh_En6 = Zh_En6:gsub('h','𝗛')
Zh_En6 = Zh_En6:gsub('j','𝗝')
Zh_En6 = Zh_En6:gsub('k','𝗞')
Zh_En6 = Zh_En6:gsub('l','𝗟')
Zh_En6 = Zh_En6:gsub('m','𝗠')
Zh_En6 = Zh_En6:gsub('n','𝗡')
Zh_En6 = Zh_En6:gsub('b','𝗕')
Zh_En6 = Zh_En6:gsub('v','𝗩')
Zh_En6 = Zh_En6:gsub('c','𝗖')
Zh_En6 = Zh_En6:gsub('x','𝗫')
Zh_En6 = Zh_En6:gsub('z','𝗭 ')
local Zh_En7  = text:gsub('q','ǫ ')
Zh_En7 = Zh_En7:gsub('w','ᴡ')
Zh_En7 = Zh_En7:gsub('e','ᴇ')
Zh_En7 = Zh_En7:gsub('r','ʀ')
Zh_En7 = Zh_En7:gsub('t','ᴛ')
Zh_En7 = Zh_En7:gsub('y','ʏ')
Zh_En7 = Zh_En7:gsub('u','𝓾')
Zh_En7 = Zh_En7:gsub('i','ɪ')
Zh_En7 = Zh_En7:gsub('o','ᴏ')
Zh_En7 = Zh_En7:gsub('p','ᴘ')
Zh_En7 = Zh_En7:gsub('a','ᴀ')
Zh_En7 = Zh_En7:gsub('s','ѕ')
Zh_En7 = Zh_En7:gsub('d','ᴅ')
Zh_En7 = Zh_En7:gsub('f','ғ')
Zh_En7 = Zh_En7:gsub('g','ɢ')
Zh_En7 = Zh_En7:gsub('h','ʜ')
Zh_En7 = Zh_En7:gsub('j','ᴊ')
Zh_En7 = Zh_En7:gsub('k','ᴋ')
Zh_En7 = Zh_En7:gsub('l','ʟ')
Zh_En7 = Zh_En7:gsub('m','ᴍ')
Zh_En7 = Zh_En7:gsub('n','ɴ')
Zh_En7 = Zh_En7:gsub('b','ʙ')
Zh_En7 = Zh_En7:gsub('v','ᴠ')
Zh_En7 = Zh_En7:gsub('c','ᴄ')
Zh_En7 = Zh_En7:gsub('x','х')
Zh_En7 = Zh_En7:gsub('z','ᴢ ')
local Zh_En8  = text:gsub('q','𝗾 ')
Zh_En8 = Zh_En8:gsub('w','𝘄')
Zh_En8 = Zh_En8:gsub('e','𝗲')
Zh_En8 = Zh_En8:gsub('r','𝗿')
Zh_En8 = Zh_En8:gsub('t','𝘁')
Zh_En8 = Zh_En8:gsub('u','𝘂')
Zh_En8 = Zh_En8:gsub('y','𝘆')
Zh_En8 = Zh_En8:gsub('i',' 𝗶')
Zh_En8 = Zh_En8:gsub('o','𝗼')
Zh_En8 = Zh_En8:gsub('p','𝗽')
Zh_En8 = Zh_En8:gsub('a','𝗮')
Zh_En8 = Zh_En8:gsub('s','𝘀')
Zh_En8 = Zh_En8:gsub('d','𝗱')
Zh_En8 = Zh_En8:gsub('f','𝗳')
Zh_En8 = Zh_En8:gsub('g','𝗴')
Zh_En8 = Zh_En8:gsub('h','𝗵')
Zh_En8 = Zh_En8:gsub('j','j')
Zh_En8 = Zh_En8:gsub('k','𝗸')
Zh_En8 = Zh_En8:gsub('l','𝗹')
Zh_En8 = Zh_En8:gsub('m','𝗺')
Zh_En8 = Zh_En8:gsub('n','𝗻')
Zh_En8 = Zh_En8:gsub('b','𝗯')
Zh_En8 = Zh_En8:gsub('v','𝘃')
Zh_En8 = Zh_En8:gsub('c','𝗰')
Zh_En8 = Zh_En8:gsub('x','𝘅')
Zh_En8 = Zh_En8:gsub('z','𝘇 ')
local Zh_En9  = text:gsub('q','𝖖 ')
Zh_En9 = Zh_En9:gsub('w','𝖜')
Zh_En9 = Zh_En9:gsub('e','𝖊')
Zh_En9 = Zh_En9:gsub('r','𝖗')
Zh_En9 = Zh_En9:gsub('t','𝖙')
Zh_En9 = Zh_En9:gsub('y','𝖞')
Zh_En9 = Zh_En9:gsub('u','𝖚')
Zh_En9 = Zh_En9:gsub('i',' 𝖎')
Zh_En9 = Zh_En9:gsub('o','𝖔')
Zh_En9 = Zh_En9:gsub('p','𝖕')
Zh_En9 = Zh_En9:gsub('a','??')
Zh_En9 = Zh_En9:gsub('s','𝖘')
Zh_En9 = Zh_En9:gsub('d','𝖉')
Zh_En9 = Zh_En9:gsub('f','𝖋')
Zh_En9 = Zh_En9:gsub('g','𝖌')
Zh_En9 = Zh_En9:gsub('h','𝖍')
Zh_En9 = Zh_En9:gsub('j','𝖏')
Zh_En9 = Zh_En9:gsub('k','𝖐')
Zh_En9 = Zh_En9:gsub('l','𝖑')
Zh_En9 = Zh_En9:gsub('m','𝖒')
Zh_En9 = Zh_En9:gsub('n','𝖓')
Zh_En9 = Zh_En9:gsub('b','𝖇')
Zh_En9 = Zh_En9:gsub('v','𝖛')
Zh_En9 = Zh_En9:gsub('c','𝖈')
Zh_En9 = Zh_En9:gsub('x','𝖝')
Zh_En9 = Zh_En9:gsub('z','𝖟 ')
local Zh_En10 = text:gsub('q','ᵠ ')
Zh_En10 = Zh_En10:gsub('w','ᵂ')
Zh_En10 = Zh_En10:gsub('e','ᴱ')
Zh_En10 = Zh_En10:gsub('r','ᴿ')
Zh_En10 = Zh_En10:gsub('t','ᵀ')
Zh_En10 = Zh_En10:gsub('u','ᵁ')
Zh_En10 = Zh_En10:gsub('y','ʸ')
Zh_En10 = Zh_En10:gsub('i','ᴵ')
Zh_En10 = Zh_En10:gsub('o','ᴼ')
Zh_En10 = Zh_En10:gsub('p','ᴾ')
Zh_En10 = Zh_En10:gsub('a','ᴬ')
Zh_En10 = Zh_En10:gsub('s','ˁ')
Zh_En10 = Zh_En10:gsub('d','ᴰ')
Zh_En10 = Zh_En10:gsub('f','ᶠ')
Zh_En10 = Zh_En10:gsub('g','ᴳ')
Zh_En10 = Zh_En10:gsub('h','ᴴ')
Zh_En10 = Zh_En10:gsub('j','ᴶ')
Zh_En10 = Zh_En10:gsub('k','ᴷ')
Zh_En10 = Zh_En10:gsub('l','ᴸ')
Zh_En10 = Zh_En10:gsub('m','ᴹ')
Zh_En10 = Zh_En10:gsub('n','ᴺ')
Zh_En10 = Zh_En10:gsub('b','ᴮ')
Zh_En10 = Zh_En10:gsub('v','ᵛ')
Zh_En10 = Zh_En10:gsub('c','ᶜ')
Zh_En10 = Zh_En10:gsub('x','ˣ')
Zh_En10 = Zh_En10:gsub('z','ᶻ')
local Zh_En11 = text:gsub('q','ᑫ ')
Zh_En11 = Zh_En11:gsub('w','ᗯ')
Zh_En11 = Zh_En11:gsub('e','E')
Zh_En11 = Zh_En11:gsub('r','ᖇ')
Zh_En11 = Zh_En11:gsub('t',' T')
Zh_En11 = Zh_En11:gsub('u','ᑌ')
Zh_En11 = Zh_En11:gsub('y','Y')
Zh_En11 = Zh_En11:gsub('i','I')
Zh_En11 = Zh_En11:gsub('o','O')
Zh_En11 = Zh_En11:gsub('p','ᑭ')
Zh_En11 = Zh_En11:gsub('a','ᗩ')
Zh_En11 = Zh_En11:gsub('s',' ᔕ')
Zh_En11 = Zh_En11:gsub('d','ᗪ')
Zh_En11 = Zh_En11:gsub('f','f')
Zh_En11 = Zh_En11:gsub('g','G')
Zh_En11 = Zh_En11:gsub('h','ᕼ')
Zh_En11 = Zh_En11:gsub('j','ᒍ')
Zh_En11 = Zh_En11:gsub('k','K')
Zh_En11 = Zh_En11:gsub('l','ᒪ')
Zh_En11 = Zh_En11:gsub('m','ᗰ')
Zh_En11 = Zh_En11:gsub('n','ᑎ')
Zh_En11 = Zh_En11:gsub('b','ᗷ')
Zh_En11 = Zh_En11:gsub('v','ᐯ')
Zh_En11 = Zh_En11:gsub('c','ᑕ')
Zh_En11 = Zh_En11:gsub('x','᙭')
Zh_En11 = Zh_En11:gsub('z','ᘔ')
local Zh_En12 = text:gsub('q','ℚ ')
Zh_En12 = Zh_En12:gsub('w','𝕎')
Zh_En12 = Zh_En12:gsub('e',' 𝔼')
Zh_En12 = Zh_En12:gsub('r','ℝ')
Zh_En12 = Zh_En12:gsub('t','𝕋')
Zh_En12 = Zh_En12:gsub('u','𝕌')
Zh_En12 = Zh_En12:gsub('y',' 𝕐')
Zh_En12 = Zh_En12:gsub('i','𝕀')
Zh_En12 = Zh_En12:gsub('o','𝕆')
Zh_En12 = Zh_En12:gsub('p','ℙ')
Zh_En12 = Zh_En12:gsub('a','𝔸')
Zh_En12 = Zh_En12:gsub('s','𝕊')
Zh_En12 = Zh_En12:gsub('d','𝔻')
Zh_En12 = Zh_En12:gsub('f','𝔽')
Zh_En12 = Zh_En12:gsub('g','𝔾')
Zh_En12 = Zh_En12:gsub('h','ℍ')
Zh_En12 = Zh_En12:gsub('j','𝔾')
Zh_En12 = Zh_En12:gsub('k','𝕂')
Zh_En12 = Zh_En12:gsub('l','𝕃')
Zh_En12 = Zh_En12:gsub('m','𝕄')
Zh_En12 = Zh_En12:gsub('n','ℕ')
Zh_En12 = Zh_En12:gsub('b','𝔹')
Zh_En12 = Zh_En12:gsub('v','𝕍')
Zh_En12 = Zh_En12:gsub('c','ℂ')
Zh_En12 = Zh_En12:gsub('x',' 𝕏')
Zh_En12 = Zh_En12:gsub('z','ℤ')
local Zh_En13 = text:gsub('q','ᵟ ')
Zh_En13 = Zh_En13:gsub('w','ᵂ')
Zh_En13 = Zh_En13:gsub('e','ᴱ')
Zh_En13 = Zh_En13:gsub('r','ᴿ')
Zh_En13 = Zh_En13:gsub('t','ᵀ')
Zh_En13 = Zh_En13:gsub('y','ᵞ')
Zh_En13 = Zh_En13:gsub('u','𝐔')
Zh_En13 = Zh_En13:gsub('i','ᴵ')
Zh_En13 = Zh_En13:gsub('o','ᴼ')
Zh_En13 = Zh_En13:gsub('p','ᴾ')
Zh_En13 = Zh_En13:gsub('a','ᴬ')
Zh_En13 = Zh_En13:gsub('s','ˢ')
Zh_En13 = Zh_En13:gsub('d','ᴰ')
Zh_En13 = Zh_En13:gsub('f','ᶠ')
Zh_En13 = Zh_En13:gsub('g','ᴳ')
Zh_En13 = Zh_En13:gsub('h','ᴴ')
Zh_En13 = Zh_En13:gsub('j','ᴶ')
Zh_En13 = Zh_En13:gsub('k','ᴷ')
Zh_En13 = Zh_En13:gsub('l','ᴸ')
Zh_En13 = Zh_En13:gsub('m','ᴹ')
Zh_En13 = Zh_En13:gsub('n','ᴺ')
Zh_En13 = Zh_En13:gsub('b','ᴮ')
Zh_En13 = Zh_En13:gsub('v','ᵛ')
Zh_En13 = Zh_En13:gsub('c','ᶜ')
Zh_En13 = Zh_En13:gsub('x','ˣ')
Zh_En13 = Zh_En13:gsub('z','ᶻ')

Text_Zhrfa = '1 - `'..Zh_En1..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n2 - `'..Zh_En2..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n3 - `'..Zh_En3..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n4 - `'..Zh_En4..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n5 - `'..Zh_En5..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n6 - `'..Zh_En6..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n7 - `'..Zh_En7..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n8 - `'..Zh_En8..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n9 - `'..Zh_En9..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n10 - `'..Zh_En10..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n11 - `'..Zh_En11..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n12 - `'..Zh_En12..' '..EmojeS[math.random(#EmojeS)]..'`'..
'\n13 - `'..Zh_En13..' '..EmojeS[math.random(#EmojeS)]..'`'
Text_Zhrfa = Text_Zhrfa.."\n❆| اضغط ع الاسم ليتم النسخ \n✓"
return luatele.sendText(msg_chat_id,msg_id,Text_Zhrfa,"md",true)  
end
-------*****************-------*****************-------*****************


if text then
local NewCmmd = Redis:get(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..text)
if NewCmmd then
text = (NewCmmd or text)
end
end
if text == 'رفع النسخه الاحتياطيه' and msg.reply_to_message_id ~= 0 or text == 'رفع نسخه احتياطيه' and msg.reply_to_message_id ~= 0 then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply.content.document then
local File_Id = Message_Reply.content.document.document.remote.id
local Name_File = Message_Reply.content.document.file_name

local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..File_Id)) 
local download_ = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,''..Name_File) 
local Get_Info = io.open(download_,"r"):read('*a')
local FilesJson = JSON.decode(Get_Info)
if tonumber(LiOn) ~= tonumber(FilesJson.BotId) then
return luatele.sendText(msg_chat_id,msg_id,'❆︙عذرا هذا الملف غير مطابق مع البوت يرجى جلب النسخه الحقيقيه')
end -- end botid
luatele.sendText(msg_chat_id,msg_id,'❆︙جاري استرجاع المشتركين والكروبات ...')
Y = 0
for k,v in pairs(FilesJson.UsersBot) do
Y = Y + 1
Redis:sadd(LiOn..'LiOn:Num:User:Pv',v)  
end
X = 0
for GroupId,ListGroup in pairs(FilesJson.GroupsBot) do
X = X + 1
Redis:sadd(LiOn.."LiOn:ChekBotAdd",GroupId) 
if ListGroup.President1 then
for k,v in pairs(ListGroup.President1) do
Redis:sadd(LiOn.."LiOn:MalekAsase:Group"..GroupId,v)
end
end
if ListGroup.President2 then
for k,v in pairs(ListGroup.President2) do
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..GroupId,v)
end
end
if ListGroup.President then
for k,v in pairs(ListGroup.President) do
Redis:sadd(LiOn.."LiOn:TheBasics:Group"..GroupId,v)
end
end
if ListGroup.Constructor then
for k,v in pairs(ListGroup.Constructor) do
Redis:sadd(LiOn.."LiOn:Originators:Group"..GroupId,v)
end
end
if ListGroup.Manager then
for k,v in pairs(ListGroup.Manager) do
Redis:sadd(LiOn.."LiOn:Managers:Group"..GroupId,v)
end
end
if ListGroup.Admin then
for k,v in pairs(ListGroup.Admin) do
Redis:sadd(LiOn.."LiOn:Addictive:Group"..GroupId,v)
end
end
if ListGroup.Vips then
for k,v in pairs(ListGroup.Vips) do
Redis:sadd(LiOn.."LiOn:Distinguished:Group"..GroupId,v)
end
end 
Redis:set(LiOn.."LiOn:Lock:tagservrbot"..GroupId,true)   
list ={"Lock:Bot:kick","Lock:User:Name","Lock:hashtak","Lock:Cmd","Lock:Link","Lock:forward","Lock:Keyboard","Lock:geam","Lock:Photo","Lock:Animation","Lock:Video","Lock:Audio","Lock:vico","Lock:Sticker","Lock:Document","Lock:Unsupported","Lock:Markdaun","Lock:Contact","Lock:Spam"}
for i,lock in pairs(list) do 
Redis:set(LiOn..'LiOn:'..lock..GroupId,"del")    
end
Redis:set(LiOn.."LiOn:Alzwag:Chat"..msg.chat_id,"true")
Redis:set(LiOn.."LiOn:Althnaee:Chat"..msg.chat_id,"true")
Redis:set(LiOn.."LiOn:Aldel:Chat"..msg.chat_id,"true")
Redis:set(LiOn..'tagallgroup'..msg.chat_id,'open') 
Redis:set(LiOn.."LiOn:Status:Link"..GroupId,true) 
Redis:set(LiOn.."LiOn:Status:Games"..GroupId,true) 
Redis:set(LiOn.."LiOn:AlThther:Chat"..msg.chat_id,"true")
Redis:set(LiOn.."replayallbot"..msg.chat_id,true)
Redis:set(LiOn.."LiOn:Status:Welcome"..GroupId,true) 
Redis:set(LiOn.."LiOn:AlThther:Chat"..msg.chat_id,"true")
Redis:set(LiOn..'tagall@all'..msg.chat_id,'open') 
Redis:set(LiOn.."LiOn:Status:IdPhoto"..GroupId,true) 
Redis:del(LiOn.."spammkick"..msg.chat_id)
Redis:set(LiOn.."LiOn:Lock:edit"..GroupId,true) 
Redis:sadd(LiOn.."LiOn:ChekBotAdd",GroupId)
Redis:set(LiOn.."LiOn:Status:Id"..GroupId,true) 
Redis:set(LiOn.."LiOn:Status:Reply"..GroupId,true) 
Redis:set(LiOn.."LiOn:Status:ReplySudo"..GroupId,true) 
Redis:set(LiOn.."LiOn:Status:BanId"..GroupId,true) 
Redis:set(LiOn.."LiOn:Status:SetId"..GroupId,true) 
end
return luatele.sendText(msg_chat_id,msg_id,'❆︙تم استرجاع {'..X..'} مجموعه \n❆︙واسترجاع {'..Y..'} مشترك في البوت')
end
end
if text == 'رفع نسخه تشاكي' and msg.reply_to_message_id ~= 0 then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply.content.document then
local File_Id = Message_Reply.content.document.document.remote.id
local Name_File = Message_Reply.content.document.file_name
if tonumber(Name_File:match('(%d+)')) ~= tonumber(LiOn) then 
return luatele.sendText(msg_chat_id,msg_id,'❆︙عذرا هذا الملف غير مطابق مع البوت يرجى جلب النسخه الحقيقيه')
end -- end Namefile
local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..File_Id)) 
local download_ = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,''..Name_File) 
local Get_Info = io.open(download_,"r"):read('*a')
local All_Groups = JSON.decode(Get_Info)
if All_Groups.GP_BOT then
for idg,v in pairs(All_Groups.GP_BOT) do
Redis:sadd(LiOn.."LiOn:ChekBotAdd",idg) 
if v.MNSH then
for k,idmsh in pairs(v.MNSH) do
Redis:sadd(LiOn.."LiOn:Originators:Group"..idg,idmsh)
end;end
if v.MDER then
for k,idmder in pairs(v.MDER) do
Redis:sadd(LiOn.."LiOn:Managers:Group"..idg,idmder)  
end;end
if v.MOD then
for k,idmod in pairs(v.MOD) do
Redis:sadd(LiOn.."LiOn:Addictive:Group"..idg,idmod)
end;end
if v.ASAS then
for k,idASAS in pairs(v.ASAS) do
Redis:sadd(LiOn.."LiOn:TheBasics:Group"..idg,idASAS)
end;end
end
return luatele.sendText(msg_chat_id,msg_id,'❆︙تم استرجاع المجموعات من نسخه تشاكي')
else
return luatele.sendText(msg_chat_id,msg_id,'❆︙الملف لا يدعم هذا البوت')
end
end
end
if (Redis:get(LiOn..'LiOn:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id) == 'true') then
if text == 'الغاء' or text == 'الغاء الامر ❆' then 
Redis:del(LiOn..'LiOn:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,'❆︙تم الغاء حفظ قناة الاشتراك')
end
Redis:del(LiOn..'LiOn:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
if text and text:match("^@[%a%d_]+$") then
local UserId_Info = luatele.searchPublicChat(text)
if not UserId_Info.id then
Redis:del(LiOn..'LiOn:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
local ChannelUser = text:gsub('@','')
if UserId_Info.type.is_channel == true then
local StatusMember = luatele.getChatMember(UserId_Info.id,LiOn).status.Merotele
if (StatusMember ~= "chatMemberStatusAdministrator") then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙البوت عضو في القناة يرجى رفع البوت ادمن واعادة وضع الاشتراك ","md",true)  
end
Redis:set(LiOn..'LiOn:Channel:Join',ChannelUser) 
Redis:set(LiOn..'LiOn:Channel:Join:Name',UserId_Info.title) 
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم تعيين الاشتراك الاجباري على قناة : [@"..ChannelUser..']',"md",true)  
else
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙هذا ليس معرف قناة يرجى ارسال معرف القناة الصحيح: [@"..ChannelUser..']',"md",true)  
end
end
end
if text == 'تفعيل الاشتراك الاجباري' or text == 'تفعيل الاشتراك الاجباري ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:set(LiOn..'LiOn:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id,true)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙ارسل الي الان قناة الاشتراك ","md",true)  
end
if text == 'تعطيل الاشتراك الاجباري' or text == 'تعطيل الاشتراك الاجباري ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:del(LiOn..'LiOn:Channel:Join')
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم تعطيل الاشتراك الاجباري","md",true)  
end
if text == 'تغيير الاشتراك الاجباري' or text == 'تغيير الاشتراك الاجباري ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:set(LiOn..'LiOn:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id,true)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙ارسل الي الان قناة الاشتراك ","md",true)  
end
if text == 'الاشتراك الاجباري' or text == 'الاشتراك الاجباري ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Channel = Redis:get(LiOn..'LiOn:Channel:Join')
if Channel then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙الاشتراك الاجباري مفعل على : [@"..Channel..']',"md",true)  
else
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لا توجد قناة في الاشتراك ارسل تغيير الاشتراك الاجباري","md",true)  
end
end

if (Redis:get(LiOn..'LiOn:Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id) == 'true') then
if text == 'الغاء' or text == 'الغاء الامر ❆' then 
Redis:del(LiOn..'LiOn:Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,'❆︙تم الغاء حفظ قناة الاشتراك')
end
Redis:del(LiOn..'LiOn:Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
if text and text:match("^@[%a%d_]+$") then
local UserId_Info = luatele.searchPublicChat(text)
if not UserId_Info.id then
Redis:del(LiOn..'LiOn:Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
local ChannelUser = text:gsub('@','')
if UserId_Info.type.is_channel == true then
local StatusMember = luatele.getChatMember(UserId_Info.id,LiOn).status.Merotele
if (StatusMember ~= "chatMemberStatusAdministrator") then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙البوت عضو في القناة يرجى رفع البوت ادمن واعادة وضع الاشتراك ","md",true)  
end
Redis:set(LiOn..'LiOn:Chat:Channel:Join'..msg_chat_id,ChannelUser) 
Redis:set(LiOn..'LiOn:Chat:Channel:Join:Name'..msg_chat_id,UserId_Info.title) 
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم تعيين الاشتراك الاجباري على قناة : [@"..ChannelUser..']',"md",true)  
else
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙هذا ليس معرف قناة يرجى ارسال معرف القناة الصحيح: [@"..ChannelUser..']',"md",true)  
end
end
end
if text == 'تفعيل الاشتراك الاجباري المجموعه' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:set(LiOn..'LiOn:Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id,true)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙ارسل الي الان قناة الاشتراك ","md",true)  
end
if text == 'تعطيل الاشتراك الاجباري المجموعه' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:del(LiOn..'LiOn:Chat:Channel:Join'..msg_chat_id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم تعطيل الاشتراك الاجباري","md",true)  
end
if text == 'تغيير الاشتراك الاجباري المجموعه' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:set(LiOn..'LiOn:Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id,true)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙ارسل الي الان قناة الاشتراك ","md",true)  
end
if text == 'الاشتراك الاجباري المجموعه' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Channel = Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg_chat_id)
if Channel then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙الاشتراك الاجباري مفعل على : [@"..Channel..']',"md",true)  
else
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لا توجد قناة في الاشتراك ارسل تغيير الاشتراك الاجباري","md",true)  
end
end
if (Redis:get(LiOn.."LiOn:AddSudosNew"..msg_chat_id) == 'true') then
if text == "الغاء" or text == 'الغاء الامر ❆' then   
Redis:del(LiOn.."LiOn:AddSudosNew"..msg_chat_id)
return luatele.sendText(msg_chat_id,msg_id, "\n❆︙تم الغاء امر تغيير المطور الاساسي","md",true)    
end 
Redis:del(LiOn.."LiOn:AddSudosNew"..msg_chat_id)
if text and text:match("^@[%a%d_]+$") then
local UserId_Info = luatele.searchPublicChat(text)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهاذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName[2]:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local Informationlua = io.open("Information.lua", 'w')
Informationlua:write([[
return {
Token = "]]..Token..[[",
UserBot = "]]..UserBot..[[",
UserSudo = "]]..text:gsub('@','')..[[",
SudoId = ]]..UserId_Info.id..[[
}
]])
Informationlua:close()
luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم تغيير المطور الاساسي اصبح على : [@"..text:gsub('@','').."]","md",true)  
dofile('LiOn.lua')  
return false
end
end

if text == 'تغيير المطور الاساسي' or text == '❆ تغيير المطور الاساسي' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هاذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:set(LiOn.."LiOn:AddSudosNew"..msg_chat_id,true)
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل معرف المطور الاساسي مع @","md",true)
end
if text == 'تحديث السورس' or text == 'تحديث السورس ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
os.execute('rm -rf LiOn.lua')
--download('http://45.32.238.150/Mero/LiOn.lua','LiOn.lua')
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تم تحديث السورس * ',"md",true)  
end
if text == "مسح تخزين البوت" or text == "مسح تخزين البوت ❆" then
if tonumber(msg.sender_id.user_id) == tonumber(147982809) then 
local keys = Redis:keys(LiOn..'*')
for i = 1, #keys do
Redis:del(keys[i])
end
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تم مسح تخزين البوت كله *',"md")
end
end
if text == 'معلومات التنصيب' or text == 'معلومات التنصيب ❆' then
 if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then 
 usersend = true
 elseif tonumber(msg.sender_id.user_id) == tonumber(147982809) then 
 usersend = true
 else
 usersend = false
 end
if usersend ~= true then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local UserInfo = luatele.getUser(Sudo_Id)
if UserInfo.username then
UserInfousername = '[@'..UserInfo.username..']'
else
UserInfousername = 'لا يوجد'
end
local Teext = '❆︙اسم المطور : ['..UserInfo.first_name..'](tg://user?id='..Sudo_Id..')\n'
print(Teext)
return luatele.sendText(msg_chat_id,msg_id,'\n\n❆︙التوكن : `'..Token..'`\n\n❆︙معرف البوت : [@'..UserBot..']\n\n❆︙ ايدي المطور : `'..Sudo_Id..'`\n\n❆︙معرف المطور : '..UserInfousername..'\n\n'..Teext,"md",true)  
end
if text == "ضع صوره للترحيب" or text == "ضع صوره للترحيب ❆" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local photo = luatele.getUserProfilePhotos(LiOn)
if photo.total_count > 0 then
Redis:set(LiOn..':WELCOME_BOT',photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id)
return luatele.sendText(msg_chat_id,msg_id, '❆︙تم استدعاء صوره البوت ووضعها \n' )
else
Redis:setex(LiOn..'welcom_ph:witting'..msg.sender_id.user_id,300,true) 
return luatele.sendText(msg_chat_id,msg_id, '❆︙حسننا عزيزي \n❆ ︙الان قم بارسال الصوره للترحيب \n' )
end 
end
if text == "ضع تاريخ الاشتراك" or text == "ضع تاريخ الاشتراك ❆" then
if msg.sender_id.user_id ~= 147982809 then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { مطور السورس }* ',"md",true)  
end
Redis:set(LiOn.."data:botsashtrak"..msg_chat_id..msg.sender_id.user_id,true)
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙ارسل تاريخ الاشتراك* ',"md",true)  
end
if Redis:get(LiOn.."data:botsashtrak"..msg_chat_id..msg.sender_id.user_id) then
if text == 'الغاء' or text == 'الغاء الامر ❆' then
Redis:del(LiOn.."data:botsashtrak"..msg_chat_id..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تم الغاء الامر * ',"md",true)  
end
Redis:set(LiOn.."data:bots:ashtrak",text)
Redis:del(LiOn.."data:botsashtrak"..msg_chat_id..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تم تعيين تاريخ الاشتراك * ',"md",true)  
end
if text == "اشتراك البوت" or text == "اشتراك البوت ❆" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
return luatele.sendText(msg_chat_id,msg_id,'\n*User Dev* : [@'..UserSudo..'\n'..(Redis:get(LiOn.."data:bots:ashtrak") or 0)..'] ',"md",true)  
end
if text == 'جلب النسخه الاحتياطيه ❆' or text == 'جلب النسخه الاحتياطيه' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Groups = Redis:smembers(LiOn..'LiOn:ChekBotAdd')  
local UsersBot = Redis:smembers(LiOn..'LiOn:Num:User:Pv')  
local Get_Json = '{"BotId": '..LiOn..','  
if #UsersBot ~= 0 then 
Get_Json = Get_Json..'"UsersBot":['  
for k,v in pairs(UsersBot) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..']'
end
Get_Json = Get_Json..',"GroupsBot":{'
for k,v in pairs(Groups) do   
local President1 = Redis:smembers(LiOn.."LiOn:MalekAsase:Group"..v)
local President2 = Redis:smembers(LiOn.."LiOn:TheBasicsQ:Group"..v)
local President = Redis:smembers(LiOn.."LiOn:TheBasics:Group"..v)
local Constructor = Redis:smembers(LiOn.."LiOn:Originators:Group"..v)
local Manager = Redis:smembers(LiOn.."LiOn:Managers:Group"..v)
local Admin = Redis:smembers(LiOn.."LiOn:Addictive:Group"..v)
local Vips = Redis:smembers(LiOn.."LiOn:Distinguished:Group"..v)
if k == 1 then
Get_Json = Get_Json..'"'..v..'":{'
else
Get_Json = Get_Json..',"'..v..'":{'
end
if #President1 ~= 0 then 
Get_Json = Get_Json..'"President1":['
for k,v in pairs(President1) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #President2 ~= 0 then 
Get_Json = Get_Json..'"President2":['
for k,v in pairs(President2) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #President ~= 0 then 
Get_Json = Get_Json..'"President":['
for k,v in pairs(President) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Constructor ~= 0 then
Get_Json = Get_Json..'"Constructor":['
for k,v in pairs(Constructor) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Manager ~= 0 then
Get_Json = Get_Json..'"Manager":['
for k,v in pairs(Manager) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Admin ~= 0 then
Get_Json = Get_Json..'"Admin":['
for k,v in pairs(Admin) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Vips ~= 0 then
Get_Json = Get_Json..'"Vips":['
for k,v in pairs(Vips) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
Get_Json = Get_Json..'"Dev":"u24uu"}'
end
Get_Json = Get_Json..'}}'
local File = io.open('./'..UserBot..'.json', "w")
File:write(Get_Json)
File:close()
return luatele.sendDocument(msg_chat_id,msg_id,'./'..UserBot..'.json', '*❆︙تم جلب النسخه الاحتياطيه\n❆︙تحتوي على {'..#Groups..'} مجموعه \n❆︙وتحتوي على {'..#UsersBot..'} مشترك *\n', 'md')
end
if text == 'تفعيل جلب النسخ تلقائي' then   
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:setex(LiOn.."Status:SendFile",86400,true) 
Redis:set(LiOn.."Status:SendFile1",true)
return luatele.sendText(msg_chat_id,msg_id,"⌯︙تم تفعيل جلب نسخة الكروبات التلقائيه","md")
end
if text == 'تعطيل جلب النسخ تلقائي' then   
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:del(LiOn.."Status:SendFile") 
Redis:del(LiOn.."Status:SendFile1") 
return luatele.sendText(msg_chat_id,msg_id,"⌯︙تم تعطيل جلب نسخة الكروبات التلقائيه","md")
end

if Redis:get(LiOn.."Status:SendFile1") and tonumber(Redis:ttl(LiOn.."Status:SendFile")) <= 1 then
local Get_Json = '{"BotId": '..LiOn..','  
Get_Json = Get_Json..'"GroupsBotreply":{'
local Groups = Redis:smembers(LiOn..'LiOn:ChekBotAdd')  
for k,ide in pairs(Groups) do   
listrep = Redis:smembers(LiOn.."LiOn:List:Manager"..ide.."")
if k == 1 then
Get_Json = Get_Json..'"'..ide..'":{'
else
Get_Json = Get_Json..',"'..ide..'":{'
end
if #listrep >= 5 then
for k,v in pairs(listrep) do
if Redis:get(LiOn.."LiOn:Add:Rd:Manager:Gif"..v..ide) then
db = "gif@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Gif"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Vico"..v..ide) then
db = "Vico@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Vico"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..v..ide) then
db = "Stekrs@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Text"..v..ide) then
db = "Text@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Text"..v..ide)
db = string.gsub(db,'"','')
db = string.gsub(db,"'",'')
db = string.gsub(db,'*','')
db = string.gsub(db,'`','')
db = string.gsub(db,'{','')
db = string.gsub(db,'}','')
db = string.gsub(db,'\n',' ')
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Photo"..v..ide) then
db = "Photo@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Photo"..v..ide) 
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Video"..v..ide) then
db = "Video@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Video"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:File"..v..ide) then
db = "File@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:File"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Audio"..v..ide) then
db = "Audio@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Audio"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:video_note"..v..ide) then
db = "video_note@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:video_note"..v..ide)
end
v = string.gsub(v,'"','')
v = string.gsub(v,"'",'')
Get_Json = Get_Json..'"'..v..'":"'..db..'",'
end   
Get_Json = Get_Json..'"taha":"ok"'
end
Get_Json = Get_Json..'}'
end
Get_Json = Get_Json..'}}'
local File = io.open('./ReplyGroups.json', "w")
File:write(Get_Json)
File:close()
luatele.sendDocument(Sudo_Id,0,'./ReplyGroups.json', '', 'md')

local Groups = Redis:smembers(LiOn..'LiOn:ChekBotAdd')  
local UsersBot = Redis:smembers(LiOn..'LiOn:Num:User:Pv')  
local Get_Json = '{"BotId": '..LiOn..','  
if #UsersBot ~= 0 then 
Get_Json = Get_Json..'"UsersBot":['  
for k,v in pairs(UsersBot) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..']'
end
Get_Json = Get_Json..',"GroupsBot":{'
for k,v in pairs(Groups) do   
local President = Redis:smembers(LiOn.."LiOn:TheBasics:Group"..v)
local Constructor = Redis:smembers(LiOn.."LiOn:Originators:Group"..v)
local Manager = Redis:smembers(LiOn.."LiOn:Managers:Group"..v)
local Admin = Redis:smembers(LiOn.."LiOn:Addictive:Group"..v)
local Vips = Redis:smembers(LiOn.."LiOn:Distinguished:Group"..v)
if k == 1 then
Get_Json = Get_Json..'"'..v..'":{'
else
Get_Json = Get_Json..',"'..v..'":{'
end
if #President ~= 0 then 
Get_Json = Get_Json..'"President":['
for k,v in pairs(President) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Constructor ~= 0 then
Get_Json = Get_Json..'"Constructor":['
for k,v in pairs(Constructor) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Manager ~= 0 then
Get_Json = Get_Json..'"Manager":['
for k,v in pairs(Manager) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Admin ~= 0 then
Get_Json = Get_Json..'"Admin":['
for k,v in pairs(Admin) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Vips ~= 0 then
Get_Json = Get_Json..'"Vips":['
for k,v in pairs(Vips) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
Get_Json = Get_Json..'"Dev":"u24uu"}'
end
Get_Json = Get_Json..'}}'
local File = io.open('./'..UserBot..'.json', "w")
File:write(Get_Json)
File:close()
luatele.sendDocument(Sudo_Id,0,'./'..UserBot..'.json', '*❆︙تم جلب النسخه الاحتياطيه\n❆︙تحتوي على {'..#Groups..'} مجموعه \n❆︙وتحتوي على {'..#UsersBot..'} مشترك *\n', 'md')
Redis:setex(LiOn.."Status:SendFile",86400,true) 
end
if text == 'جلب نسخه الردود العامه' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Get_Json = '{"BotId": '..LiOn..','  
Get_Json = Get_Json..'"GroupsBotreply":{'
listrep = Redis:smembers(LiOn.."LiOn:List:Rd:Sudo")
if #listrep >= 5 then
for k,v in pairs(listrep) do
if Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Gif"..v) then
db = "gif@"..Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Gif"..v)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:vico"..v) then
db = "Vico@"..Redis:get(LiOn.."LiOn:Add:Rd:Sudo:vico"..v)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:stekr"..v) then
db = "Stekrs@"..Redis:get(LiOn.."LiOn:Add:Rd:Sudo:stekr"..v)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Text"..v) then
db = "Text@"..Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Text"..v)
db = string.gsub(db,'"','')
db = string.gsub(db,"'",'')
db = string.gsub(db,'*','')
db = string.gsub(db,'`','')
db = string.gsub(db,'{','')
db = string.gsub(db,'}','')
db = string.gsub(db,'\n',' ')
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Photo"..v) then
db = "Photo@"..Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Photo"..v) 
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Video"..v) then
db = "Video@"..Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Video"..v)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:File"..v) then
db = "File@"..Redis:get(LiOn.."LiOn:Add:Rd:Sudo:File"..v)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Audio"..v) then
db = "Audio@"..Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Audio"..v)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:video_note"..v) then
db = "video_note@"..Redis:get(LiOn.."LiOn:Add:Rd:Sudo:video_note"..v)
end
v = string.gsub(v,'"','')
v = string.gsub(v,"'",'')
Get_Json = Get_Json..'"'..v..'":"'..db..'",'
end   
Get_Json = Get_Json..'"taha":"ok"'
end

Get_Json = Get_Json..'}}'
local File = io.open('./Groups_all.json', "w")
File:write(Get_Json)
File:close()
return luatele.sendDocument(msg_chat_id,msg_id,'./Groups_all.json', '', 'md')
end
if text == 'رفع نسخه الردود العامه' and msg.reply_to_message_id ~= 0 then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply.content.document then
local File_Id = Message_Reply.content.document.document.remote.id
local Name_File = Message_Reply.content.document.file_name
local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..File_Id)) 
local download_ = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,''..Name_File) 
local Get_Info = io.open(download_,"r"):read('*a')
local Reply_Groups = JSON.decode(Get_Info) 
for k,v in pairs(Reply_Groups.GroupsBotreply) do
Redis:sadd(LiOn.."LiOn:List:Rd:Sudo",k)
if v and v:match('gif@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:Gif"..k,v:match('gif@(.*)'))
elseif v and v:match('Vico@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:vico"..k,v:match('Vico@(.*)'))
elseif v and v:match('Stekrs@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:stekr"..k,v:match('Stekrs@(.*)'))
elseif v and v:match('Text@(.*)') then
print('&&&')
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:Text"..k,v:match('Text@(.*)'))
elseif v and v:match('Photo@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:Photo"..k,v:match('Photo@(.*)'))
elseif v and v:match('Video@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:Video"..k,v:match('Video@(.*)'))
elseif v and v:match('File@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:File"..k,v:match('File@(.*)') )
elseif v and v:match('Audio@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:Audio"..k,v:match('Audio@(.*)'))
elseif v and v:match('video_note@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Sudo:video_note"..k,v:match('video_note@(.*)') )
end
end
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تم استرجاع ردود العامه* ',"md",true)  
end
end


if text == 'جلب نسخه الردود' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Get_Json = '{"BotId": '..LiOn..','  
Get_Json = Get_Json..'"GroupsBotreply":{'
local Groups = Redis:smembers(LiOn..'LiOn:ChekBotAdd')  
for k,ide in pairs(Groups) do   
listrep = Redis:smembers(LiOn.."LiOn:List:Manager"..ide.."")
if k == 1 then
Get_Json = Get_Json..'"'..ide..'":{'
else
Get_Json = Get_Json..',"'..ide..'":{'
end
if #listrep >= 5 then
for k,v in pairs(listrep) do
if Redis:get(LiOn.."LiOn:Add:Rd:Manager:Gif"..v..ide) then
db = "gif@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Gif"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Vico"..v..ide) then
db = "Vico@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Vico"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..v..ide) then
db = "Stekrs@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Text"..v..ide) then
db = "Text@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Text"..v..ide)
db = string.gsub(db,'"','')
db = string.gsub(db,"'",'')
db = string.gsub(db,'*','')
db = string.gsub(db,'`','')
db = string.gsub(db,'{','')
db = string.gsub(db,'}','')
db = string.gsub(db,'\n',' ')
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Photo"..v..ide) then
db = "Photo@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Photo"..v..ide) 
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Video"..v..ide) then
db = "Video@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Video"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:File"..v..ide) then
db = "File@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:File"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Audio"..v..ide) then
db = "Audio@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:Audio"..v..ide)
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:video_note"..v..ide) then
db = "video_note@"..Redis:get(LiOn.."LiOn:Add:Rd:Manager:video_note"..v..ide)
end
v = string.gsub(v,'"','')
v = string.gsub(v,"'",'')
Get_Json = Get_Json..'"'..v..'":"'..db..'",'
end   
Get_Json = Get_Json..'"taha":"ok"'
end
Get_Json = Get_Json..'}'
end
Get_Json = Get_Json..'}}'
local File = io.open('./ReplyGroups.json', "w")
File:write(Get_Json)
File:close()
return luatele.sendDocument(msg_chat_id,msg_id,'./ReplyGroups.json', '', 'md')
end
if text == 'رفع نسخه الردود' and msg.reply_to_message_id ~= 0 then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply.content.document then
local File_Id = Message_Reply.content.document.document.remote.id
local Name_File = Message_Reply.content.document.file_name
local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..File_Id)) 
local download_ = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,''..Name_File) 
local Get_Info = io.open(download_,"r"):read('*a')
local Reply_Groups = JSON.decode(Get_Info) 
for GroupId,ListGroup in pairs(Reply_Groups.GroupsBotreply) do
if ListGroup.taha == "ok" then
for k,v in pairs(ListGroup) do
Redis:sadd(LiOn.."LiOn:List:Manager"..GroupId,k)
if v and v:match('gif@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Gif"..k..GroupId,v:match('gif@(.*)'))
elseif v and v:match('Vico@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Vico"..k..GroupId,v:match('Vico@(.*)'))
elseif v and v:match('Stekrs@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..k..GroupId,v:match('Stekrs@(.*)'))
elseif v and v:match('Text@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Text"..k..GroupId,v:match('Text@(.*)'))
elseif v and v:match('Photo@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Photo"..k..GroupId,v:match('Photo@(.*)'))
elseif v and v:match('Video@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Video"..k..GroupId,v:match('Video@(.*)'))
elseif v and v:match('File@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:File"..k..GroupId,v:match('File@(.*)') )
elseif v and v:match('Audio@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:Audio"..k..GroupId,v:match('Audio@(.*)'))
elseif v and v:match('video_note@(.*)') then
Redis:set(LiOn.."LiOn:Add:Rd:Manager:video_note"..k..GroupId,v:match('video_note@(.*)') )
end
end
end
end
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تم استرجاع ردود المجموعات* ',"md",true)  
end
end
if text and text:match("^تعيين عدد الاعضاء (%d+)$") then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn..'LiOn:Num:Add:Bot',text:match("تعيين عدد الاعضاء (%d+)$") ) 
luatele.sendText(msg_chat_id,msg_id,'*❆︙ تم تعيين عدد اعضاء تفعيل البوت اكثر من : '..text:match("تعيين عدد الاعضاء (%d+)$")..' عضو *',"md",true)  
elseif text =='الاحصائيات' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
luatele.sendText(msg_chat_id,msg_id,'*❆︙عدد احصائيات البوت الكامله \n— — — — — — — — —\n❆︙عدد المجموعات : '..(Redis:scard(LiOn..'LiOn:ChekBotAdd') or 0)..'\n❆︙عدد المشتركين : '..(Redis:scard(LiOn..'LiOn:Num:User:Pv') or 0)..'*',"md",true)  
end
if text == 'تفعيل' and msg.Developers then
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Get_Chat = luatele.getChat(msg_chat_id)
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
if tonumber(Info_Chats.member_count) < tonumber((Redis:get(LiOn..'LiOn:Num:Add:Bot') or 0)) and not msg.ControllerBot then
return luatele.sendText(msg_chat_id,msg_id,'❆︙عدد الاعضاء قليل لا يمكن تفعيل المجموعه  يجب ان يكون اكثر من :'..Redis:get(LiOn..'LiOn:Num:Add:Bot'),"md",true)  
end
if Redis:sismember(LiOn.."LiOn:ChekBotAdd",msg_chat_id) then
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
if Info_Chats.photo then
return luatele.sendPhoto(msg.chat_id, msg.id, Info_Chats.photo.sizes[1].photo.remote.id,'\n*❆︙المجموعه : {*['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*}\n❆︙تم تفعيلها مسبقا *',"md")
else
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙المجموعه : {*['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*}\n❆︙تم تفعيلها مسبقا *',"md",true)  
end
else

if not msg.ControllerBot then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
for Name_User in string.gmatch(UserInfo.first_name, "[^%s]+" ) do
UserInfo.first_name = Name_User
break
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}, 
},
}
}
luatele.sendText(Sudo_Id,0,'*\n❆︙تم تفعيل مجموعه جديده \n❆︙من قام بتفعيلها : {*['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')*} \n❆︙معلومات المجموعه :\n❆︙عدد الاعضاء : '..Info_Chats.member_count..'\n❆︙عدد الادمنيه : '..Info_Chats.administrator_count..'\n❆︙عدد المطرودين : '..Info_Chats.banned_count..'\n❆︙عدد المقيدين : '..Info_Chats.restricted_count..'*\n❆︙['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')\n❆︙`'..msg_chat_id..'`',"md",true, false, false, false, reply_markup)
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
UserIdMalek = 0
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
UserIdMalek = v.member_id.user_id
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,v.member_id.user_id) 
else
Redis:sadd(LiOn.."LiOn:Addictive:Group"..msg_chat_id,v.member_id.user_id) 
end
end
end
Redis:set(LiOn.."LiOn:Alzwag:Chat"..msg.chat_id,"true")
Redis:set(LiOn.."LiOn:Althnaee:Chat"..msg.chat_id,"true")
Redis:set(LiOn.."LiOn:Aldel:Chat"..msg.chat_id,"true")
Redis:set(LiOn..'tagallgroup'..msg.chat_id,'open') 
Redis:set(LiOn.."LiOn:Status:Link"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:Status:Games"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:AlThther:Chat"..msg.chat_id,"true")
Redis:set(LiOn.."replayallbot"..msg.chat_id,true)
Redis:set(LiOn.."LiOn:Status:Welcome"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:AlThther:Chat"..msg.chat_id,"true")
Redis:set(LiOn..'tagall@all'..msg.chat_id,'open') 
Redis:set(LiOn.."LiOn:Status:IdPhoto"..msg_chat_id,true) 
Redis:del(LiOn.."spammkick"..msg.chat_id)
Redis:set(LiOn.."LiOn:Lock:edit"..msg_chat_id,true) 
Redis:sadd(LiOn.."LiOn:ChekBotAdd",msg_chat_id)
Redis:set(LiOn.."LiOn:Status:Id"..msg_chat_id,true) ;Redis:set(LiOn.."LiOn:Status:Reply"..msg_chat_id,true) ;Redis:set(LiOn.."LiOn:Status:ReplySudo"..msg_chat_id,true) ;Redis:set(LiOn.."LiOn:Status:BanId"..msg_chat_id,true) ;Redis:set(LiOn.."LiOn:Status:SetId"..msg_chat_id,true) 
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
local UserInfo = luatele.getUser(UserIdMalek)
local textadd = '\n*❆︙المجموعه : *['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*\n❆︙تم تفعيلها بنجاح *'..
'\n*❆︙المالك :* ['..UserInfo.first_name..'](tg://user?id='..UserIdMalek..')'..
'\n*❆︙المشرفين : *'..Info_Chats.administrator_count..
'\n*❆︙الاعضاء : *'..Info_Chats.member_count
if Info_Chats.photo then
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = '- رفع المالك والادمنيه', callback_data = msg.sender_id.user_id..'/addAdmins@'..msg_chat_id},
},
{
{text = '- قفل جميع الاوامر ', callback_data =msg.sender_id.user_id..'/LockAllGroup@'..msg_chat_id},{text = '- ترتيب الاوامر', callback_data = msg.sender_id.user_id..'/trtep@'..msg_chat_id},
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(textadd)..'&photo='..Info_Chats.photo.sizes[1].photo.remote.id..'&reply_to_message_id='..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboardd))
else
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- رفع المالك والادمنيه', data = msg.sender_id.user_id..'/addAdmins@'..msg_chat_id},
},
{
{text = '- قفل جميع الاوامر ', data =msg.sender_id.user_id..'/LockAllGroup@'..msg_chat_id},{text = '- ترتيب الاوامر', data = msg.sender_id.user_id..'/trtep@'..msg_chat_id},
},
}
}

return luatele.sendText(msg_chat_id,msg_id,textadd,'md', true, false, false, false, reply_markup)
end

end
end 
if text == 'تفعيل' and not msg.Developers then
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if Redis:sismember(LiOn..'Black:listBan:',msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ المجموعه محظوره من التفعيل *","md",true)  
end
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
local AddedBot = true
elseif (StatusMember == "chatMemberStatusAdministrator") then
local AddedBot = true
else
local AddedBot = false
end
if AddedBot == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرا انته لست ادمن او مالك المجموعه *","md",true)  
end
if not Redis:get(LiOn.."LiOn:BotFree") then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙الوضع الخدمي تم تعطيله من قبل مطور البوت *","md",true)  
end
local Get_Chat = luatele.getChat(msg_chat_id)
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
if tonumber(Info_Chats.member_count) < tonumber((Redis:get(LiOn..'LiOn:Num:Add:Bot') or 0)) and not msg.ControllerBot then
return luatele.sendText(msg_chat_id,msg_id,'❆︙عدد الاعضاء قليل لا يمكن تفعيل المجموعه  يجب ان يكون اكثر من :'..Redis:get(LiOn..'LiOn:Num:Add:Bot'),"md",true)  
end
if Redis:sismember(LiOn.."LiOn:ChekBotAdd",msg_chat_id) then
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
if Info_Chats.photo then
return luatele.sendPhoto(msg.chat_id, msg.id, Info_Chats.photo.sizes[1].photo.remote.id,'\n*❆︙المجموعه : {*['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*}\n❆︙تم تفعيلها مسبقا *',"md")
else
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙المجموعه : {*['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*}\n❆︙تم تفعيلها مسبقا *',"md",true)  
end
else
if not msg.ControllerBot then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
for Name_User in string.gmatch(UserInfo.first_name, "[^%s]+" ) do
UserInfo.first_name = Name_User
break
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}, 
},
}
}
luatele.sendText(Sudo_Id,0,'*\n❆︙تم تفعيل مجموعه جديده \n❆︙من قام بتفعيلها : {*['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')*} \n❆︙معلومات المجموعه :\n❆︙عدد الاعضاء : '..Info_Chats.member_count..'\n❆︙عدد الادمنيه : '..Info_Chats.administrator_count..'\n❆︙عدد المطرودين : '..Info_Chats.banned_count..'\n❆︙عدد المقيدين : '..Info_Chats.restricted_count..'*\n❆︙['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')\n❆︙`'..msg_chat_id..'`',"md",true, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- رفع المالك والادمنيه', data = msg.sender_id.user_id..'/addAdmins@'..msg_chat_id},
},
{
{text = '- قفل جميع الاوامر ', data =msg.sender_id.user_id..'/LockAllGroup@'..msg_chat_id},{text = '- ترتيب الاوامر', data = msg.sender_id.user_id..'/trtep@'..msg_chat_id},
},
}
}
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
UserIdMalek = 0
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
UserIdMalek = v.member_id.user_id
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,v.member_id.user_id) 
else
Redis:sadd(LiOn.."LiOn:Addictive:Group"..msg_chat_id,v.member_id.user_id) 
end
end
end
Redis:set(LiOn.."LiOn:Alzwag:Chat"..msg.chat_id,"true")
Redis:set(LiOn.."LiOn:Althnaee:Chat"..msg.chat_id,"true")
Redis:set(LiOn.."LiOn:Aldel:Chat"..msg.chat_id,"true")
Redis:set(LiOn..'tagallgroup'..msg.chat_id,'open') 
Redis:set(LiOn.."LiOn:Status:Link"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:Status:Games"..msg_chat_id,true) 
Redis:set(LiOn.."replayallbot"..msg.chat_id,true)
Redis:set(LiOn.."LiOn:AlThther:Chat"..msg.chat_id,"true")
Redis:set(LiOn.."LiOn:Status:Welcome"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:AlThther:Chat"..msg.chat_id,"true")
Redis:set(LiOn..'tagall@all'..msg.chat_id,'open') 
Redis:set(LiOn.."LiOn:Status:IdPhoto"..msg_chat_id,true) 
Redis:del(LiOn.."spammkick"..msg.chat_id)
Redis:set(LiOn.."LiOn:Lock:edit"..msg_chat_id,true) 
Redis:sadd(LiOn.."LiOn:ChekBotAdd",msg_chat_id)
Redis:set(LiOn.."LiOn:Status:Id"..msg_chat_id,true) ;Redis:set(LiOn.."LiOn:Status:Reply"..msg_chat_id,true) ;Redis:set(LiOn.."LiOn:Status:ReplySudo"..msg_chat_id,true) ;Redis:set(LiOn.."LiOn:Status:BanId"..msg_chat_id,true) ;Redis:set(LiOn.."LiOn:Status:SetId"..msg_chat_id,true) 
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
local UserInfo = luatele.getUser(UserIdMalek)
local textadd = '\n*❆︙المجموعه : *['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*\n❆︙تم تفعيلها بنجاح *'..
'\n*❆︙المالك :* ['..UserInfo.first_name..'](tg://user?id='..UserIdMalek..')'..
'\n*❆︙المشرفين : *'..Info_Chats.administrator_count..
'\n*❆︙الاعضاء : *'..Info_Chats.member_count
if Info_Chats.photo then
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = '- رفع المالك والادمنيه', callback_data = msg.sender_id.user_id..'/addAdmins@'..msg_chat_id},
},
{
{text = '- قفل جميع الاوامر ', callback_data =msg.sender_id.user_id..'/LockAllGroup@'..msg_chat_id},{text = '- ترتيب الاوامر', callback_data = msg.sender_id.user_id..'/trtep@'..msg_chat_id},
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(textadd)..'&photo='..Info_Chats.photo.sizes[1].photo.remote.id..'&reply_to_message_id='..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboardd))
else
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- رفع المالك والادمنيه', data = msg.sender_id.user_id..'/addAdmins@'..msg_chat_id},
},
{
{text = '- قفل جميع الاوامر ', data =msg.sender_id.user_id..'/LockAllGroup@'..msg_chat_id},{text = '- ترتيب الاوامر', data = msg.sender_id.user_id..'/trtep@'..msg_chat_id},
},
}
}

return luatele.sendText(msg_chat_id,msg_id,textadd,'md', true, false, false, false, reply_markup)
end

end
end

if text == 'تعطيل' and msg.Developers then
local Get_Chat = luatele.getChat(msg_chat_id)
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
if not Redis:sismember(LiOn.."LiOn:ChekBotAdd",msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙المجموعه : {*['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*}\n❆︙تم تعطيلها مسبقا *',"md",true)  
else
if not msg.ControllerBot then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
for Name_User in string.gmatch(UserInfo.first_name, "[^%s]+" ) do
UserInfo.first_name = Name_User
break
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}, 
},
}
}
luatele.sendText(Sudo_Id,0,'*\n❆︙تم تعطيل مجموعه جديده \n❆︙من قام بتعطيلها : {*['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')*} \n❆︙معلومات المجموعه :\n❆︙عدد الاعضاء : '..Info_Chats.member_count..'\n❆︙عدد الادمنيه : '..Info_Chats.administrator_count..'\n❆︙عدد المطرودين : '..Info_Chats.banned_count..'\n❆︙عدد المقيدين : '..Info_Chats.restricted_count..'*',"md",true, false, false, false, reply_markup)
end
Redis:srem(LiOn.."LiOn:ChekBotAdd",msg_chat_id)
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙المجموعه : {*['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*}\n❆︙تم تعطيلها بنجاح *','md',true)
end
end
if text == 'تعطيل' and not msg.Developers then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
local AddedBot = true
elseif (StatusMember == "chatMemberStatusAdministrator") then
local AddedBot = true
else
local AddedBot = false
end
if AddedBot == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرا انته لست ادمن او مالك المجموعه *","md",true)  
end
local Get_Chat = luatele.getChat(msg_chat_id)
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
if not Redis:sismember(LiOn.."LiOn:ChekBotAdd",msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙المجموعه : {*['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*}\n❆︙تم تعطيلها مسبقا *',"md",true)  
else
if not msg.ControllerBot then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
for Name_User in string.gmatch(UserInfo.first_name, "[^%s]+" ) do
UserInfo.first_name = Name_User
break
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}, 
},
}
}
aluatele.sendText(Sudo_Id,0,'*\n❆︙تم تعطيل مجموعه جديده \n❆︙من قام بتعطيلها : {*['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')*} \n❆︙معلومات المجموعه :\n❆︙عدد الاعضاء : '..Info_Chats.member_count..'\n❆︙عدد الادمنيه : '..Info_Chats.administrator_count..'\n❆︙عدد المطرودين : '..Info_Chats.banned_count..'\n❆︙عدد المقيدين : '..Info_Chats.restricted_count..'*',"md",true, false, false, false, reply_markup)
end
Redis:srem(LiOn.."LiOn:ChekBotAdd",msg_chat_id)
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙المجموعه : {*['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*}\n❆︙تم تعطيلها بنجاح *','md',true)
end
end
if text == 'تفعيل نداء المطور' then   
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."Status:tagdev",true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙ تم تفعيل نداء المطور*","md",true )
end
if text == 'تعطيل نداء المطور' then   
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:del(LiOn.."Status:tagdev") 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙ تم تعطيل نداء المطور*","md",true )
end

if chat_type(msg.chat_id) == "GroupBot" and Redis:sismember(LiOn.."LiOn:ChekBotAdd",msg_chat_id) then
Redis:incr(LiOn..'LiOn:Num:Message:User'..msg.chat_id..':'..msg.sender_id.user_id) 
if text == "تصفير الفلوس" then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
GroupAllRtba = Redis:hgetall(LiOn..':Panki:Visa')
GroupAllRtbaL = {}
for k,v in pairs(GroupAllRtba) do table.insert(GroupAllRtbaL,{v,k}) end
Count,Kount,i = 20 , 0 , 1
for _ in pairs(GroupAllRtbaL) do Kount = Kount + 1 end
table.sort(GroupAllRtbaL, function(a, b) return tonumber(a[1]) > tonumber(b[1]) end)
if Count >= Kount then Count = Kount end
for k,v in pairs(GroupAllRtbaL) do
if i <= Count then  
local Acunteeuser = Redis:get(LiOn.."User:Pank"..v[2])
Redis:del(LiOn..':Panki:Visa:stel:'..v[2])
Redis:del(LiOn.."User:Pank:Names"..v[2])
Redis:del(LiOn.."User:jops:Names"..v[2])
Redis:del(LiOn.."User:Pank:Denar"..v[2]..Acunteeuser)
Redis:del(LiOn.."User:Pank"..v[2])
Redis:hdel(LiOn..':Panki:Visa:stel',v[2],Acunteeuser)
Redis:hdel(LiOn..':Panki:Visa',v[2],Acunteeuser)
end ; 
i=i+1
end
return luatele.sendText(msg.chat_id,msg.id,"تم تصفير الفلوس على الجميع")
end

if text =="توب" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
GroupAllRtba = Redis:hgetall(LiOn..':Panki:Visa')
GroupAllRtbaL = {}
for k,v in pairs(GroupAllRtba) do table.insert(GroupAllRtbaL,{v,k}) end
Count,Kount,i = 20 , 0 , 1
for _ in pairs(GroupAllRtbaL) do Kount = Kount + 1 end
table.sort(GroupAllRtbaL, function(a, b) return tonumber(a[1]) > tonumber(b[1]) end)
if Count >= Kount then Count = Kount end
Text = "⋇︙قائمه ترند التوب 20 ⇟ \n          ━─━─────━─────━─━\n"
for k,v in pairs(GroupAllRtbaL) do
if i <= Count then  
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..v[2]..v[1])
local UserInfo = luatele.getUser(v[2])
Text = Text..i..'- ❲['..(UserInfo.first_name or "error")..'](tg://user?id='..v[2]..')❳ ~ ❲*'..GetDenar..'*❳\n' 
end ; 
i=i+1
end
return luatele.sendText(msg.chat_id,msg.id,Text,"md")
end
if text =="توب الحراميه" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
GroupAllRtba = Redis:hgetall(LiOn..':Panki:Visa:stel')
GroupAllRtbaL = {}
for k,v in pairs(GroupAllRtba) do table.insert(GroupAllRtbaL,{v,k}) end
Count,Kount,i = 20 , 0 , 1
for _ in pairs(GroupAllRtbaL) do Kount = Kount + 1 end
table.sort(GroupAllRtbaL, function(a, b) return tonumber(a[1]) > tonumber(b[1]) end)
if Count >= Kount then Count = Kount end
Text = "⋇︙قائمه توب الحراميه ⇟ \n          ━─━─────━─────━─━\n"
for k,v in pairs(GroupAllRtbaL) do
if i <= Count then  
local GetTotalall = Redis:get(LiOn..':Panki:Visa:stel:'..v[2]) or 0
local UserInfo = luatele.getUser(v[2])
Text = Text..i..'- ❲['..UserInfo.first_name..'](tg://user?id='..v[2]..')❳ ~ ❲*'..GetTotalall..'*❳\n' 
end ; 
i=i+1
end
return luatele.sendText(msg.chat_id,msg.id,Text,"md")
end

if not Redis:get(LiOn.."lock_getpankiuser"..msg.chat_id) then
if text == "انشاء حساب بنكي" then
if Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت لديك حساب بنكي بالفعل ")
end
Redis:set(LiOn..":Redis:Pank:getr:"..msg.chat_id..":"..msg.sender_id.user_id,true)
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙اختار نوع البنك الذي تريده \n❆︙`بنك الرافدين`\n❆︙`بنك الرشيد`\n❆︙`بنك الدولي`","md")
end

if text and Redis:get(LiOn..":Redis:Pank:getr:"..msg.chat_id..":"..msg.sender_id.user_id) == "true" then
if text == 'بنك الرشيد' or text == 'بنك الرافدين' or text == 'بنك الدولي' then
local n = math.random(10, 40);
local n2 = math.random(10, 15);
local n3 = math.random(30, 33);
local n4 = math.random(1, 10);
local n5 = math.random(1, 10);
local n6 = math.random(5, 10);
local n7 = math.random(300, 400);
Redis:hset(LiOn..':Panki:Visa',msg.sender_id.user_id,n..n2..n3..n4..n5..n6..n7)
Redis:set(LiOn.."User:Pank"..msg.sender_id.user_id,n..n2..n3..n4..n5..n6..n7)
Redis:set(LiOn.."User:Pank:Names"..msg.sender_id.user_id,text)
Redis:del(LiOn..":Redis:Pank:getr:"..msg.chat_id..":"..msg.sender_id.user_id)
return luatele.sendText(msg.chat_id,msg.id,"❆︙تم انشاء حساب لك\n❆︙ رقم حسابك ("..n..n2..n3..n4..n5..n6..n7..")\n❆︙المصرف : "..text,"md")
end
end
if text and text:match("تحويل (%d+)") and msg.reply_to_message_id then
local NumGetr = text:match("تحويل (%d+)")
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if not Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت ليس لديك حساب بنكي  " ,"md")
end
if not Redis:get(LiOn.."User:Pank"..Message_Reply.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙الشخص الذي تريد تحويل اليه لا يملك حساب  ")
end
if tonumber(msg.sender_id.user_id) == tonumber(Message_Reply.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙ميصير تحول فلوس لنفسك")
end
local Acunteeuserr = Redis:get(LiOn.."User:Pank"..Message_Reply.sender_id.user_id)
local GetDenarr = Redis:get(LiOn.."User:Pank:Denar"..Message_Reply.sender_id.user_id..Acunteeuserr) or 0
local Acunteeuserm = Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id)
local GetDenarm = Redis:get(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuserm) or 0
Redis:set(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuserm,(GetDenarm - NumGetr))
Redis:set(LiOn.."User:Pank:Denar"..Message_Reply.sender_id.user_id..Acunteeuserr,(GetDenarr + NumGetr))
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙ رقم حسابك (`"..Acunteeuserm.."`)\n❆︙ تم التحويل الى (`"..Acunteeuserr.."`)\n*❆︙المبلغ : "..NumGetr.." دينار\n❆︙فلوس المستلم ("..(GetDenarr + NumGetr)..")\n❆︙فلوس المرسل : "..(GetDenarm - NumGetr).."*","md")
end

if text == 'حسابي' then
if not Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت ليس لديك حساب بنكي  " ,"md")
end
local getjops = Redis:get(LiOn.."User:jops:Names"..msg.sender_id.user_id) or "دكتور"
local getpanki = Redis:get(LiOn.."User:Pank:Names"..msg.sender_id.user_id) or "بنك الرشيد"
local Acunteeuser = Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id)
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser) or 0
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙ رقم حسابك ("..Acunteeuser..")\n❆︙البنك : "..getpanki.."\n❆︙فلوسك : "..GetDenar.." دينار","md")
end
if text == 'حسابه' and msg.reply_to_message_id then
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if not Redis:get(LiOn.."User:Pank"..Message_Reply.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙ليس لديه حساب بنكي  ")
end
local getjops = Redis:get(LiOn.."User:jops:Names"..Message_Reply.sender_id.user_id) or "دكتور"
local getpanki = Redis:get(LiOn.."User:Pank:Names"..Message_Reply.sender_id.user_id) or "بنك الرشيد"
local Acunteeuser = Redis:get(LiOn.."User:Pank"..Message_Reply.sender_id.user_id)
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..Message_Reply.sender_id.user_id..Acunteeuser) or 0
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙ رقم حسابه ("..Acunteeuser..")\n❆︙البنك : "..getpanki.."\n❆︙فلوسه : "..GetDenar.." دينار","md")
end
if text == 'فلوسي' then
if not Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت ليس لديك حساب بنكي  " ,"md")
end
local Acunteeuser = Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id)
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser) or 0
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙ رقم حسابك ("..Acunteeuser..")\n❆︙فلوسك : "..GetDenar.." دينار","md")
end

if text == 'فلوسه' and msg.reply_to_message_id then
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if not Redis:get(LiOn.."User:Pank"..Message_Reply.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙ليس لديه حساب بنكي  ")
end
local Acunteeuser = Redis:get(LiOn.."User:Pank"..Message_Reply.sender_id.user_id)
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..Message_Reply.sender_id.user_id..Acunteeuser) or 0
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙ رقم حسابه ("..Acunteeuser..")\n❆︙فلوسه : "..GetDenar.." دينار","md")
end
if text == 'مسح حسابي البنكي' then
if not Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت ليس لديك حساب بنكي  " ,"md")
end
local Acunteeuser = Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id)
Redis:del(LiOn..':Panki:Visa:stel:'..msg.sender_id.user_id)
Redis:del(LiOn.."User:Pank:Names"..msg.sender_id.user_id)
Redis:del(LiOn.."User:jops:Names"..msg.sender_id.user_id)
Redis:del(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser)
Redis:del(LiOn.."User:Pank"..msg.sender_id.user_id)
Redis:hdel(LiOn..':Panki:Visa:stel',msg.sender_id.user_id,Acunteeuser)
Redis:hdel(LiOn..':Panki:Visa',msg.sender_id.user_id,Acunteeuser)
return luatele.sendText(msg.chat_id,msg.id,"❆︙تم مسح حسابك" ,"md")
end
if text == "راتب" then
if Redis:get(LiOn.."Status:Expir1"..msg.sender_id.user_id) == "true" then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انتضر لحين نفاذ الوقت : "..os.date("%M:%S",tonumber(Redis:ttl(LiOn.."Status:Expir1"..msg.sender_id.user_id))))
end
if not Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت ليس لديك حساب بنكي  " ,"md")
end
local jops = {"دكتور","مهندس","طيار","موظف حكومي"}
local RandJops = jops[math.random(#jops)]
if RandJops == "موظف حكومي" then
TitleNum = 100
elseif RandJops == "دكتور" then
TitleNum = 300
elseif RandJops == "طيار" then
TitleNum = 400
elseif RandJops == "مهندس" then
TitleNum = 200
end
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Namers = '['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')'
local Acunteeuser = Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id)
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser) or 0
Redis:set(LiOn.."User:jops:Names"..msg.sender_id.user_id,RandJops)
Redis:set(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser,(TitleNum + GetDenar))
Redis:setex(LiOn.."Status:Expir1"..msg.sender_id.user_id,1200,true) 
return luatele.sendText(msg.chat_id,msg.id,"❆︙اشعار الايداع : "..Namers.."\n❆︙فلوسك السابق : "..GetDenar.." دينار\n❆︙وضيفتك الان "..RandJops.."\n❆︙تم ايداع مبلغ ("..TitleNum..")\n❆︙فلوسك الحالي هوا : "..(TitleNum + GetDenar),"md")
end
if text == "بخشيش" then
if Redis:get(LiOn.."Status:Expir2"..msg.sender_id.user_id) == "true" then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انتضر لحين نفاذ الوقت : "..os.date("%M:%S",tonumber(Redis:ttl(LiOn.."Status:Expir2"..msg.sender_id.user_id))))
end
if not Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت ليس لديك حساب بنكي  " ,"md")
end
local Maney = math.random(100, 250);
local Acunteeuser = Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id)
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser) or 0
Redis:set(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser,(Maney + GetDenar))
Redis:setex(LiOn.."Status:Expir2"..msg.sender_id.user_id,600,true) 
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙ رقم حسابك ("..Acunteeuser..")\n❆︙دلعتك ونطيتك بخشيش ("..Maney..")\n❆︙فلوسك الحاليه : "..(Maney + GetDenar),"md")
end

if text and text:match("استثمار (%d+)") then
local textdenar = tonumber(text:match("استثمار (%d+)"))
if Redis:get(LiOn.."Status:Expir3"..msg.sender_id.user_id) == "true" then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انتضر لحين نفاذ الوقت : "..os.date("%M:%S",tonumber(Redis:ttl(LiOn.."Status:Expir3"..msg.sender_id.user_id))))
end
if not Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت ليس لديك حساب بنكي  " ,"md")
end
local Maney = math.random(1, 15);
local Totel = Maney * textdenar
local Acunteeuser = Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id)
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser) or 0
if textdenar > tonumber(GetDenar) then
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙لا يمك استثمار مبلغ لا تمتلكه")
end
Redis:set(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser,(Totel + GetDenar))
Redis:setex(LiOn.."Status:Expir3"..msg.sender_id.user_id,1200,true) 
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙ رقم حسابك ("..Acunteeuser..")\n❆︙نسبه المضاربه ("..Maney.."%)\n❆︙الربح من الاستثمار : "..Totel.."\n❆︙فلوسك الحالي هوا : "..(Totel + GetDenar),"md")
end
if text and text:match("حظ (%d+)") then
local textdenar = tonumber(text:match("حظ (%d+)"))
if Redis:get(LiOn.."Status:Expir4"..msg.sender_id.user_id) == "true" then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انتضر لحين نفاذ الوقت : "..os.date("%M:%S",tonumber(Redis:ttl(LiOn.."Status:Expir4"..msg.sender_id.user_id))))
end
if not Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت ليس لديك حساب بنكي  " ,"md")
end
local jops = {"-","+"}
local RandJops = jops[math.random(#jops)]
local Acunteeuser = Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id)
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser) or 0
if textdenar > tonumber(GetDenar) then
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙لا يمكنك لعب الحظ على مبلغ لا تمتلكه")
end
if RandJops == "-" then
maneydenar = GetDenar - textdenar
TextLoky = "خسرت المبلغ للاسف"
elseif RandJops == "+" then
maneydenar = GetDenar + textdenar
TextLoky = "انضاف المبلغ لحسابك"
end
Redis:set(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser,maneydenar)
Redis:setex(LiOn.."Status:Expir4"..msg.sender_id.user_id,1200,true) 
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙ رقم حسابك ("..Acunteeuser..")\n❆︙"..TextLoky.."\n❆︙المبلغ من الحظ : "..textdenar.."\n❆︙فلوسك الحاليه : "..(maneydenar),"md")
end
if text and text:match("مضاربه (%d+)") then
local textdenar = tonumber(text:match("مضاربه (%d+)"))
if Redis:get(LiOn.."Status:Expir5"..msg.sender_id.user_id) == "true" then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انتضر لحين نفاذ الوقت : "..os.date("%M:%S",tonumber(Redis:ttl(LiOn.."Status:Expir5"..msg.sender_id.user_id))))
end
if not Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت ليس لديك حساب بنكي  " ,"md")
end
local number = {"-","+"}
local Randnumber = number[math.random(#number)]
local number1 = math.random(10, 90);
local Acunteeuser = Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id)
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser) or 0
if textdenar > tonumber(GetDenar) then
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙لا يمكنك مضاربه مبلغ لا تمتلكه")
end
if Randnumber == "-" then
maneydenar = textdenar - number1
StatuesT = "خسرت بالمضاربه\n❆︙ نسبه المضاربه (-"..number1.."%)"
elseif Randnumber == "+" then
maneydenar = textdenar + number1
StatuesT = "فزت بالمضاربه\n❆︙ نسبه المضاربه ("..number1.."%)"
end
Redis:set(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuser,maneydenar)
Redis:setex(LiOn.."Status:Expir5"..msg.sender_id.user_id,1200,true) 
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙"..StatuesT.."\n❆︙مبلغ المضاربه : "..textdenar.."\n❆︙فلوسك الحالي : "..(maneydenar),"md")
end
if text and text:match("سرقه") and msg.reply_to_message_id then
local NumGetr = math.random(200, 1500);
if Redis:get(LiOn.."Status:Expir6"..msg.sender_id.user_id) == "true" then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انتضر لحين نفاذ الوقت : "..os.date("%M:%S",tonumber(Redis:ttl(LiOn.."Status:Expir6"..msg.sender_id.user_id))))
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if Redis:get(LiOn.."Status:Expir66"..Message_Reply.sender_id.user_id) == "true" then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انتضر لحين نفاذ الوقت ويمكنك سرقته : "..os.date("%M:%S",tonumber(Redis:ttl(LiOn.."Status:Expir66"..Message_Reply.sender_id.user_id))))
end
if tonumber(msg.sender_id.user_id) == tonumber(Message_Reply.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙ميصير تسرق فلوس من نفسك")
end
if not Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انت ليس لديك حساب بنكي  " ,"md")
end
if not Redis:get(LiOn.."User:Pank"..Message_Reply.sender_id.user_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙الشخص الذي تريد السرقه منه لا يملك حساب بنكي")
end
local Acunteeuser = Redis:get(LiOn.."User:Pank"..Message_Reply.sender_id.user_id)
local GetDenar = Redis:get(LiOn.."User:Pank:Denar"..Message_Reply.sender_id.user_id..Acunteeuser) or 0
if tonumber(NumGetr) > tonumber(GetDenar) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙لا يمكن سرقه مبلغ هوا لا يملكه")
end
local Acunteeuserm = Redis:get(LiOn.."User:Pank"..msg.sender_id.user_id)
local GetDenarm = Redis:get(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuserm) or 0
if tonumber(GetDenar) <= tonumber(2000) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙لا يمكن سرقه مبلغ اقل من 2000")
end
Redis:set(LiOn.."User:Pank:Denar"..msg.sender_id.user_id..Acunteeuserm,(GetDenarm + NumGetr))
Redis:set(LiOn.."User:Pank:Denar"..Message_Reply.sender_id.user_id..Acunteeuser,(GetDenar - NumGetr))
local GetTotalall = Redis:get(LiOn..':Panki:Visa:stel:'..msg.sender_id.user_id) or 0
Redis:set(LiOn..':Panki:Visa:stel:'..msg.sender_id.user_id,(NumGetr + GetTotalall))
Redis:hset(LiOn..':Panki:Visa:stel',msg.sender_id.user_id,Acunteeuserm)
Redis:setex(LiOn.."Status:Expir66"..Message_Reply.sender_id.user_id,600,true) 
Redis:setex(LiOn.."Status:Expir6"..msg.sender_id.user_id,600,true) 
return luatele.sendText(msg.chat_id,msg.id,"\n❆︙ رقم حسابه ("..Acunteeuser..")\n❆︙فلوسه سابقا : "..GetDenar.." دينار\n❆︙سرقته ("..NumGetr..")\n❆︙فلوسه حاليا هي : "..(GetDenar - NumGetr).." دينار\n❆︙تمت اضافه الاموال الى حسابك","md")
end
end

if text == "تفعيل البنك" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(4).." }* ","md",true)  
end
if not Redis:get(LiOn.."lock_getpankiuser"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر البنك*","md",true )
else 
Redis:del(LiOn.."lock_getpankiuser"..msg.chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر البنك*","md",true )
end 
end
if text == "تعطيل البنك" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(4).." }* ","md",true)  
end
if Redis:get(LiOn.."lock_getpankiuser"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر البنك*","md",true )
else
Redis:set(LiOn.."lock_getpankiuser"..msg.chat_id,true)  
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر البنك*","md",true )
end   
end


if text == "تفعيل الصوتيات العامه" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."lock_geamsAudio"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙ تم تفعيل الصوتيات العامه *","md",true )
else 
Redis:del(LiOn.."lock_geamsAudio"..msg.chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙ تم تفعيل الصوتيات العامه *","md",true )
end 
end
if text == "تعطيل الصوتيات العامه" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."lock_geamsAudio"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙ تم تعطيل الصوتيات العامه*","md",true )
else
Redis:set(LiOn.."lock_geamsAudio"..msg.chat_id,true)  
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙ تم تعطيل الصوتيات العامه*","md",true )
end   
end

if text == "تفعيل الصوتيات" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."lock_geamsAudio1"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙ تم تفعيل الصوتيات *","md",true )
else 
Redis:del(LiOn.."lock_geamsAudio1"..msg.chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙ تم تفعيل الصوتيات *","md",true )
end 
end
if text == "تعطيل الصوتيات" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."lock_geamsAudio1"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙ تم تعطيل الصوتيات*","md",true )
else
Redis:set(LiOn.."lock_geamsAudio1"..msg.chat_id,true)  
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙ تم تعطيل الصوتيات*","md",true )
end   
end
if text == "تعطيل التحذير" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
if not Redis:get(LiOn.."LiOn:AlThther:Chat"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل التحذير*","md",true )
else
Redis:del(LiOn.."LiOn:AlThther:Chat"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل التحذير*","md",true )
end
end
if text == "تفعيل التحذير" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
if Redis:get(LiOn.."LiOn:AlThther:Chat"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل التحذير*","md",true )
else
Redis:set(LiOn.."LiOn:AlThther:Chat"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل التحذير*","md",true )
end
end

if text == "تعطيل زواج" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
if not Redis:get(LiOn.."LiOn:Alzwag:Chat"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل زواج*","md",true )
else
Redis:del(LiOn.."LiOn:Alzwag:Chat"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل زواج*","md",true )
end
end
if text == "تفعيل زواج" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
if Redis:get(LiOn.."LiOn:Alzwag:Chat"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل زواج*","md",true )
else
Redis:set(LiOn.."LiOn:Alzwag:Chat"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل زواج*","md",true )
end
end
if text == "تفعيل شعر" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*✯︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*✯︙تم تفعيل شعر*","md",true )
Redis:del(LiOn.."LiOn:sh3ir:Abs"..msg.chat_id) 
end
if text == "تعطيل شعر" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*✯︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*✯︙تم تعطيل شعر*","md",true )
Redis:set(LiOn.."LiOn:sh3ir:Abs"..msg.chat_id,true)  
end
if text == "تفعيل نبذه" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*✯︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*✯︙تم تفعيل نبذه*","md",true )
Redis:del(LiOn.."LiOn:biousers"..msg.chat_id) 
end
if text == "تعطيل نبذه" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*✯︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*✯︙تم تعطيل نبذه*","md",true )
Redis:set(LiOn.."LiOn:biousers"..msg.chat_id,true)  
end

if text == "تعطيل ثنائي اليوم" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
if not Redis:get(LiOn.."LiOn:Althnaee:Chat"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل ثنائي اليوم مسبقا*","md",true )
else
Redis:del(LiOn.."LiOn:Althnaee:Chat"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل ثنائي اليوم*","md",true )
end
end
if text == "تفعيل ثنائي اليوم" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
if Redis:get(LiOn.."LiOn:Althnaee:Chat"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل ثنائي اليوم مسبقا*","md",true )
else
Redis:set(LiOn.."LiOn:Althnaee:Chat"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل ثنائي اليوم*","md",true )
end
end
if text == "تعطيل التحشيش" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
if Redis:get(LiOn.."amrthshesh"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل التحشيش مسبقا*","md",true )
else
Redis:set(LiOn.."amrthshesh"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل التحشيش*","md",true )
end
end
if text == "تفعيل التحشيش" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
if not Redis:get(LiOn.."amrthshesh"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل التحشيش مسبقا*","md",true )
else
Redis:del(LiOn.."amrthshesh"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل التحشيش*","md",true )
end
end
if text == "تعطيل ردود البوت" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."replayallbot"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل ردود البوت مسبقا*","md",true )
else
Redis:del(LiOn.."replayallbot"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل ردود البوت*","md",true )
end
end
if text == "تفعيل ردود البوت" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."replayallbot"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل ردود البوت مسبقا*","md",true )
else
Redis:set(LiOn.."replayallbot"..msg.chat_id,true)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل ردود البوت*","md",true )
end
end

if text == "تعطيل الحظر المحدود" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(4).." }* ","md",true)  
end
if Redis:get(LiOn.."spammkick"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الحظر المحدود مسبقا*","md",true )
else
Redis:set(LiOn.."spammkick"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الحظر المحدود*","md",true )
end
end
if text == "تفعيل الحظر المحدود" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(4).." }* ","md",true)  
end
if not Redis:get(LiOn.."spammkick"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الحظر المحدود مسبقا*","md",true )
else
Redis:del(LiOn.."spammkick"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الحظر المحدود*","md",true )
end
end
if text == "تفعيل تاك عام" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end   
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if (Redis:get(LiOn.."tagall@all"..msg.chat_id) == "open") then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر @all مسبقا*","md",true )
else
Redis:set(LiOn.."tagall@all"..msg.chat_id,"open") 
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر @all*","md",true )
end
end
if text == "تعطيل تاك عام" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end   
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if (Redis:get(LiOn.."tagall@all"..msg.chat_id) == "close") then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر @all مسبقا*","md",true )
else
Redis:set(LiOn.."tagall@all"..msg.chat_id,"close") 
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر @all*","md",true )
end
end
if text == "تفعيل التاك" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end   
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if (Redis:get(LiOn.."tagallgroup"..msg.chat_id) == "open") then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر التاك مسبقا*","md",true )
else
Redis:set(LiOn.."tagallgroup"..msg.chat_id,"open") 
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر التاك*","md",true )
end
end
if text == "تعطيل التاك" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end   
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if (Redis:get(LiOn.."tagallgroup"..msg.chat_id) == "close") then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر التاك مسبقا*","md",true )
else
Redis:set(LiOn.."tagallgroup"..msg.chat_id,"close") 
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر التاك*","md",true )
end
end
if text == "تعطيل الصيغ" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."kadmeat"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل اوامر الصيغ مسبقا*","md",true )
else
Redis:set(LiOn.."kadmeat"..msg.chat_id,"true")
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل اوامر الصيغ*","md",true )
end
end
if text == "تفعيل الصيغ" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."kadmeat"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل اوامر التحويلات مسبقا*","md",true )
else
Redis:del(LiOn.."kadmeat"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل اوامر الصيغ*","md",true )
end
end
if text == "تعطيل انطق" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."intg"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر انطق مسبقا*","md",true )
else
Redis:set(LiOn.."intg"..msg.chat_id,"true")
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر انطق*","md",true )
end
end
if text == "تفعيل انطق" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."intg"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر انطق مسبقا*","md",true )
else
Redis:del(LiOn.."intg"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر انطق*","md",true )
end
end
if text == "تعطيل غنيلي" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."knele"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر غنيلي مسبقا*","md",true )
else
Redis:set(LiOn.."knele"..msg.chat_id,"true")
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر غنيلي*","md",true )
end
end
if text == "تفعيل غنيلي" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."knele"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر غنيلي مسبقا*","md",true )
else
Redis:del(LiOn.."knele"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر غنيلي*","md",true )
end
end
if text == "تعطيل الابراج" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."brjj"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر الابراج مسبقا*","md",true )
else
Redis:set(LiOn.."brjj"..msg.chat_id,"true")
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر الابراج*","md",true )
end
end
if text == "تفعيل الابراج" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."brjj"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر الابراج مسبقا*","md",true )
else
Redis:del(LiOn.."brjj"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر الابراج*","md",true )
end
end
if text == "تعطيل الزخرفه" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if Redis:get(LiOn.."zhrfa"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر الزخرفه مسبقا*","md",true )
else
Redis:set(LiOn.."zhrfa"..msg.chat_id,"true")
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر الزخرفه*","md",true )
end
end
if text == "تفعيل الزخرفه" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if not Redis:get(LiOn.."zhrfa"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر الزخرفه مسبقا*","md",true )
else
Redis:del(LiOn.."zhrfa"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر الزخرفه*","md",true )
end
end
if text == "تعطيل اسمي" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."idnotmemname"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر اسمي مسبقا*","md",true )
else
Redis:set(LiOn.."idnotmemname"..msg.chat_id,"true")
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر اسمي *","md",true )
end
end
if text == "تفعيل اسمي" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."idnotmemname"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر اسمي مسبقا*","md",true )
else
Redis:del(LiOn.."idnotmemname"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر اسمي *","md",true )
end
end
if text == "تعطيل البايو" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."idnotmembio"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر البايو مسبقا*","md",true )
else
Redis:set(LiOn.."idnotmembio"..msg.chat_id,"true")
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر البايو *","md",true )
end
end
if text == "تفعيل البايو" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."idnotmembio"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر البايو مسبقا*","md",true )
else
Redis:del(LiOn.."idnotmembio"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر البايو *","md",true )
end
end
if text == "تعطيل ايدي العضو" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."idnotmem"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر ايدي العضو مسبقا*","md",true )
else
Redis:set(LiOn.."idnotmem"..msg.chat_id,"true")
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تعطيل امر ايدي العضو*","md",true )
end
end
if text == "تفعيل ايدي العضو" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."idnotmem"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر ايدي العضو مسبقا*","md",true )
else
Redis:del(LiOn.."idnotmem"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id, GetByName(msg).."*❆︙تم تفعيل امر ايدي العضو*","md",true )
end
end
if text == "تفعيل متحركه" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل المتحركه*","md",true )
Redis:del(LiOn.."Abs:gif:Abs"..msg.chat_id) 
end
if text == "تعطيل متحركه" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل المتحركه*","md",true )
Redis:set(LiOn.."Abs:gif:Abs"..msg.chat_id,true)  
end
if text == "تفعيل ميمز" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الميمز*","md",true )
Redis:del(LiOn.."Abs:memz:Abs"..msg.chat_id) 
end
if text == "تعطيل ميمز" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الميمز*","md",true )
Redis:set(LiOn.."Abs:memz:Abs"..msg.chat_id,true)  
end
if text == "تفعيل ريمكس" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الريمكس*","md",true )
Redis:del(LiOn.."Abs:Remix:Abs"..msg.chat_id) 
end
if text == "تعطيل ريمكس" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الريمكس*","md",true )
Redis:set(LiOn.."Abs:Remix:Abs"..msg.chat_id,true)  
end
if text == "تفعيل صوره" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الصوره*","md",true )
Redis:del(LiOn.."Abs:Photo:Abs"..msg.chat_id) 
end
if text == "تعطيل صوره" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الصوره*","md",true )
Redis:set(LiOn.."Abs:Photo:Abs"..msg.chat_id,true)  
end
if text == "تفعيل انمي" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل انمي*","md",true )
Redis:del(LiOn.."Abs:Anime:Abs"..msg.chat_id) 
end
if text == "تعطيل انمي" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل انمي*","md",true )
Redis:set(LiOn.."Abs:Anime:Abs"..msg.chat_id,true)  
end
if text == "تفعيل فلم" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل فلم*","md",true )
Redis:del(LiOn.."Abs:Movies:Abs"..msg.chat_id) 
end
if text == "تعطيل فلم" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل فلم*","md",true )
Redis:set(LiOn.."Abs:Movies:Abs"..msg.chat_id,true)  
end

if text == "تفعيل مسلسل" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل مسلسل*","md",true )
Redis:del(LiOn.."Abs:Series:Abs"..msg.chat_id) 
end
if text == "تعطيل مسلسل" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل مسلسل*","md",true )
Redis:set(LiOn.."Abs:Series:Abs"..msg.chat_id,true)  
end
if text == "تفعيل التحقق" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
Redis:set(LiOn.."LiOn:Status:joinet"..msg_chat_id,true) 
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل التحقق*","md",true )
end
if text == "تعطيل التحقق" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
Redis:del(LiOn.."LiOn:Status:joinet"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل التحقق*","md",true )
end
if text == "تعطيل ضع رتبه" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if Redis:get(LiOn.."Redis:setRt"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر ضع رتبه*","md",true )
else
Redis:set(LiOn.."Redis:setRt"..msg.chat_id,"true")
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر ضع رتبه*","md",true )
end
end
if text == "تفعيل ضع رتبه" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if not Redis:get(LiOn.."Redis:setRt"..msg.chat_id)  then
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر ضع رتبه*","md",true )
else
Redis:del(LiOn.."Redis:setRt"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر ضع رتبه*","md",true )
end
end
if text and text:match("^تفعيل (.*)$") and msg.reply_to_message_id == 0 then
local TextMsg = text:match("^تفعيل (.*)$")
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if TextMsg == "الرابط" then
Redis:set(LiOn.."LiOn:Status:Link"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الرابط*","md",true )
end
if TextMsg == "الترحيب" then
Redis:set(LiOn.."LiOn:Status:Welcome"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الترحيب*","md",true )
end
if TextMsg == "الايدي" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Status:Id"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الايدي*","md",true )
end
if TextMsg == "الايدي بالصوره" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Status:IdPhoto"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الايدي بالصوره*","md",true )
end
if TextMsg == "الردود" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Status:Reply"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الردود*","md",true )
end
if TextMsg == "الردود العامه" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Status:ReplySudo"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الردود العامه*","md",true )
end
if TextMsg == "الحظر" or TextMsg == "الطرد" or TextMsg == "التقييد" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Status:BanId"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الطرد الحظر الكتم*","md",true )
end
if TextMsg == "الرفع" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Status:SetId"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الرفع*","md",true )
end
if TextMsg == "الالعاب" then 
Redis:set(LiOn.."LiOn:Status:Games"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الالعاب*","md",true )
end
if TextMsg == "اطردني" then
Redis:set(LiOn.."LiOn:Status:KickMe"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل اطردني*","md",true )
end
if TextMsg == "البوت الخدمي" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(1).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:BotFree",true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل البوت الخدمي*","md",true )
end
if TextMsg == "التواصل" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(1).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:TwaslBot",true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل التواصل داخل البوت*","md",true )
end

end
if text and text:match("^تعطيل (.*)$") and msg.reply_to_message_id == 0 then
local TextMsg = text:match("^تعطيل (.*)$")
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(7).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if TextMsg == "الرابط" then
Redis:del(LiOn.."LiOn:Status:Link"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الرابط*","md",true )
end
if TextMsg == "الترحيب" then
Redis:del(LiOn.."LiOn:Status:Welcome"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الترحيب*","md",true )
end
if TextMsg == "الايدي" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Status:Id"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الايدي*","md",true )
end
if TextMsg == "الايدي بالصوره" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Status:IdPhoto"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الايدي بالصوره*","md",true )
end
if TextMsg == "الردود" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Status:Reply"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الردود*","md",true )
end
if TextMsg == "الردود العامه" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Status:ReplySudo"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الردود العامه*","md",true )
end
if TextMsg == "الحظر" or TextMsg == "الطرد" or TextMsg == "التقييد" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Status:BanId"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الطرد الحظر الكتم*","md",true )
end
if TextMsg == "الرفع" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Status:SetId"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الرفع*","md",true )
end
if TextMsg == "الالعاب" then
Redis:del(LiOn.."LiOn:Status:Games"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الالعاب*","md",true )
end
if TextMsg == "اطردني" then
Redis:del(LiOn.."LiOn:Status:KickMe"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل اطردني*","md",true )
end
if TextMsg == "البوت الخدمي" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل البوت الخدمي*","md",true )
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:BotFree") 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل البوت الخدمي ","md",true)
end
if TextMsg == "التواصل" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(1).." }* ","md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:TwaslBot") 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل التواصل داخل البوت*","md",true )
end

end
if text == "تعطيل امسح" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if not Redis:get(LiOn.."LiOn:Aldel:Chat"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر امسح*","md",true )
else
Redis:del(LiOn.."LiOn:Aldel:Chat"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر امسح*","md",true )
end
end
if text == "تفعيل امسح" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
if Redis:get(LiOn.."LiOn:Aldel:Chat"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر امسح*","md",true )
else
Redis:set(LiOn.."LiOn:Aldel:Chat"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر امسح*","md",true )
end
end
if text == "تعطيل امسح عام" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(1).." }* ","md",true)  
end
if not Redis:get(LiOn.."LiOn:Aldel:Chatall")  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر امسح عام*","md",true )
else
Redis:del(LiOn.."LiOn:Aldel:Chatall")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر امسح عام*","md",true )
end
end
if text == "تفعيل امسح عام" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(1).." }* ","md",true)  
end
if Redis:get(LiOn.."LiOn:Aldel:Chatall")  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر امسح عام*","md",true )
else
Redis:set(LiOn.."LiOn:Aldel:Chatall","true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر امسح عام*","md",true )
end
end
if text == "تفعيل الالعاب المالكين" then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(8).." }* ","md",true)  
end
Redis:del(LiOn.."LiOn:Status:Games:malk"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل الالعاب المالكين*","md",true )
end
if text == "تعطيل الالعاب المالكين" then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(8).." }* ","md",true)  
end
Redis:set(LiOn.."LiOn:Status:Games:malk"..msg_chat_id,true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل الالعاب المالكين*","md",true )
end
if text == "تفعيل ردود السورس عام" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(1).." }* ","md",true)  
end
Redis:del(LiOn.."LiOn:Status:repleall") 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل ردود السورس عام*","md",true )
end
if text == "تعطيل ردود السورس عام" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(1).." }* ","md",true)  
end
Redis:set(LiOn.."LiOn:Status:repleall",true) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل ردود السورس عام*","md",true )
end
if text == "تعطيل المسح التلقائي" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end        
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
Redis:del(LiOn.."LiOn:Status:Del:Media"..msg.chat_id)
 luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل المسح التلقائي*","md",true )
return false
end 
if text == "تفعيل المسح التلقائي" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end        
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
Redis:set(LiOn.."LiOn:Status:Del:Media"..msg.chat_id,true)
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل المسح التلقائي*","md",true )
return false
end 
if text == "تفعيل نزلني" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر نزلني*","md",true )
Redis:del(LiOn.."LiOn:Nzlne:Abs"..msg.chat_id) 
end
if text == "تعطيل نزلني" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر نزلني*","md",true )
Redis:set(LiOn.."LiOn:Nzlne:Abs"..msg.chat_id,true)  
end
if text == "تعطيل صورتي" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."myphoto"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر صورتي*","md",true )
else
Redis:set(LiOn.."myphoto"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر صورتي*","md",true )
end
end
if text == "تفعيل صورتي" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."myphoto"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر صورتي*","md",true )
else
Redis:del(LiOn.."myphoto"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر صورتي*","md",true )
end
end
if text == "تعطيل منشن" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."mnshntezt"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر منشن*","md",true )
else
Redis:set(LiOn.."mnshntezt"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر منشن*","md",true )
end
end
if text == "تفعيل منشن" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."mnshntezt"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر منشن*","md",true )
else
Redis:del(LiOn.."mnshntezt"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر منشن*","md",true )
end
end
if text == "تعطيل معنى اسم" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."mynames"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل معنى الاسم*","md",true )
else
Redis:set(LiOn.."mynames"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل معنى الاسم*","md",true )
end
end
if text == "تفعيل معنى اسم" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."mynames"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل معنى الاسم*","md",true )
else
Redis:del(LiOn.."mynames"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل معنى الاسم*","md",true )
end
end
if text == "تعطيل كول" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."kolklma"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر كول*","md",true )
else
Redis:del(LiOn.."kolklma"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر كول*","md",true )
end
end
if text == "تفعيل كول" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."kolklma"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر كول*","md",true )
else
Redis:set(LiOn.."kolklma"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر كول*","md",true )
end
end
if text == "تعطيل حساب العمر" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."myages"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل حساب العمر*","md",true )
else
Redis:set(LiOn.."myages"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل حساب العمر*","md",true )
end
end
if text == "تفعيل حساب العمر" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."myages"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل حساب العمر*","md",true )
else
Redis:del(LiOn.."myages"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل حساب العمر*","md",true )
end
end
if text == "تعطيل اغنيه" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."myniknea"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر اغنيه*","md",true )
else
Redis:set(LiOn.."myniknea"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر اغنيه*","md",true )
end
end
if text == "تفعيل اغنيه" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."myniknea"..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر اغنيه*","md",true )
else
Redis:del(LiOn.."myniknea"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر اغنيه*","md",true )
end
end
if text == "تفعيل التوحيد" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل توحيد المجموعه*","md",true )
Redis:set(LiOn.."Bots:Lock:ProNames"..msg.chat_id,true)
end
if text == "تعطيل التوحيد" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(5).." }* ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل توحيد المجموعه*","md",true )
Redis:del(LiOn.."Bots:Lock:ProNames"..msg.chat_id)
end
if text == "تفعيل التفاعل" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."lock_altfael"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر التفاعل*","md",true )
else 
Redis:del(LiOn.."lock_altfael"..msg.chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر التفاعل*","md",true )
end 
end
if text == "تعطيل التفاعل" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."lock_altfael"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر التفاعل*","md",true )
else
Redis:set(LiOn.."lock_altfael"..msg.chat_id,true)  
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر التفاعل*","md",true )
end   
end
if text == "تفعيل نداء المالك" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(8).." }* ","md",true)  
end
if not Redis:get(LiOn.."lock_getadmin"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر نداء المالك*","md",true )
else 
Redis:del(LiOn.."lock_getadmin"..msg.chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر نداء المالك*","md",true )
end 
end
if text == "تعطيل نداء المالك" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(8).." }* ","md",true)  
end
if Redis:get(LiOn.."lock_getadmin"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر نداء المالك*","md",true )
else
Redis:set(LiOn.."lock_getadmin"..msg.chat_id,true)  
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر نداء المالك*","md",true )
end   
end
if text == "تفعيل الردود المتعدده" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if not Redis:get(LiOn.."lock_repleyadded"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر الردود المتعدده*","md",true )
else 
Redis:del(LiOn.."lock_repleyadded"..msg.chat_id) 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تفعيل امر الردود المتعدده*","md",true )
end 
end
if text == "تعطيل الردود المتعدده" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Chat:Channel:Join:Name"..msg.chat_id), url = "t.me/"..Redis:get(LiOn.."LiOn:Chat:Channel:Join"..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = "inline",data = {{{text = Redis:get(LiOn.."LiOn:Channel:Join:Name"), url = "t.me/"..Redis:get(LiOn.."LiOn:Channel:Join")}, },}}
return luatele.sendText(msg.chat_id,msg.id,"*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*","md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙هذا الامر يخص { "..Controller_Num(6).." }* ","md",true)  
end
if Redis:get(LiOn.."lock_repleyadded"..msg.chat_id) then 
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر الردود المتعدده*","md",true )
else
Redis:set(LiOn.."lock_repleyadded"..msg.chat_id,true)  
return luatele.sendText(msg_chat_id,msg_id,GetByName(msg).."*❆︙تم تعطيل امر الردود المتعدده*","md",true )
end   
end

if msg.Managers then
if text and (text:match("^ضع التوحيد (.*)$") or text:match("^ضع توحيد (.*)$")) then
if Redis:get(LiOn.."Bots:Lock:ProNames"..msg.chat_id) then
local Txt = text:match("^ضع التوحيد (.*)$") or text:match("^ضع توحيد (.*)$")
luatele.sendText(msg.chat_id, msg.id, '⌁︙تم تعيين ↫ '..Txt..' كتوحيد للمجموعه')
Redis:set(LiOn.."Bots:ProNames:Txt"..msg.chat_id,Txt)
else
luatele.sendText(msg.chat_id, msg.id, '⌁︙ميزة التوحيد معطله يرجى تفعيلها')
end
end
if text == "مسح التوحيد" then
Redis:del(LiOn.."Bots:ProNames:Txt"..msg.chat_id)
luatele.sendText(msg.chat_id, msg.id,"تم مسح التوحيد ")
end

if text and (text:match("^تعين عدد الكتم (.*)$") or text:match("^تعيين عدد الكتم (.*)$")) then
if Redis:get(LiOn.."Bots:Lock:ProNames"..msg.chat_id) then
local Num = text:match("^تعين عدد الكتم (.*)$") or text:match("^تعيين عدد الكتم (.*)$")
luatele.sendText(msg.chat_id, msg.id, '⌁︙تم تعيين  ↫ '..Num..' عدد الكتم')
Redis:set(LiOn.."Bots:ProNames:Num"..msg.chat_id,Num)
else
luatele.sendText(msg.chat_id, msg.id, '⌁︙ميزة التوحيد معطله يرجى تفعيلها')
end
end
end

if text == "التوحيد" or text == "توحيد" then
if Redis:get(LiOn.."Bots:ProNames:Txt"..msg.chat_id) then
local ProNamesTxt = Redis:get(LiOn.."Bots:ProNames:Txt"..msg.chat_id)
local ProNamesNum = Redis:get(LiOn.."Bots:ProNames:Num"..msg.chat_id) or 5
luatele.sendText(msg.chat_id, msg.id, '⌁︙التوحيد هو ↫ {`'..ProNamesTxt..'`}\n⌁︙عدد المحاولات للكتم ↫ '..ProNamesNum,"md")
else
luatele.sendText(msg.chat_id, msg.id, '⌁︙لم يتم تعيين توحيد للمجموعه')
end
end

if text and not msg.Originators then
if Redis:get(LiOn.."Bots:Lock:ProNames"..msg.chat_id) and Redis:get(LiOn.."Bots:ProNames:Txt"..msg.chat_id) then 
local UserInfo = luatele.getUser(msg.sender_id.user_id)
if UserInfo and UserInfo.first_name then 
local last_ = UserInfo.last_name or ""
local first_ = UserInfo.first_name or ""
local Namer = (first_..""..last_)
if Namer:match("(.*)"..Redis:get(LiOn.."Bots:ProNames:Txt"..msg.chat_id).."(.*)") then 
Redis:srem(LiOn..'Bots:Muted:'..msg.chat_id, msg.sender_id.user_id)
else
local ProNamesTxt = Redis:get(LiOn.."Bots:ProNames:Num"..msg.chat_id) or 5
local UserNum = Redis:get(LiOn.."Bots:ProNames:UserNum"..msg.chat_id..msg.sender_id.user_id) or 0
if (tonumber(UserNum) == tonumber(ProNamesTxt) or tonumber(UserNum) > tonumber(ProNamesTxt)) then 
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
Redis:del(LiOn.."Bots:ProNames:UserNum"..msg.chat_id..msg.sender_id.user_id)
if UserInfo.username then
UserInfousername = ''..UserInfo.username..''
else
UserInfousername = 'ul_39'
end
luatele.sendText(msg.chat_id, msg.id, "⌁︙العضو ↫ ["..UserInfo.first_name.."](https://t.me/"..(UserInfousername or "ul_39")..")\n⌁︙تم كتمه بسبب عدم وضع توحيد المجموعه بجانب اسمه يجب عليه وضع التوحيد ","md",true)
else 
Redis:incrby(LiOn.."Bots:ProNames:UserNum"..msg.chat_id..msg.sender_id.user_id,1)
luatele.sendText(msg.chat_id, msg.id,  "⌁︙عذرا عزيزي ↫ ["..UserInfo.first_name.."](https://t.me/"..(UserInfousername or "ul_39")..")\n⌁︙عليك وضع التوحيد ↫ `"..Redis:get(LiOn.."Bots:ProNames:Txt"..msg.chat_id).."` بجانب اسمك\n⌁︙عدد المحاولات المتبقيه ↫ "..(tonumber(ProNamesTxt) - tonumber(UserNum)).."","md",true)
end
end
end
end
end





if text == "لو خيروك" then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
local list = {
"لو خيروك بين أن تكون أقوى شخص في العالم أو أذكى شخص في العالم.",
"لو خيروك بين نشر 25 رقم من سجل مكالماتك وبين نشر آخر 25 صورة قمت بالتقاطها.",
"لو خيروك بين الفوز في اليانصيب بالجائزة الكبرى بشرط إنفاقها كلها في يوم واحد أو أن تتم مضاعفة راتبك 3 مرات للأبد.",
"لو خيروك بين القدرة على كشف كذب الجميع أو القدرة على الكذب بدون أن يتم كشف كذبتك أبدًا.",
"لو خيروك بين الاستماع لنفس الأغنية دائمًا أو مشاهدة نفس الفيلم.",
"لو خيروك بين امتلاك قطة أو كلب.",
"لو خيروك بين الصداقة والحب",
"لو خيروك بين العيش وحدك في جزيرة كبيرة منعزلة مع أكبر درجات الرفاهية وبين العيش في مكان قديم ولكن مع أصدقائك المقربين.",
"لو خيروك بين فقدان ذاكرتك والعيش مع أصدقائك وأقربائك أو بقاء ذاكرتك ولكن العيش وحيد.",
"لو خيروك بين تناول الخضار والفاكهة طوال حياتك أو تناول اللحوم.",
"لو خيروك بين رؤية الأشباح فقط أو سماع صوتها فقط.",
"لو خيروك بين القدرة على سماع أفكار الناس أو القدرة على العودة في الزمن للخلف.",
"لو خيروك بين القدرة على الاختفاء أو القدرة على الطيران.",
"لو خيروك بين أن تعيش 5 دقائق في الماضي أو أن تعيشها في المستقبل.",
"لو خيروك بين 5 ملايين دولار أو 5 ملايين لحظة سعادة حقيقية.",
"لو خيروك بين الاعتذار عن خطأ اقترفته أو أن يقدم لك شخص أخطأ في حقق اعتذار.",
"لو خيروك بين الحقد أو المسامحة.",
"لو خيروك بين إنقاذ نفسك أو إنقاذ شخص وقد يعرضك ذلك للأذى.",
"لو خيروك بين أن تعيش في القرن الرابع عشر أو القرن الحالي.",
"لو خيروك بين امتلاك سرعة الفهد أو دهاء الثعلب.",
"لو خيروك بين أن تحصل على درجة كاملة في كامل اختباراتك القادمة والسابقة أو أن تسافر إلى بلد تحبه.",
"لو خيروك بين العيش بجانب الجبال والحدائق والأشجار أو العيش بجانب البحر.",
"لو خيروك بين تحقيق 3 أمنيات (لا تتعلق بأشخاص) أو اختيار 3 أشخاص للعيش معهم طوال حياتك.",
"لو خيروك بين النوم في غابة مظلمة أو على ظهر سفينة في يوم عاصف.",
"لو خيروك بين المال أو الجمال.",
"لو خيروك بين المال أو الذكاء.",
"لو خيروك بين المال أو الصحة.",
"لو خيروك بين الجمال أو الذكاء.",
"لو خيروك بين الذكاء أو الصحة."
}
local kter = list[math.random(#list)]
return luatele.sendText(msg_chat_id,msg_id,'['..kter..']',"md")
end
end
if text == "علام" or text == "اعلام" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
KlamSpeed = {
"أمريكا",
"فرنسا",
"روسيا",
"بريطانيا",
"اوكرانيا",
"الجزائر",
"العراق",
"لبنان",
"سوريا",
"ايطاليا",
"المانيا",
"كوريا الشمالية",
"الإمارات",
"السعودية",
"فلسطين",
"قطر",
"البحرين",
"بولندا",
"باكستان",
"المغرب",
"ليبيا",
"السودان",
"تركيا",
"الصين",
"استراليا",
"اليابان",
"ايران",
"أذربيجان",
"تونس",
"النمسا",
"الصومال",
"مصر",
"اليونان",
"إثيوبيا",
"الكويت",
"رومانيا",
"اسبانيا",
"موريتانيا",
"فنزويلا",
"جزر القمر",
"الاردن",
"عمان",
"السويد",
"المجر",
"سويسرا"
};
name = KlamSpeed[math.random(#KlamSpeed)]
Redis:set(LiOn.."LiOn:Game:alam"..msg.chat_id,name)
name = string.gsub(name,"أمريكا","🇺🇸")
name = string.gsub(name,"فرنسا","🇫🇷")
name = string.gsub(name,"روسيا","🇷🇺")
name = string.gsub(name,"بريطانيا","🇬🇧")
name = string.gsub(name,"اوكرانيا","🇺🇦")
name = string.gsub(name,"الجزائر","🇩🇿")
name = string.gsub(name,"العراق","🇮??")
name = string.gsub(name,"لبنان","🇱🇧")
name = string.gsub(name,"سوريا","🇸🇾")
name = string.gsub(name,"ايطاليا","🇮🇹")
name = string.gsub(name,"المانيا","🇩🇪")
name = string.gsub(name,"كوريا الشمالية","🇰🇵")
name = string.gsub(name,"الإمارات","🇦🇪")
name = string.gsub(name,"السعودية","🇸🇦")
name = string.gsub(name,"فلسطين","🇵🇸")
name = string.gsub(name,"قطر","🇶🇦")
name = string.gsub(name,"البحرين","🇧🇭")
name = string.gsub(name,"بولندا","🇵🇱")
name = string.gsub(name,"باكستان","🇵🇰")
name = string.gsub(name,"المغرب","🇲🇦")
name = string.gsub(name,"ليبيا","🇱🇾")
name = string.gsub(name,"السودان","🇸🇩")
name = string.gsub(name,"تركيا","🇹🇷")
name = string.gsub(name,"الصين","🇨🇳")
name = string.gsub(name,"استراليا","🇦🇺")
name = string.gsub(name,"اليابان","🇯🇵")
name = string.gsub(name,"ايران","🇮🇷")
name = string.gsub(name,"أذربيجان","🇦🇿")
name = string.gsub(name,"تونس","🇹🇳")
name = string.gsub(name,"النمسا","🇦🇹")
name = string.gsub(name,"الصومال","🇸🇴")
name = string.gsub(name,"مصر","🇪🇬")
name = string.gsub(name,"اليونان","🇬🇷")
name = string.gsub(name,"إثيوبيا","🇪🇹")
name = string.gsub(name,"الكويت","🇰🇼")
name = string.gsub(name,"رومانيا","🇷🇴")
name = string.gsub(name,"اسبانيا","🇪🇸")
name = string.gsub(name,"موريتانيا","🇲🇷")
name = string.gsub(name,"فنزويلا","🇻🇪")
name = string.gsub(name,"جزر القمر","🇰🇲")
name = string.gsub(name,"الاردن","🇯🇴")
name = string.gsub(name,"عمان","🇴🇲")
name = string.gsub(name,"السويد","🇸🇪")
name = string.gsub(name,"المجر","🇭🇺")
name = string.gsub(name,"سويسرا","🇨🇭")
return luatele.sendText(msg_chat_id,msg_id,"❆︙اسرع واحد يكتب اسم العلم↫{ "..name.." }","md",true)  
end
end
if text == "منشن" and not Redis:get(LiOn.."mnshntezt"..msg.chat_id) then
local listmnshn = {
"@ل7 كله ننام سوا بفراش واحد ؟",
"@ل10 تشتريلي رانج ونفتر سوا ؟",
"@ل5 كله تحبني",
"@ل2 كله شلابس ؟",
"@ل2 كله اذا دخلت النار تجي وياي؟",
"@ل10 كله نصعد اتصال ٣ ساعات ؟",
"@ل7 كله اذا متت تجي بفاتحتي؟",
"@ل2 كله نتزوج",
"@ل6 كله همسة لطيفة",
"@ل10 كله ممكن علاقة جادة",
"@ل8 كله اسألني سؤال",
"@ل2 كله شلون تعرفت عليه؟",
"@ل8 كله نخلف جهال سوا ؟",
"@ل7 كله اذا جوعان تسويلي اكل",
"@ل4 كله شكد تحبني من 10",
"@ل8 كله غنيلي",
"@ل8 كله تعال اتنفسك صدكني مخنوك",
"@ل9 كله نطيني بوسه",
"@ل7 كله ننام سوا بفراش واحد ؟",
"@ل10 تشتريلي رانج ونفتر سوا ؟",
"@ل1 كله شلون تعرفت عليه؟",
"@ل9 كله اغنية لطيفة",
"@ل1 كله مشتاقلي؟",
"@ل3 كله كامش عليك فضيحه",
"@ل1 كله بشنو مستفاد منك ؟",
"@ل1 كله نرتبط بالسر",
"@ل2 كله بشنو مستفاد منك ؟",
"@ل3 كله يجي يوم ونتفارك؟",
"@ل3 كله اذا متت تجي بفاتحتي؟",
"@ل8 كله اهديلي اغنيه",
"@ل3 كله احجيلي سر عنك بهمسة ؟",
"@ل3 كله نسافر لباريس سوه",
"@ل4 كله حن واني احن",
"@ل10 كله كلشي بغيابك يختلف ؟",
"@ل3 تزوجني اخوك/اختك ؟",
"@ل10 كله سكرين لخاصك ؟",
"@ل6 كله هم تحس بيه؟"
}
namemnshn = listmnshn[math.random(#listmnshn)]
return luatele.sendText(msg_chat_id,msg_id,"❆︙"..namemnshn,"md",true)  
end
if text == "عواصم" or text == "عاصمه" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
KlamSpeed = {
"الولايات المتحدة",
"روسيا",
"الصين",
"المانيا",
"إيطاليا",
"فرنسا",
"بريطانيا",
"اليابان",
"كوريا الجنوبية",
"إندونيسيا",
"المانيا",
"مصر",
"إيران",
"كولومبيا",
"تايلاند",
"بنغلادش",
"السعودية",
"العراق",
"فيتنام",
"إسبانيا",
"كوريا الشمالية",
"أفغانستان",
"إثيوبيا",
"أوكرانيا",
"تايوان",
"أوزبكستان",
"أذربيجان",
"رومانيا",
"فنزويلا",
"السودان",
"المغرب",
"بولندا",
"لبنان",
"قطر",
"الاردن",
"البحرين",
"النمسا",
"الجزائر",
"اليمن",
"ماليزيا",
"ليبيا",
"التشيك",
"بلغاريا",
"أرمينا",
"السنغال",
"السويد",
"هولندا",
"اليونان",
"موريتانيا",
"كازاخستان",
"كرواتيا",
"الإمارات",
"أستراليا",
"الهند",
"سويسرا",
"فلسطين",
"تركيا"
};
name = KlamSpeed[math.random(#KlamSpeed)]
luatele.sendText(msg_chat_id,msg_id,"❆︙اسرع واحد يكتب اسم عاصمه البلد↫{ "..name.." }","md",true)  
name = string.gsub(name,"الولايات المتحدة","واشنطن")
name = string.gsub(name,"روسيا","موسكو")
name = string.gsub(name,"الصين","بكين")
name = string.gsub(name,"المانيا","برلين")
name = string.gsub(name,"إيطاليا","روما")
name = string.gsub(name,"فرنسا","باريس")
name = string.gsub(name,"بريطانيا","لندن")
name = string.gsub(name,"اليابان","طوكيو")
name = string.gsub(name,"كوريا الجنوبية","سيؤول")
name = string.gsub(name,"إندونيسيا","جاكارتا")
name = string.gsub(name,"المانيا","برلين")
name = string.gsub(name,"مصر","القاهرة")
name = string.gsub(name,"إيران","طهران")
name = string.gsub(name,"كولومبيا","بوغوتا")
name = string.gsub(name,"تايلاند","بانكوك")
name = string.gsub(name,"بنغلادش","دكا")
name = string.gsub(name,"السعودية","الرياض")
name = string.gsub(name,"العراق","بغداد")
name = string.gsub(name,"فيتنام","هانوي")
name = string.gsub(name,"إسبانيا","مدريد")
name = string.gsub(name,"كوريا الشمالية","بيونغ يانغ")
name = string.gsub(name,"أفغانستان","كابول")
name = string.gsub(name,"إثيوبيا","اديس ابابا")
name = string.gsub(name,"أوكرانيا","كييف")
name = string.gsub(name,"تايوان","تايبيه")
name = string.gsub(name,"أوزبكستان","طشقند")
name = string.gsub(name,"أذربيجان","باكو")
name = string.gsub(name,"رومانيا","بوخاريست")
name = string.gsub(name,"فنزويلا","كاراكاس")
name = string.gsub(name,"السودان","الخرطوم")
name = string.gsub(name,"المغرب","الرباط")
name = string.gsub(name,"بولندا","وارسو")
name = string.gsub(name,"لبنان","بيروت")
name = string.gsub(name,"قطر","الدوحة")
name = string.gsub(name,"الاردن","عمان")
name = string.gsub(name,"البحرين","المنامة")
name = string.gsub(name,"النمسا","فيينا")
name = string.gsub(name,"الجزائر","الجزائر")
name = string.gsub(name,"اليمن","صنعاء")
name = string.gsub(name,"ماليزيا","كوالالمبور")
name = string.gsub(name,"ليبيا","طرابلس")
name = string.gsub(name,"التشيك","براغ")
name = string.gsub(name,"بلغاريا","صوفيا")
name = string.gsub(name,"أرمينا","يريفان")
name = string.gsub(name,"السنغال","داكار")
name = string.gsub(name,"السويد","ستوكهولم")
name = string.gsub(name,"هولندا","امستردام")
name = string.gsub(name,"اليونان","اثينا")
name = string.gsub(name,"موريتانيا","نواكشوط")
name = string.gsub(name,"كازاخستان","استاتا")
name = string.gsub(name,"كرواتيا","زغرب")
name = string.gsub(name,"الإمارات","ابو ظبي")
name = string.gsub(name,"أستراليا","كانبرا")
name = string.gsub(name,"الهند","نيودلهي")
name = string.gsub(name,"سويسرا","برن")
name = string.gsub(name,"فلسطين","القدس")
name = string.gsub(name,"تركيا","انقره")
Redis:set(LiOn.."LiOn:Game:ausm"..msg.chat_id,name)
return false
end
end
if Redis:get(LiOn.."LiOn:Game:klmaa"..msg.chat_id) then
if text == Redis:get(LiOn.."LiOn:Game:klmaa"..msg.chat_id) then
Redis:del(LiOn.."LiOn:Game:klmaa"..msg.chat_id)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙لقد فزت في اللعبه \n❆︙اللعب مره اخره وارسل - كلمات","md",true)  
end
end 

if text == "كلمات" or text == "كلمه" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
KlamSpeed = {
"مقاتل",

"سائق",

"غرفة",

"بطانية",

"طامس",

"شجاع",

"هاتف",

"تلكرام",

"مسافر",

"نعسان",

"بطيخ",

"عصبي",

"هادئ",

"عصير",

"دولمه",

"قدح",

"صباغ",

"كارتون",

"مدرسة",

"منزل",

"عاشق",

"فطور",

"مجموعة",

"اصدقاء",

"طلاب",

"فتيات",

"جميل",

"ذكي",

"فنان",

"نائم",

"دراجة",

"طائرة",

"صاروخ",

"الارض",

"الحلم",

"نبات",

"حيوان",

"انسان",

"دولة",

"حزين",

"سعيد",

"موظف",

"شركة",

"اتصال",

"حديقة",

"شارع",

"مستشفى",

"سيارة"

};
name = KlamSpeed[math.random(#KlamSpeed)]
luatele.sendText(msg_chat_id,msg_id,"❆︙اسرع واحد يكتب الكلمه↫{ "..name.." }","md",true)  
Redis:set(LiOn.."LiOn:Game:klmaa"..msg.chat_id,name)
return false
end
end
if text == "اضف سؤال مقالات" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:set(LiOn.."makal:bots:set"..msg.sender_id.user_id..":"..msg.chat_id,true)
return luatele.sendText(msg_chat_id,msg_id,"ارسل السؤال الان ")
end
if text == "مسح سؤال مقالات" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:set(LiOn.."makal:bots:del"..msg.sender_id.user_id..":"..msg.chat_id,true)
return luatele.sendText(msg_chat_id,msg_id,"ارسل الي السؤال")
end
if text == "مسح المقالات" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:del(LiOn.."makal:bots")
return luatele.sendText(msg_chat_id,msg_id,"تم مسح المقالات")
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."makal:bots:del"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
Redis:set(LiOn.."makal:bots:del"..msg.sender_id.user_id..":"..msg.chat_id,"true1uu")
Redis:srem(LiOn.."makal:bots", text)
return luatele.sendText(msg_chat_id,msg_id, '\n❆︙تم مسح السؤال بنجاح')
end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."makal:bots:set"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
Redis:set(LiOn.."makal:bots:set"..msg.sender_id.user_id..":"..msg.chat_id,"true1uu")
Redis:sadd(LiOn.."makal:bots", text)
return luatele.sendText(msg_chat_id,msg_id, '\nتم حفظ السؤال بنجاح')
end
end
if text == 'مقالات' then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
local list = {
"الممكن/والمستطاع*يقيم في/أحلام العاجز",

"الكلمة اللينة*تصريح/بالدخول*إلى القلوب",

" حاسبوا/أنفسكم*أولاً ثم/غيركم",

"زمان/أطفالكم*غير/زمانكم",

" من السهل*أن تصبح/عاقل بعد فوات*الأوان",

" فانظر*إليها بقلبك/وليس*بعينيك",

"خاف/الله*أينما/كنت",

"أحسن/لقول ما*نطق بالعدل/والحق",
 
"أن تحافظ على/رجولتك خير من*حفاظك على أموالك",

"أكثروا*الرزق/بالصدقة",

"غالبا*ماتصبح/البيضة/سلاحا",

"كن*عادلاً/قبل أن*تكون*كريماً",

"كلما أحب/الشخص*نفسه كلما*كره الناس",

"من يسخر/من المرض*هو من لا يشعر/بالألم.",

"يظن*الرجل أنه*حكيم/إذا قلت*حكمته.",

 "اللسان/ليس سلاح*لكنه/يقتل*القلب",

"أسد مفترس*أمام عينيك/خير من*ثعلب خائن وراء/ظهرك",

"لسان*لعاقل وراء قلبه*وقلب الأحمق/وراء لسانه",

"أحقر الناس*من لا يقدر*على/كتمان السر",

" جميع/لصفات*الحميدة*تتلخص/في العدل",

" أفضل/عناصر*العدل هي/محاسبة*النفس",

"لم يعرف*الناس العدل/إلا بوجود*الظلم",

"العدل*ميزان/الملك",

"سيف*العدالة*لا ينام/ولا*يسهو",

"لا تلجأ*إلى ظالم*لكي ينصرك/على ظالم، فتكون*فريسة/هما",

"تحدثوا مع*الناس/على حسب*عقولهم",

" لو أنصت*الجاهل/ما اختلف*الناس",

"إذا تم*العقل قل/الكلام",

" لا تعد/ما لا تستطيع*الوفاء*به",

" القليل من*الطعام*يجلب/النوم*المريح",

 
"كرم المفسد*رشوة/لجلب*المنفعة",

"يدوم*الحال/بالرضا*والصبر",

" تتفاقم*المحن/عندما تكثر*الفتن",

"ربما*انفرج/الامر إذا/ضاق",

"سامح*الناس/قبل أن*تسامح/نفسك",

"شر الناس*من*خاف/الناس/من شره",

"قلب*العاقل/صندوق*أسراره",

"ضربة*اللسان أسوأ/من طعنة*السيف",

"من/سار على*الدرب/وصل",

"الدهر*يومان*يوم لك/ويوم*عليك",
" لا تدع/عاطفتك*تخسرك/نفسك",

"كن*قويا/لأجل/نفسك",

"ما يستهلك*عقلك/يسيطر على/حياتك"
}
if #list ~= 0 then
quschen = list[math.random(#list)]
quschen1 = string.gsub(quschen,"-"," ")
quschen1 = string.gsub(quschen1,"*"," ")
quschen1 = string.gsub(quschen1,"•"," ")
quschen1 = string.gsub(quschen1,"_"," ")
quschen1 = string.gsub(quschen1,","," ")
quschen1 = string.gsub(quschen1,"/"," ")
print(quschen1)
luatele.sendText(msg_chat_id,msg_id,'['..quschen..']',"md")
Redis:set(LiOn.."makal:bots:qus"..msg.chat_id,quschen1)
Redis:setex(LiOn.."mkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id, 60, true) 
end
end
end
if text == ""..(Redis:get(LiOn.."makal:bots:qus"..msg.chat_id) or '').."" then
local timemkall = Redis:ttl(LiOn.."mkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id) 
local timemkal = (60 - timemkall)
if tonumber(timemkal) == 1 then
luatele.sendText(msg_chat_id,msg_id,'  استمر ي وحش ! \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 2 then
luatele.sendText(msg_chat_id,msg_id,'  اكيد محد ينافسك ! \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 3 then
luatele.sendText(msg_chat_id,msg_id,'  اتوقع محد ينافسك ! \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 4 then
luatele.sendText(msg_chat_id,msg_id,'  مركب تيربو !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 5 then
luatele.sendText(msg_chat_id,msg_id, '  صح عليك !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 6 then
luatele.sendText(msg_chat_id,msg_id,'   صحيح !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 7 then
luatele.sendText(msg_chat_id,msg_id,'   شد حيلك ! \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 8 then
luatele.sendText(msg_chat_id,msg_id, '  عندك اسرع ! \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 9 then
luatele.sendText(msg_chat_id,msg_id,'   يجي ! \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 10 then
luatele.sendText(msg_chat_id,msg_id,'   كفو ! \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 11 then
luatele.sendText(msg_chat_id,msg_id,'   ماش !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 12 then
luatele.sendText(msg_chat_id,msg_id,'   مستوى مستوى !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 13 then
luatele.sendText(msg_chat_id,msg_id,'   تدرب ! \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 14 then
luatele.sendText(msg_chat_id,msg_id,'   مدري وش اقول ! \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 15 then
luatele.sendText(msg_chat_id,msg_id,'   بطه ! \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 16 then
luatele.sendText(msg_chat_id,msg_id,'   ي بطوط !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 17 then
luatele.sendText(msg_chat_id,msg_id,'   مافي اسرع  !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 18 then
luatele.sendText(msg_chat_id,msg_id,'   بكير  !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 19 then
luatele.sendText(msg_chat_id,msg_id,'   وش هذا !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 20 then
luatele.sendText(msg_chat_id,msg_id,'   الله يعينك !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 21 then
luatele.sendText(msg_chat_id,msg_id,'   كيبوردك يعلق ههههه  !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 22 then
luatele.sendText(msg_chat_id,msg_id,'   يبي لك تدريب  !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 23 then
luatele.sendText(msg_chat_id,msg_id,'   انت اخر واحد رسلت وش ذا !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 24 then
luatele.sendText(msg_chat_id,msg_id,'   ههههه بطى !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 25 then
luatele.sendText(msg_chat_id,msg_id,'   ابك وش العلم !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 26 then
luatele.sendText(msg_chat_id,msg_id,'  اخر مرا تلعب !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 27 then
luatele.sendText(msg_chat_id,msg_id,'   ي بطي !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 28 then
luatele.sendText(msg_chat_id,msg_id,'   ليه انت بطى يخوي !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 29 then
luatele.sendText(msg_chat_id,msg_id,'   تدبر زين بس  !  \n عدد الثواني {'..timemkal..'}')
elseif tonumber(timemkal) == 30 then
luatele.sendText(msg_chat_id,msg_id,'  مستوى بس !  \n عدد الثواني {'..timemkal..'}')
end
Redis:del(LiOn.."makal:bots:qus"..msg.sender_id.user_id..":"..msg.chat_id)
Redis:del(LiOn.."mkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id) 
end
if text =="صراحه" then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
local list = {
"صراحه  |  متى آخر مرة قمت بعمل مُشكلة كبيرة وتسببت في خسائر؟",
"صراحه  |  ‌‏إذا أحد قالك كلام سيء بالغالب وش تكون ردة فعلك؟",
"صراحه  | هل جرحت شخص تحبه من قبل ",
",صراحه  |  ما هو الشخص الذي تحلم به كل ليلة",
"صراحه  |  أحيانا احس ان الناس ، كمل؟" ,
"صراحه  |  أنا شخص ضعيف عندما",
"‏صراحه  |  هل خجلت من نفسك من قبل؟",
"صراحه  |  تقيم حظك ؟ من عشره؟",
"صراحه  |  متى اخر مره بكيت؟",
"صراحه  |  هل تعرضت إلى موقف مُحرج جعلك تكره صاحبهُ",
"صراحه  |  ما هو عمرك الحقيقي؟",
"صراحه  |  ما هو اسوأ خبر سمعته بحياتك؟",
"صراحه  |  هل قمت بالبكاء أمام من تُحب؟",
"صراحه  |  غيرتك هاديه ولا تسوي مشاكل؟",
"صراحه  |  هل تعتقد ان حظك سيئ؟",
"صراحه  |  كيفية الكشف عن من يكمن عليك؟",
"صراحه  |  ‏هل تحب إظهار حبك وتعلقك بالشخص أم ترى ذلك ضعف؟",
"صراحه  |  وش ناوي تسوي اليوم؟",
"صراحه  |  شخص معك بالحلوه والمُره؟",
"صراحه  |  هل تُتقن عملك أم تشعر بالملل؟",
"صراحه  |  شـخــص تتمنــي الإنتقــام منـــه؟",
"صراحه  |  صفة تحبها في نفسك؟",
"‏صراحه  | هل تحب عائلتك ام تكرههم؟",
"صراحه  |  ‏هل تحب إظهار حبك وتعلقك بالشخص أم ترى ذلك ضعف؟",
"‏!صراحه  |  ما اكثر شي مدمن عليه",
"صراحه  |  الكُره العظيم دايم يجي بعد حُب قوي تتفق؟",
"صراحه  |  ما هي أمنياتك المُستقبلية؟‏",
"صراحه  |  ‏تجامل أحد على راحتك؟",
"صراحه  |  ‏الفقر فقر العقول ليس الجيوب  ، تتفق؟",
"صراحه  |  ما هو ا الحلم  الذي لم تستطيع ان تحققه؟",
"صراحه  |  اي الدول تتمنى ان تزورها؟",
"صراحه  |  كلمة تود سماعها كل يوم؟",
"صراحه  |  تصلي صلواتك الخمس كلها؟",
"صراحه  | هل حياتك سعيدة أم حزينة؟",
"صراحه  |  هل قمت بانتحال أحد الشخصيات لتكذب على من حولك؟",
"متى كانت آخر مرة اعتذرت فيها؟ لماذا؟",
"صراحه  | هل توجد خرافة أو مقولة غريبة تؤمن بها؟ وما هي؟",
"صراحه  | ما أغرب شائعة سمعتها عن نفسك؟",
",‏صراحه  | ما هو أغرب سبب لانفصالك عن أحد ارتبطت به من قبل؟",
"‏صراحه  | هل قمت بادعاء المرض لعدم الذهب لحفلة أو موعد عمل من قبل؟",
"‏صراحه  | إذا كان عليك العودة إلى حبيبك السابق لمدة يوم واحد، هل تفعل ذلك أم لا؟",
"‏صراحه  | من هو أقرب صديق لديك؟",
"‏صراحه  | ما هو آخر شئ قمت بشرائه وندمت عليه؟",
"‏صراحه  | هل قمت بالارتباط بشخص يكبرك في السن بفارق كبير من قبل، وما سبب انفصالكما؟",
"صراحه  | من هو الشخص الذي قد تقدم له حياتك دون تفكير؟!",
"صراحه  | هل تتذكر آخر مرة قمت بالاعتذار وأنت غير مقتنع أنك على خطأ؟",
"‏صراحه  | في هذه المرة كذب لإنقاذ الموقف.. تتذكر هذا الموقف؟",
"صراحه  | هل أنت عقلاني/ رومانسي؟",
"‏صراحه  | في هذا الوقت شعرت بالندم على تفويت هذه الفرصة.. فما هى؟",
"صراحه  | أردت أن أتزوجها ولكن وجدت انها..؟",
"صراحه  | في كلمة واحدة الحب هو..؟",
"صراحه  | جملة لا تنساها من شخص عزيز؟",
"صراحه  | صف نفسك في كلمة واحدة أنا شخص حكيم/ متهور؟",
"‏صراحه  | لم أتوقع أن أنجذب إلى هذا الشخص.. فمن هو/ هي؟"
}
local kter = list[math.random(#list)]
return luatele.sendText(msg_chat_id,msg_id,'['..kter..']',"md")
end
end


if text == "التفاعل" and not Redis:get(LiOn..'lock_altfael'..msg.chat_id) then
local Namdaysmsg = Redis:get(LiOn.."Num:MssEgeS:Days"..msg.chat_id..os.date("%d")) or 0
local Namdayspin =Redis:get(LiOn.."Num:PinMsg:Days"..msg.chat_id..os.date("%d")) or 0
local Namdaysjoine =Redis:get(LiOn.."Num:joinlink:Days"..msg.chat_id..os.date("%d")) or 0
local NamdaysaddMember =Redis:get(LiOn.."Num:AddMempber:Days"..msg.chat_id..os.date("%d")) or 0
local msg_id = msg.id/2097152/0.5
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙تفاعل المجموعه اليومي : \n— — — — — — — — —\n'..
'\n❆︙رسائل المجموعه : '..Namdaysmsg..
'\n❆︙الرسائل المثبته : '..Namdayspin..
'\n❆‍︙اضافه الاعضاء : '..NamdaysaddMember..
'\n❆︙دخول الاعضاء : '..Namdaysjoine..
'\n❆︙نسبه التفاعل : '..TotalNsba(Namdaysmsg).."%"..
'*',"md",true) 
end

if text == "ارفعني مالك" then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id)
if (StatusMember.status.Merotele == "chatMemberStatusCreator") then
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙انت مالك المجموعه تم ترقيتك* ',"md",true)  
elseif (StatusMember.status.Merotele == "chatMemberStatusAdministrator") then
if StatusMember.status.can_change_info == true and
StatusMember.status.can_delete_messages == true and
StatusMember.status.can_invite_users == true and
StatusMember.status.can_pin_messages == true and
StatusMember.status.can_promote_members == true and
StatusMember.status.can_restrict_members == true then
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,msg.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تم ترقيتك مالك* ',"md",true)  
else
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙انت لا تمتلك الصلاحيات الكامله* ',"md",true)  
end
else
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙انت عضو في المجموعه لا يمكنني رفعك* ',"md",true)  
end
end

if text then
local GetMsg = Redis:incr(LiOn..'LiOn:Num:Message:User'..msg.chat_id..':'..msg.sender_id.user_id) 
Redis:hset(LiOn..':GroupUserCountMsg:'..msg.chat_id,msg.sender_id.user_id,GetMsg)
local UserInfo = luatele.getUser(msg.sender_id.user_id) 
if UserInfo.first_name then
NameLUser = UserInfo.first_name or ''
else
NameLUser = UserInfo.first_name or ''
end
NameLUser = NameLUser
NameLUser = NameLUser:gsub("]","")
NameLUser = NameLUser:gsub("[[]","")
Redis:hset(LiOn..':GroupNameUser:'..msg.chat_id,msg.sender_id.user_id,NameLUser)
end


if text == "ترند" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
GroupAllRtba = Redis:hgetall(LiOn..':GroupUserCountMsg:'..msg.chat_id)
GetAllNames  = Redis:hgetall(LiOn..':GroupNameUser:'..msg.chat_id)
GroupAllRtbaL = {}
for k,v in pairs(GroupAllRtba) do table.insert(GroupAllRtbaL,{v,k}) end
Count,Kount,i = 8 , 0 , 1
for _ in pairs(GroupAllRtbaL) do Kount = Kount + 1 end
table.sort(GroupAllRtbaL, function(a, b) return tonumber(a[1]) > tonumber(b[1]) end)
if Count >= Kount then Count = Kount end
Text = " ترند اليوم ويانا : \n\n"
for k,v in ipairs(GroupAllRtbaL) do
if i <= Count then  Text = Text..i.."ـ ["..(GetAllNames[v[2]] or "خطأ بالأسـم").."](tg://user?id="..v[2]..") ـ~> {*"..v[1].."*}  \n" end ; i=i+1
end
return luatele.sendText(msg.chat_id,msg.id,Text,"md")
end

local Bot_Name = (Redis:get(LiOn.."LiOn:Name:Bot") or "اسد")

if not Redis:get(LiOn.."LiOn:Status:repleall") then
local ss97 = {
"ها حياتي 😍❤️","عيونه 👀 وخشمه 👃🏻واذانه??🏻",
"باقي ويتمدد 😎","ها حبي 😍","ها عمري 🌹","اجيت اجيت كافي لتصيح ✋🤨",
"هياتني اجيت 🌚❤️","نعم حبي 😎","هوه غير يسكت عاد ها شتريد 😷",
"احجي بسرعه شتريد 😤","ها يا كلبي ❤️","هم صاحو عليه راح ابدل اسمي من وراكم 😡",
"لك فداك ["..Bot_Name.."] حبيبي انت اموووح 💋","دا اشرب جاي تعال غير وكت 😌","كول حبيبي أمرني 😍",
"احجي فضني شرايد ولا اصير ضريف ودكلي جرايد لو مجلات تره بايخه 😏",
"اشتعلو اهل ["..Bot_Name.."] شتريد 😠","بووووووووو 👻 ها ها فزيت شفتك شفتك لا تحلف 😂",
"طالع مموجود 🤨","هااا شنوو اكو حاته بالكروب وصحت عليه  😍💕","اانت مو قبل يومين غلطت عليه؟😢",
"تروح فدوه لأسمي الوصخ شتريد؟ مولبارحه رزلتك يوميه ارزلك شبيك😑😹","ياعيون ["..Bot_Name.."] أمرني 😍",
"لك دبدل ملابسي اطلع برااااا 😵😡 ناس متستحي","سويت هواي شغلات سخيفه بحياتي بس عمري مصحت على واحد وكلتله انجب 😑",
"مشغول ويا ضلعتي  ☺️","مازا تريد منه 😌","تروح فدوه لأسمي الوصخ شتريد ؟ مولبارحه رزلتك يوميه ارزلك شبيك😑😹"
}
local ns = {
"ﮬ̲̌ﮧڵـٱوٱت̲ ﻋـمـرّي، 😋💕",
"هـلُِوآت  ڪلُِبَي نورتنھَہّ🌹😊",
"هـلُِآ تآجٍ رآسي 🧡🙋",
"ڪآفُُي قٌبَلُِ شُوويھَہّ سلُِمت😌",
"هـلُِآ بَريحٍھَہّ هـلُِي 🤗",
"ھَہّلْـٱ ڪْيڪْ ﻧـۅرت / يِٰ 💖",
"هـلُِآووآت يٱ ﻗ̮ـ̃مر  ﻧـۅرت/ ي 🌔🥀",
"هـلُِآ وغلُِآ فُُيڪ يروحٍي 💕🌝",
"هۂَلٱ بيۧك يۧعٱفيۧتيۧ😍",
"ھَہّلْـــــــ🌹ــــــۅٱت 😍",
"ڪولُِ آلُِهـلُِآ نورتنھَہّ 🥰",
"هۂَلٱ وٱللهۂَ حٍيآتي😉 ‌",
}

local sss = {
"ت̲ـمـٱم  بِﺷ̲وقّـّـت̲ڪ يرّوحي،♥️",
"تمۘٱمۘ وٱنۨــہت يۧكيۧوت.🧡:)",
"ﺗ̲مٱم ٱﻧـﺗ̲ھَہّ ﺷ͠لْـۅﻧـڪْ 😁❤️",
"ﻋڵـى حطًت̲ ٱيدّڪ مـٱڪو ﺷ̲ي 🤷🏼‍♂️",
"بخير̀ د̀آ̀م̀ك بخير̀ يكلبي،😉",
"ٱني ضَّٱيچ ٱﻟ̣̣يوم شوف̲ ٱﻟ̣̣بّـقيه«😒",
}
local dr = {
"ٱڵـڵـﮬ̲̌ﮧ ويٱڪ يٱﻋﺳ̲ڵ 🍯💕",
"هۂَٱك ربع ٱشتريۧ بيۧۂَهۂَ جۚبسۜ 🌝",
"بعد وكت خۡليۧك مۘنۨــہورنۨــہهۂَ،🌸)",
"مـﻧ̲ـو زَﻋڵـڪ يٱحڵـو 😥",
"سۜلمۘنۨــہهۂَ على ٱلٱهۂَل 🤪",
"تع̀́آ̀ل ح̀بي ع̀́ن̀د̀ي ش̀́غله̀ ويآ̀ك،!🙂",
"• لتروحۡ ٱلمۘٱلك حۡيۧوزع هۂَدٱيۧٱ😍",
"بعد وكت خۡليۧنۨـہهۂَ مۘتونۨہسۜيۧنۨ⁞⁽🌞",
"ويۧنۨــہ حۡتروحۡ تطمۘسۜ.😐",
}
local nnn = {
"اسمي ["..Bot_Name.."] 😌",
"هۂَٱ شتريۧد تصيۧحۡ بوت،!🤔",
"لتصيۧحۡ بوت ترٱ عنۨــہديۧ ٱسۜمۘ،😏",
"مـٱڪو ﻏ̣̐يرّڪ بِوت̲ يٱبِوت̲😹،🖤)",
}
local lovm = {
"وﻟ̣̣يي ٱڪْرهڪْ،😏)",
"مۘنۨــہو لـ كلك ٱحۡبك؟ 😕،",
"دي ۅجّـھَہّ ٱلْـﺑۅمھَہّ 👊",
"آ̀ع̀́ش̀́كك كبد̀ ع̀́م̀ر̀ي م̀ح̀ح̀ 🌝💋",
"ٱيي ٱפبّـڪْ يعّشقي ٱﻟ̣̣ٱوﻟ̣̣ي 😍❤️",
"ۅٱﻧـي مٱﺣّ͠ـﺑڪْ/جّ 😌🖖",
"ٱمـــوت ف̲يڪْ يعّمري ☺️❤️",
"ٱذّٱ ڪت̲ڵـڪ ٱحبِڪ رّح ت̲ﺳ̲ڪت̲😕،🌸)",
"ٱويڵـي قّـڵـبِي ڵـٱيت̲حـمـڵ 🥺💔،",
}
local sh = {
"آهـلآ عٍزٍيِزٍيِ المـطُۈرٍ 😽❤️",
"هـلوآت, نۈرٍت مـطُۈرٍيَ 💖",
"هـلآ سٍيِديِ المـطُۈرٍ 😊 ",
"هـلُِآ تـآجٍ رٍآسـي آلُِمطُـوُرٍ 😎",
"هـلُِآ عٍآفُيتـي آلُِمطُـوُرٍ 🥰",
"هـلآ بتآجُ رآسٍ "..Bot_Name.." 😘❤️",
}

if text== "انجب" or text== "نجب" or text=="انجبي" or text=="نجبي" then
if msg.ControllerBot then  
return luatele.sendText(msg.chat_id,msg.id,"ﺣّ͠ـٱڞـر مۅ ﺗ̲دلْـلْ ﺣّ͠ـڞـرھَہّ ٱلْـمطۅر!🥀 ")
elseif msg.TheBasicsQ then 
return luatele.sendText(msg.chat_id,msg.id,"على رٱسۜيۧ حۡبيۧبيۧ ٱنۨــہتهۂَ ٱلمۘٱلك تٱجۚ ּ رٱسۜيۧ،!😌💖")
elseif msg.Originators then 
return luatele.sendText(msg.chat_id,msg.id,"على رٱسۜيۧ تدلل ٱنۨــہتهۂَ ٱلمۘنۨــہشئ تٱجۚ ּ رٱسۜيۧ،🥰❤️")
elseif msg.Managers then 
return luatele.sendText(msg.chat_id,msg.id,"لُِخـآطُرڪ رحٍ آسڪت لُِآن مدِير وعٍلُِى رآسي 😐")
elseif msg.Addictive then 
return luatele.sendText(msg.chat_id,msg.id,"فُُووڪ ممصعٍدِڪ آدِمن ؟ آنت آنجٍبَ 😕")
else 
return luatele.sendText(msg.chat_id,msg.id,"آنجٍبَ آنت لُِتندِفُُر 😏")
end 
end
if Redis:get(LiOn..'replayallbot'..msg.chat_id) then
if msg.ControllerBot and text=="هلو" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
luatele.sendText(msg.chat_id,msg.id,sh[math.random(#sh)])
end
if not msg.ControllerBot and text=="هلو" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then 
return luatele.sendText(msg.chat_id,msg.id,ns[math.random(#ns)])
end
if not msg.ControllerBot and (text== "شلونكم" or text== "شلونك" or text== "شونك" or text== "شلونج" or text== "شلونكم") and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,sss[math.random(#sss)])
end
if not msg.ControllerBot and (text==" باي" or text == "باي") and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,dr[math.random(#dr)])
end
if msg.ControllerBot and text== "احبك" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then 
return luatele.sendText(msg.chat_id,msg.id,"اموت عليك حياتي  🥰❤️")
end
if msg.ControllerBot and (text== "تحبني" or text=="حبك") and Redis:get(LiOn..'replayallbot'..msg.chat_id) then 
return luatele.sendText(msg.chat_id,msg.id,"اموت عليك حياتي  😍❤️")
end
if not msg.ControllerBot and (text== "احبك" or text=="حبك") and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,lovm[math.random(#lovm)])
end
if not msg.ControllerBot and text== "تحبني" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,lovm[math.random(#lovm)])
end
if text=="اطربنه" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then 
return luatele.sendText(msg.chat_id,msg.id,song[math.random(#song)])
end
if text== "تف" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"عٍيبَ عٍموو آثآدِبَ شُويھَہّ 😕")
end
if text== "صاكه"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"اووويلي يابه 😍❤️ دزلي صورتهه 🐸🥰")
end
if text== "وينك"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"دور بكلبك وتلكاني 😍😍❤️")
end
if text== "منورين"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"مۘنۨــہ نۨــہورڪ ﻋـمـرّي ❤️🌺")
end
if text== "هاي"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"هايات عمري 😍🍷")
end
if text== "🙊"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"فديت الخجول 🥰 😍")
end
if text== "😢"  or text== "😭😭"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"لِٰـِۢتِٰـِۢبِٰـِۢڪِٰـِۢيِٰ/نِٰ حِٰـِۢيِٰـِۢآتِٰـِۢيِٰ✨😢💜")
end
if text== "??"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"لِٰـِۢتِٰـِۢبِٰـِۢڪِٰـِۢيِٰ/نِٰ حِٰـِۢيِٰـِۢآتِٰـِۢيِٰ✨😢💜")
end
if text== "منور"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"نِْـِْـــِْ([??])ِْــــًِـًًْـــِْـِْـِْـورِْكِْ")
end
if text== "😒" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"شِٰـِۢﯛ̲ فِٰ͒ـِۢيِٰـِۢڪِٰـِۢ عِٰـِۢمِٰـِۢريِٰ🧡:)")
end
if text== "مح"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"مممحح شهلعسل🙈❤")
end
if text== "شكرا" or text== "ثكرا" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return  luatele.sendText(msg.chat_id,msg.id,"آلُِعٍفُُوو ڪلُِبَي 🥺💛")
end
if text== "انته وين"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"بالــبــ🏠ــيــت")
end
if text== "😍"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id," يَمـه̷̐ إآلُحــ❤ــب يَمـه̷̐ ❤️😍")
end
if text== "اكرهك"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ديۧلهۂَ شلونۨــہ ٱطيۧق خۡلقتك ٱنۨــہيۧ😾😏")
end
if text== "اريد اكبل" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"خخ اني هم اريد اكبل قابل ربي وحد😹😏️")
end
if text== "ضوجه"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"شُي آڪيدِ ڞـۅجّـھَہّ لُِآن محٍدِ يطُمس ويآڪ😅")
end
if text== "صاك"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"زاحفه 🥰 منو هذا دزيلي صورهه")
end
if text== "اجيت" or text=="اني اجيت" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return  luatele.sendText(msg.chat_id,msg.id,"ڪـ﴿😍﴾ــوولُِ آلُِهـــــــلُِآ ❤️")
end
if text== "حفلش"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"افلش راسك 🤓")
end
if text== "نايمين" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"آني سهـرآن آحٍرسڪم 😐")
end
if text== "اكو احد" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"يي عيني انـي موجـود🌝")
end
if text== "شكو" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ﺳ̲ڵـٱـمـت̲ڪ يٱقّـڵـبِي،❤️")
end
if text== "انت منو" or text=="منو انت" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙انآ بوت بوت أسمي ["..Bot_Name.."] ✓ \n❆︙آختصـآصـي حمـآيهہ‌‏ آلمـجمـوعآت\n\n❆︙مـن آلسـبآم وآلتوجيهہ‌‏ وآلتگرآر وآلخ...\n\n❆︙ضيفني لكروبك وارفعني مشرف وارسل تفعيل داخل الكروب")
end
if text== "كلخرا" or text== "اكل خره" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"لُِتغلُِطُ لُِڪ/جٍ وجٍھَہّ آلُِصخـلُِ 😸")
end
if text== "😔"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ليش الحلو ضايج ❤️😐")
end
if text== "☹️"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"لضوج حبيبي ??❤️")
end
if text== "جوعان"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"تعال اكلني 😐😂")
end
if text== "خاصك"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"سهلـة الـﻐـرك بالمٲي ﺑﯿـدك تطلعـة بس الـغـﺭك بالـخاﺹ ڪلي شـيطلعـة 😹😔💜")
end
if text== "لتحجي"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"وانت شعليك حاجي من حلگگ😏")
end
if text== "معليك" or text== "شعليك" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"عليه ونص 😡")
end
if text== "شدسون" or text== "شداتسوون" or text== "شدتسون" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return  luatele.sendText(msg.chat_id,msg.id,"نطبخ 😐")
end
if text and text:match(Bot_Name.." شلونك$") and Redis:get(LiOn..'replayallbot'..msg.chat_id) then 
return luatele.sendText(msg.chat_id,msg.id,"تِٰـِۢمِٰـِۢآمِٰ بِٰـِۢشِٰـِۢﯛ̲فت آلِٰـِۢطِٰـِۢبِٰـِۢيِٰـِۢنِٰ😊❤️-")
end
if text== "يومه فدوه"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"فدؤه الج حياتي 😍😙")
end
if text== "افلش"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"حظر عام من 200 بوت 😉")
end
if text== "احبج"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"يخي احترم شعوري 😢")
end
if text== "شكو ماكو"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"غيرڪ/جٍ  بَآلُِڪلُِبَ مآڪو يبَعٍدِ ڪلُِبَي😍❤️️")
end
if text== "😋"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"طبب لسانك جوه عيب 😌")
end
if text== "😡"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ابرد  🚒"  )
end
if text== "مرحبا"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"مۘرٱحۡب نۨـہورت عمۘريۧ🥀")
end
if text== "سلام" or text== "السلام عليكم" or text== "سلام عليكم" or text=="سلامن عليكم" or text=="السلامن عليكم" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then 
return luatele.sendText(msg.chat_id,msg.id,"وعٍلُِيڪم آلُِسلُِآم عٍمري 🌸🤍" )
end
if text== "عضه"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"شكلولك علي جلب؟ انته روح عضه ??😹" )
end
if text== "🚶🏻‍♂"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"لُـﮩـضڵ تتـمشـﮥ اڪعـد ﺳـﯠڵـف 😕😹")
end
if text== "البوت واكف" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"هياتني موجود⚡️")
end
if text== "ضايج"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ليش ضايج حياتي")
end
if text== "ضايجه"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"منو مضوجج كبدايتي")
end
if text== "😳" or text== "😳😳" or text== "😳😳😳" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"هـآ شُبَيڪ مڝـدۅم عٍموو 😳😹")
end
if text== "صدك"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"قابل اجذب عليك!؟ 🌚")
end
if text== "تخليني"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"اخليك بزاويه 380 درجه وانته تعرف الباقي 😹")
end
if text== "فديتك" or text== "فديتنك"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return  luatele.sendText(msg.chat_id,msg.id,"فداكـ/چ ثولان العالـم😍😂" )
end
if text== "مساعدة"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"لعرض قائمة المساعدة اكتب الاوامر 🌚❤️")
end
if text== "زاحف"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"زاحف عله خالتك الشكره 🌝")
end
if text== "حلو"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ٱنۨــہت ٱلٱحۡلى 🌚❤️،")
end
if text== "تبادل"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"كافي ملينه تبادل 🥰💔")
end
if text== "عاش"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"الحلو 🌝🌷")
end
if text== "ورده" or text== "وردة" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"أنت/ي  عطرها 🥰🌸")
end
if text== "شسمك"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙أسمي ["..Bot_Name.."]\n❆︙آختصـآصـي حمـآيهہ‌‏ آلمـجمـوعآت\n❆︙مـن آلسـبآم وآلتوجيهہ‌‏ وآلتگرآر وآلخ...\n❆︙ضيفني لكروبك ورفعني مشرف بلكروب وارسل تفعيل داخل الكروب")
end
if text== "فديت" or text=="فطيت" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"فُُدِآڪ/جٍ ڪلُِبَي وودِڪآتھَہّ 🙈💗")
end
if text== "زاحفه" or text== "زاحفة" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return  luatele.sendText(msg.chat_id,msg.id,"لو زاحفتلك جان ماكلت زاحفه 🌝🌸")
end
if text== "حبيبي" or text=="حبي" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return  luatele.sendText(msg.chat_id,msg.id,"يہرﯛ̲حہي آنہت/ ي 🥰")
end
if text== "حبيبتي" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id," مشغوله ويا الكبد 🌝🌷")
end
if text== "حياتي" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ﮭأُ ڳّبّدِ حٌيْأُتٌيْ₎🌸😻 ")
end
if text== "عمري" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"؏مريِّ ڤﮃٱڳ يِّروڂيِّ 😌")
end
if text== "اسكت" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"آوڪ ڪلُِبَي🤎")
end
if text== "بتحبني" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"بحبك اد الكون 😍🌷")
end
if text== "المعزوفه" or text=="المعزوفة" or text=="معزوفه" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then 
return luatele.sendText(msg.chat_id,msg.id,"طرطاا طرطاا طرطاا ??🥰")
end
if text== "موجود" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"تفضل عزيزي 🌝🌸")
end
if text== "اكلك" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,".كول حياتي 😚")
end
if text== "فدوه" or text=="فدوة" or text=="فطوه" or text=="فطوة" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ڵـڪڵـبِڪ حيٱت̲و،😚")
end
if text== "دي"  or text== "ديي" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"آمشُيڪ بَيهـآ 😏")
end
if text== "اشكرك" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"بخدمتك/ج حبي ❤")
end
if text== "😊"  or text== "😊😊"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"فُُدِووة خـدِوودِ تفُُآﺣّ͠ـھَہّ 😊")
end
if text== "😑"  or text==  "😑😑" or text==  "😑😑😑" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"دِيي وجٍهـڪ معٍقٌدِ 👊😠")
end
if text== "اطردني"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ۅٱﻧـي شُعٍلُِي ۅجّـھَہّ ٱلْـطٱۅھَہّ؟😂")
end
if text== "🙄??" or text== "??"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ﻧ̲زَڵﻋيوﻧ̲ڪ ٱحوڵ / حوڵـﮬ̲̌ 😹")
end
if text== "شسمج"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"آترڪ آسمي هـسھَہّ آلُِى آشُعٍآر آخـر 😅")
end
if text== "اني"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"آنِٰـِۢتِٰ / يِٰ ﯛ̲୭ردۿۿہ 🌸⇣")
end
if text== "نورت"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"نِٰـِۢﯛ̲رڪِٰـِۢ هـذَآ يآشُمعٍھَہّ 💡")
end
if text== "نورتي"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then 
return luatele.sendText(msg.chat_id,msg.id,"نِٰـِۢﯛ̲رڪِٰـِۢ هـذَآ يآشُمعٍھَہّ 💡")
end
if text== "صباح الخير"  or text== "صباحو"  or text== "صباح الورد"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"صـبِٱحو عسۜل يۧٱكيۧكهۂَ ٱنۨــت 😋")
end
if text== "مساء الخير"  or text== "مساو"  or text== "مساء الورد"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"مـﺳ̲ٱئڪ ﻋﺳ̲ڵ يڪڵـبِي 💏")
end
if text== "منو ضافني"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"هـلُِآ بَآلُِڪمر نورت / ي ڪروبَنآ 🐼💗")
end
if text== "منو ضافني هنا"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"بَدِلُِ متڪوولُِ شُڪرآ 😏")
end
if text== "وينكم"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"يمڪ بس الربع طامسين 🥺💕")
end
if text== "محح"  or text== "ممح"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"بﯝيہٳي عـسہل 🍯💕")
end
if text== "🤔"  or text== "🤔🤔"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"شُبَي ٱلْـﺣّ͠ـلْـۅ صآفُُن 💖‘🌝")
end
if text== "💃"  or text== "💃💃"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"شنو ألجمہأل ألبيهه سحہر كلبي😍💃")
end
if text== "😂"  or text== "😂😂" or text== "😹" and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"تدوم هـآلضحگھَہّ يِگلبيِ 💜")
end
if text== "😉"  or text== "😉😉"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"أويہلي آذﯛبِٰ 😍🙈")
end
if text== "💋"  or text== "💋💋"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ٰأويہلي شہهل ألعہسہل 🍯😍")
end
if text== "😘"  or text== "😘😘"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ٰعٌـِـِِـِـڛـ,ـلُ شُـُـُُـُنـِِـِـي 😍🙈")
end
if text== "هلا"  or text== "هلاو"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"هلوٱت عـمـرّي 🙂")
end
if text== "😅"  or text== "😅😅"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ٱتــدومۘ حۡيۧٱتـيۧ 💖")
end
if text== "🙈"  or text== "🙈🙈"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ٰفہديہت ألخہجہلۦ😍🙈")
end
if text== "تعال خاص"  or text== "تعالي خاص"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ٰۿہآ بَٰـُـٰٓدآ آلَٰـُـٰٓزحَٰـُـٰٓفٰ͒ 😏")
end
if text== "🦉"  or text== "🦉🦉"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ٰهلأ بہومہه 😻🙈")
end
if text== "الابراج"  or text== "ابراج"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"ٰ❆︙يرجى كتابة اسم برجك !")
end
if text== "همسه"  or text== "همسة"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙هلا بك عزيزي\n❆︙ضع معرف البوت  في الرساله ثم تكتب الهمسه ثم معرف الشخص بعدها تضغط هذه همسه سرية الى...")
end
if text== "تحويل الصيغ"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙تحويلات الصيغ عن طريق ارسال الملف في المجموعه والرد على الملف كالاتي:\n_ ملصق الى صورة _ الرد (صوره) وبالعكس\n_ بصمه الى صوت _ الرد (صوت) وبالعكس \n_ فيديو الى صوت _ الرد (mp3)\n_ فيديو الى متحركه_الرد (متحركه)")
end
if text== "اغاني"  and Redis:get(LiOn..'replayallbot'..msg.chat_id) then
return luatele.sendText(msg.chat_id,msg.id,"❆︙اسد تيوب بحث يوتيوب في المجموعات فقط\n❆︙ارفعه مشرف واكتب (تفعيل اليوتيوب)\n❆︙بحث + اسم الاغنيه  @Merotubebot")
end
end

end  -- LiOn:Status:repleall
if text and  text:match("^"..Bot_Name.." اتفل(.*)$") and msg.Managers then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then
luatele.sendText(msg.chat_id,msg.id,'اوك سيدي 🌝❆')
luatele.sendText(msg.chat_id,msg.reply_to_message_id,'لك شنو هاذه ويهك ختفوووووووووو💦💦️️ بنص ويهك 😹') 
else
end
end

if text and  text:match("^صيحه$") and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
local FlterName = UserInfo.first_name
local seha = {
"يمعوود تعاال يريدوكك🤕♥️",
"تتعال ححب محتاجيك🙂🍭",
"تعال يولل استاذكك ايريدككك😒🔪"
}
luatele.sendText(msg.chat_id,msg.id,'صارر استاذيي 🏃🏻‍♂️♥️') 
local msg_id = msg.reply_to_message_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape('- ['..FlterName..'](tg://user?id='..Message_Reply.sender_id.user_id..')'..'\n'..seha[math.random(#seha)]).."&reply_to_message_id="..msg_id.."&parse_mode=markdown")
return false
end
end

if text and  text:match("^رزله$") and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then
local tzl = {
"ميستاهل اتعب روحي ويا لانه عار 😐",
"ولك هيو لتندك بسيادك لو بهاي 👈👞 انت شايف وجهك تكول فحمايه 🌚 وجه الطاوه يلا دي منا🏌️😡",
"عوفه حبيبي هذا جاهل يضل يبجي🤣",
"لك حيوان ادبسز انت شدخلك \nانت حياتك كلهه تروح تاكلك ماعون تمن وتشريب ولحم وتكعد وتسكت 😕🚶",
"شوف هذا العار يريدني ارزلك يروحلك فدوه 🥰💖",
"لك دي وتفو بعد لتندك بتاج راسك خوش حمبقلبي ??️",
"تعال هيوو ✊😏 شو طالعه عينك ولسانك طويل سربوت  اشو تعال بله شنو هذا ويهك هاذ 😳 كول بلعباس😅",
"روح من يمي لا الطمك سطره اكلب جهرتك 🤬بعدك كتكوت روح العب بعيد ابني🧑‍🦯",
"لك شلون ارزل تاج راسك يا غبي يلا اشطح??☹",
"شبيك انت تظل ملطلط شكدك بعد تصير شايلين عقلك مخلين مكانه قندره😹👊 ",
"لتحجي ولا حرف فهمت ترا بالنعال واكطعه ع راسك وجه الصخل🐐😡 ",
"انت طيب وغالي عليه وهذا يكولي رزله روح طيح حظه😅 ",
}
luatele.sendText(msg.chat_id,msg.id,'صارر استاذيي 🏃🏻‍♂️♥️')
return luatele.sendText(msg.chat_id,msg.reply_to_message_id,tzl[math.random(#tzl)]) 
end 
end

if text and  text:match("^بوسه$") and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then
local bos = {
"امممووااهحح شهلعسل🥺🍯💘",
"مابوس واحد خايس مثلك 😁",
"يععع تلعب نفسي 😷",
"مابوس خدك مالح 😹👌",
"امممووااهحح شهلعسل🥺🍯💘",
"ولي مابوس واحد عاوي مثلك☹️",
"ممممح😘ححح😍😍💋",
"ممممح💋ححح مو خدود ضيم🥰",
}
luatele.sendText(msg.chat_id,msg.id,'صارر استاذيي 🏃🏻‍♂️♥️')
return luatele.sendText(msg.chat_id,msg.reply_to_message_id,bos[math.random(#bos)]) 
end
end

if text and  text:match("^بوسه$") and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) or text and  text:match("^بوسني$")  and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local bos = {
"امممووااهحح شهلعسل🥺🍯💘",
"مابوس واحد خايس مثلك 😁",
"يععع تلعب نفسي 😷",
"مابوس خدك مالح 😹??",
"امممووااهحح شهلعسل🥺🍯💘",
"ولي مابوس واحد عاوي مثلك☹️",
"ممممح😘ححح😍😍💋",
"ممممح💋ححح مو خدود ضيم🥰",
}
return luatele.sendText(msg.chat_id,msg.id,bos[math.random(#bos)]) 
end
if text== "شنو رئيك بهذا" or text== "شنو رئيك بي" or text== "شنو رئيك بهاذه" or text== "شنو رئيك بهذا" or text== "شنو رأيك بهذا" or text== "شنو رايك بهذا" then 
if  not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then
local he = {"هـذا شـخص حـباب بـس وكـح وشـويـه زاحـف 😂 عـمريي كـله لـيضل يـزحف تـرا فـضـحنا 😂💔","هذا الحلو ..شخـص ايـجابـي ومـحبـوب🥺واللي ميـحبه ادكـه بالنـعال 🤭😂صـح مـرات يـجفـص بـس يـبقـى مـحبوب 🥺♥️","لوكي وزاحف قبل شويه زحفلي وحضرتـه 🤪","خــوش ولـد و ورده مـال الله 💖","يلعـــب ع البنـــات 🙄","واحـــد زايعتــه الكـــاع 😶😁","صــاك يخبــل وشخصيــه😘","محلــو وشواربــه جنها مكناسـه??","لـك ضلعــي هــذا امــوت عليـه 🌝","هــو غيــر الحب مـال انــي 🤓❤️","مــو خــوش ولــد صراحــه ☹️","ادبســز وميحتــرم البنــات😏","فــد واحـــد قـــذر 😁","ماطيقــه كل ما الزمـه ريحتــه  تكتــل 😂🤪","ولـد طيـب مـن اهــل اللـه 😁",
}
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
local FlterName = UserInfo.first_name
local msg_id = msg.reply_to_message_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape('- ['..FlterName..'](tg://user?id='..Message_Reply.sender_id.user_id..')'..'\n'..he[math.random(#he)]).."&reply_to_message_id="..msg_id.."&parse_mode=markdown")
end
end
end
if text== "انطي هديه" and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then     
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then

local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
local FlterName = UserInfo.first_name
local geft = {
"الف مبروك ?? هديتك بيذنجان🍆سوي تبسي واندعيلي 🤲😹",
"الف مبروك 👏 هديتك نوتيلا 🍫 \nيا كيكه انت 🥰😹",
"الف مبروك 🥰 هديتك شفقه 🧢 البسهه الشمس تسمط راسك 😁😹",
"الف مبروك 👏 هديتك راس بصل 🧅 اكله وابجي الدموع تريح القلب 😁😹",
"الف مبروك 👏 هديتك حذاء 👞 تلبسهه لو اكطعهه على راسك 🥰😹",
"الف مبروك 👏 هديتك شده 💸\n بس مو تتكبر على اصدقائك 😁😹",
"الف مبروك 👏 هديتك تاج ذهب 👑\n يا تاج وباج انت 😉🥰",
"الف مبروك 🥰 هديتك ساعه 🕰  بيها\nمنبه تكعدك الصبح 😁😹",
"الف مبروك 👏 هديتك خاتم 💍 \nواعزمنه بعرسك 💃😹",
"الف مبروك 👏 هديتك صابونه 🧼 والمي بلاش وروح اسبح يالوصخ 😁😹"
}
luatele.sendText(msg.chat_id,msg.id,'صارر استاذيي 🏃🏻‍♂️♥️')
local msg_id = msg.reply_to_message_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape('- ['..FlterName..'](tg://user?id='..Message_Reply.sender_id.user_id..')'..'\n'..geft[math.random(#geft)]).."&reply_to_message_id="..msg_id.."&parse_mode=markdown")
return false
end
end
if text== "شنو رئيك بهاي" or text=="شنو رئيك بيه" or text== "شنو رئيك بهاذش" or text== "شنو رأيك بهاي" or text== "شنو رايك بهاي" then 
if msg.reply_to_message_id then
if not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then     
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
local FlterName = UserInfo.first_name
local she = {"الكبـد مــال اني هيـه🥰","ختولـي محبهــه جنهه فخريـه🤣","خانتنـــي ويـــا صديقـــي 😔","بس لــو الكفها الا اعضهــا 💔","خــوش بنيــه بس عـدهه سوالــف  ماصخــه وهيـه تــدري بنفسها 😁🤪","جذابــه ومنافقــه سوتلـي مشكله ويـا الحـب مالتـي😑","اووووووووف امـــوت  عليهـه💖","ديــرو بالكــم منها تلعــب ع الشبـاب 😶 ضحكـت ع واحـد قطتــه ايفــون 11 بـــرو☹","صديقتـي واختـي وروحـــي وحياتـي😊","فــد وحــده خبــله ولسانهه متبـري منهه😁","معـــدله ونازكــهه وعيونهـه تمــوت 😊","ام سحــوره سحـرت اخويــه وطيـرت عقلــه😭","حبيبــة كلبـي هايـه العشـق🥰","بلــه هـايـه هــم جهــره تسأل عليها ؟🤣","بربــك انت والله فــارغ وبطـــران ومعنـدك شي تسوي جـاي تسأل ع بنــات العالم ولــي يله ☹️","يااخــي بنيه حبوبــه وكلبهــه طيــب فديتهــه😍","هــاي البقـره مقدسـه مجرد ماتكلهه بس يجونـك بالتفـك منيـن ويـن ليـش بيـش عيـش طيـط طيـط طيـط 🤣🏃‍♂️",
}
local msg_id = msg.reply_to_message_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape('- ['..FlterName..'](tg://user?id='..Message_Reply.sender_id.user_id..')'..'\n'..she[math.random(#she)]).."&reply_to_message_id="..msg_id.."&parse_mode=markdown")
end
end
end
if text=="اتفل" or text=="تفل" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.Addictive then 
return luatele.sendText(msg.chat_id,msg.id,'ختفوووووووووو💦??️️')
else 
return luatele.sendText(msg.chat_id,msg.id,"❆ انجب ما اتفل عيب 😼🙌🏿") 
end
end



if text== "اضف سؤال كت" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."gamebot:Set:Manager:rd"..msg.sender_id.user_id..":"..msg.chat_id,true)
return luatele.sendText(msg.chat_id,msg.id,"ارسل السؤال الان ")
end
if text== "مسح سؤال كت" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."gamebot:Set:Manager:rdd"..msg.sender_id.user_id..":"..msg.chat_id,true)
return luatele.sendText(msg.chat_id,msg.id,"ارسل السؤال ")
end

if text== 'كت تويت' or text== 'كت' then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then 
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."gamebot:List:Manager")
if #list ~= 0 then
local quschen = list[math.random(#list)]
return luatele.sendText(msg.chat_id,msg.id,quschen)
end
end
end
if text == 'اضف اسئله كت' then
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local list = {

' ما هو الشيء الذي تكرهه بشدة؟ ولماذا؟',
'  هل من الممكن نسيان شخص ظلمك؟',
'  هل تقبل الزواج بشخص غني لكنه متعدد العلاقات؟',
'  شهر من أشهر العام له ذكرى جميلة معك؟',
'  لو خيروك بين البقاء ليوم كامل في بيت مهجور أو في غابة موحشة.',
'  ما هي الصفة التي تود تغييرها في الشخص الآخر؟ وهل حاولت ذلك من قبل؟ وما النتيجة التي حصلت عليها؟',
'  هل وقعت في حب شخص من مواقع التواصل الإجتماعي؟',
'  هل تملك صديق كأخ؟ أو هل تملك أخ كالصديق؟ وهل يعرف جميع أسرارك؟',
'  ما هو الشخص الذي لا تستطيع أن ترفض له أي طلب؟',
'  هل تشعر أن هنالك مَن يُحبك؟',
'  هل يمكنك أن تتولى أمر الأعمال المنزلية أم أنك سوف تفشل في ذلك؟',
'  هل كذبت على أحد والديك؟',
'  هل يمكنك أن تكون صريح تمامًا اتجاه حبيبك / حبيبتك؟ أم لا بد من الكثير من المجاملات؟',
'  متى اخر مره حدث خلاف بينكما؟ وعلى ماذا كان هذا الخلاف؟ وهل تم حله بشكل تام؟',
'  هل تُؤمن بضرب الأطفال في التربية؟',
'  هل تعتقد أن حبيبتك / حبيبك يفكر بك الآن؟ أم هل تظن أنه منشغل بأمر آخر  .ام انك سنكل؟',
'  كيف تُعبر عن فرحتك عندما تكون لوحدك؟',
'  إذا خيروك أن تُعيد تسمية نفسك فهل تقبل باسمك أم تقوم بتغييره؟',
'  هل حاربت من أجل شخص ما من قبل؟',
'  ما هي هوايتك في الحياة؟',
'  هل تقبل الارتباط بشخص فقير لكنه شديد الجمال؟',
'  كم من الوقت تستغرق قبل الخروج من المنزل ؟',
'  من هو الشخص الذي يُمثل نقطة ضعفك؟',
'  لماذا انتهت أول قصة حب في حياتك؟',
'  ‏ ماذا ستختار من الكلمات لتعبر لنا عن حياتك التي عشتها الى الآن؟',
'  متى كانت المرة الأخيرة التي كذبت فيها؟',
'  ما هي أجمل سنة عشتها بحياتك؟',
'  كنت السبب في أذى شخص ما؟',
'  هل رأي الآخرين مهم بالنسبة لك؟',
'  هل تملك صديق يتقن الغناء؟',
'  ما هي اللعبة المفضلة لديك؟',
'  ما هي مواصفات شريك حياتك؟',
'  هل يُمكن أن تكذب كذبة كبيرة للخروج من مأزق؟',
'  إذا جاء شريك حياتك وطلب الانفصال، فماذا يكون ردك وقتها؟',
'  هل أنت شخص غيور؟',
'  هل انت تدرس؟',
'  ‏ماذا ستختار من الكلمات لتعبر لنا عن حياتك التي عشتها الى الآن؟',
'  هل ما زلت تعتقد ان هنالك حب حقيقي؟',
'  هل أنت من الأشخاص المحظوظين أم أن سوء الحظ يرافقك؟',
"هل أنت محبوب من زملائك في العمل؟",
"هل يمكن لك التخلي عن حبك أمام كرامتك؟",
"إذا وجدت ورقة بيضاء فماذا ترسم لتعبر عن حالتك النفسية؟",
"لو تم وضعك أما ثلاث خيارات ( المال، الصحة، الرضا) أيهما تختار؟",
"هل شعرتي بالندم من قبل بسبب ثقتك في أحد الأشخاص؟",
"هل أنت مع الخطبة عن حب أم مع الخطبة عن طريق الأهل؟",
"من وجهة نظرك هل يأتي الحب بعد الزواج؟",
"ماذا لو كنت ستختار بين رحلة إلى الغابات والجبال أو رحلة إلى البحر؟",
"هل يمكنك الوقوع في الحب عبر الإنترنت؟,",
"هل سبق ورسبت في المدرسة؟ وكم عدد المرات؟",
"هل لديك فوبيا من شيء معين؟",
"إذا دخلت مُسابقة وكسبت 5 مليون دولار ماذا تفعل بهم؟",
"هل يمكن أن تكره شخص كنت تحبه؟ أو تحب شخص كنت تكرهه؟",
"من هم أصدقائك المقربين منك؟",
"كم ساعة تنام في اليوم؟",
"لماذا تتمنى أن يعود الزمن؟ هل تفتقد أي شيء أو أي شخص هناك؟",
"هل يمكن لكي أن تكتفي قبل النزول من المنزل بغسيل الوجه فقط دون وضع الميكاب؟",
"هل كنت تخفي المعلومات المهمة عن زملائك في الدراسة؟",
"هل تستطيع أن تعيش بدون أصدقاء؟",
"ماذا تختار حبيبك أم صديقك؟",
"من هو الشخص الذي تستطيع أن تحكي له أي مشكلة بدون خجل؟",
"إذا تركك من تحب، هل تعود إليه مرة أخرى أم تتركهُ وتنتظر وقت عودته؟",
"هل سبق وأن تعرضت للسرقة من أحد قريب لك؟",
"هل من الممكن أن تضر شخصاً لمجرد أنك تكرهه؟",
"ما هو الحيوان الذي تحب العناية به؟,",
"اسم اغنية قريبة على قلبك؟",
"هل تستطيع اخبارنا معلومة هامة عنك لم يعرفها أحد من المتواجدين هنا؟",
"هل تستطيع التنازل عن شيء تفضله من أجل إسعاد الآخرين؟",
"أغمض عينيك ما هو المكان الذي تخيلت نفسك فيه؟",
"هل من الممكن أن ترتكب جريمة ضد شخص حتى لا يكشف سرك؟",
"هل يمكنك التخلي عن هدفك في سبيل شخص؟",
"ما هو البرج الخاص بك؟",
"لو كان هناك أمامك اختيارين أحدهما الزواج والإستقرار معي هنا والآخر السفر والعمل بالخارج، أيهما تختار؟",
"هل سبق وضربت أحدهم؟ ولماذا فعلت ذلك؟"
}
for k,v in pairs(list) do
Redis:sadd(LiOn.."gamebot:List:Manager",v)
end
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تم اضافه اسئله كت* ',"md",true)  
end





if text and text:match('^ذيع (-100%d+)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local Chatid = text:match('^ذيع (-100%d+)$') 
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end 
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local Get_Chat = luatele.getChat(Chatid)
if not data.id then
luatele.sendText(msg_chat_id,msg_id,'- لا توجد مجموعه في البوت بهذا الايدي')
return false
end
luatele.sendText(Chatid,0,Message_Reply.content.text.text)
luatele.sendText(msg_chat_id,msg_id,'- تم الاذاعه الى  : '..Get_Chat.title..'\n ')
end 


if text and text:match('^حظر مجموعه (-100%d+)$') then
local Chatid = text:match('^حظر مجموعه (-100%d+)$')
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Get_Chat = luatele.getChat(Chatid)
if not data.id then
luatele.sendText(msg_chat_id,msg_id,'- لا توجد مجموعه في البوت بهذا الايدي')
return false
end
luatele.leaveChat(Chatid)
Redis:sadd(LiOn.."Black:listBan:",Chatid)
luatele.sendText(msg_chat_id,msg_id,'- تم حظر المجموعه  : ['..Get_Chat.title..']\n - وتم مغادره البوت من المجموعه')
end 
if text and text:match('^الغاء حظر مجموعه (-100%d+)$') then
local Chatid = text:match('^الغاء حظر مجموعه (-100%d+)$')
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:srem(LiOn.."Black:listBan:",Chatid)
luatele.sendText(msg_chat_id,msg_id,'- تم الغاء حظر المجموعه ')
end 

if text == 'الروليت' then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if not Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
return false
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local xxffxx = 'اهلا بك في لعبه الروليت يجب انضمام 3 لاعبين فقط'
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '❆︙اضغط للانضمام في اللعبه', data = '/joinerolet'},
},
}
}
Redis:del(LiOn..'rolet:list'..msg.chat_id) 
luatele.sendText(msg_chat_id,msg_id,xxffxx,"md",false, false, false, false, reply_markup)
end
if text == "الحظ" then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
local xxffxx = 'اهلا بك في لعبه الحظ اضغط للانضمام'
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '❆︙اضغط للانضمام', data = '/joineloce'},
},
}
}
Redis:del(LiOn..'loce:list'..msg.chat_id) 
luatele.sendText(msg_chat_id,msg_id,xxffxx,"md",false, false, false, false, reply_markup)
end
end

if text == "اضف سؤال" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,true)
return luatele.sendText(msg_chat_id,msg_id,"ارسل السؤال الان ")
end
if text == "مسح سؤال" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,'truedel')
return luatele.sendText(msg_chat_id,msg_id,"ارسل السؤال الان ")
end
if text == 'الاسئله المضافه' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."gamebot:new1")
t = "❆︙ الاسئله المضافه : \n ـــــــــــــــــــــــــــــــــــــــــــــــ\n"
for k,v in pairs(list) do
t = t..""..k.."- (["..v.."])\n"
end
if #list == 0 then
t = "• لا يوجد اسئله"
end
return luatele.sendText(msg_chat_id,msg_id,t,"md")
end

if text == 'مسح الاسئله المضافه' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:del(LiOn.."gamebot:new1")
return luatele.sendText(msg_chat_id,msg_id,"تم مسح الاسئله","md")
end

if text == "تفعيل الاوامر" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
Redis:set(LiOn.."LiOn:Status:Games"..msg_chat_id,true) 
Redis:set(LiOn..'tagallgroup'..msg.chat_id,'open') 
Redis:set(LiOn..'tagall@all'..msg.chat_id,'open') 
Redis:del(LiOn.."knele"..msg.chat_id)
Redis:set(LiOn.."LiOn:Status:Link"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:Status:Welcome"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:Status:BanId"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:Status:ReplySudo"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:Status:Reply"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:Status:IdPhoto"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:Status:Id"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:Status:SetId"..msg_chat_id,true) 
Redis:set(LiOn.."LiOn:Status:KickMe"..msg_chat_id,true) 
Redis:set(LiOn.."replayallbot"..msg.chat_id,true)
Redis:del(LiOn.."amrthshesh"..msg.chat_id)
Redis:del(LiOn.."spammkick"..msg.chat_id)
Redis:del(LiOn.."intg"..msg.chat_id)
Redis:del(LiOn.."kadmeat"..msg.chat_id)
Redis:del(LiOn.."zhrfa"..msg.chat_id)
Redis:del(LiOn.."brjj"..msg.chat_id)
Redis:del(LiOn.."idnotmembio"..msg.chat_id)
Redis:del(LiOn.."idnotmem"..msg.chat_id)
Redis:del(LiOn..'lock_geamsAudio1'..msg.chat_id) 
Redis:del(LiOn..'lock_geamsAudio'..msg.chat_id) 
Redis:del(LiOn.."idnotmemname"..msg.chat_id)
Redis:del(LiOn.."idnotmembio"..msg.chat_id)
Redis:set(LiOn.."LiOn:Alzwag:Chat"..msg.chat_id,"true")
Redis:set(LiOn.."LiOn:Aldel:Chat"..msg.chat_id,"true")
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تفعيل جميع الاوامر\n✓" )
end

if text == 'اسالني' then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if not Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
return false
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn..'lock_geams'..msg.chat_id) then
local list = Redis:smembers(LiOn.."gamebot:new1")
if #list ~= 0 then
local quschen = list[math.random(#list)]
local ansar1 = Redis:get(LiOn.."gamebot:newqus:as1"..quschen)
local ansar2 = Redis:get(LiOn.."gamebot:newqus:as2"..quschen)
local ansar3 = Redis:get(LiOn.."gamebot:newqus:as3"..quschen)
local ansar0 = Redis:get(LiOn.."gamebot:newqus:as0"..quschen)
local ansar4 = Redis:get(LiOn.."gamebot:newqus:as4"..quschen)
if ansar1 == ansar4 then
testt = 'ansar1'
elseif ansar2 == ansar4 then
testt = 'ansar2'
elseif ansar3 == ansar4 then
testt = 'ansar3'
elseif ansar0 == ansar4 then
testt = 'ansar0'
end
if testt == 'ansar1' then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'صحيح'},{text = ansar2, data = 'غلط'}, 
},
{
{text = ansar3, data = 'غلط'},{text = ansar0, data = 'غلط'}, 
},
}
}
luatele.sendText(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
elseif testt == 'ansar2' then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'غلط'},{text = ansar2, data = 'صحيح'}, 
},
{
{text = ansar3, data = 'غلط'},{text = ansar0, data = 'غلط'}, 
},
}
}
luatele.sendText(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
elseif testt == 'ansar3' then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'غلط'},{text = ansar2, data = 'غلط'}, 
},
{
{text = ansar3, data = 'صحيح'},{text = ansar0, data = 'غلط'}, 
},
}
}
luatele.sendText(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
elseif testt == 'ansar0' then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'غلط'},{text = ansar2, data = 'غلط'}, 
},
{
{text = ansar3, data = 'غلط'},{text = ansar0, data = 'صحيح'}, 
},
}
}
luatele.sendText(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
end
end
end
end
if text == "اضف لغز" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,true)
return luatele.sendText(msg_chat_id,msg_id,"ارسل اللغز الان ")
end
if text == "مسح لغز" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,'truedel')
return luatele.sendText(msg_chat_id,msg_id,"ارسل اللغز الان ")
end
if text == 'الالغاز' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."lkz:gamebot:new1")
t = "❆︙ الالغاز : \n"
for k,v in pairs(list) do
t = t..""..k.."- (["..v.."])\n"
end
if #list == 0 then
t = "• لا يوجد الغازمضافه"
end
return luatele.sendText(msg_chat_id,msg_id,t)
end
if text == 'مسح الالغاز' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:del(LiOn.."lkz:gamebot:new1")
return luatele.sendText(msg_chat_id,msg_id,'تم مسح الالغاز جميعا ')
end

if text == 'لغز' then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if not Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
return false
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn..'lock_geams'..msg.chat_id) then
local list = Redis:smembers(LiOn.."lkz:gamebot:new1")
if #list ~= 0 then
local quschen = list[math.random(#list)]
local ansar1 = Redis:get(LiOn.."lkz:gamebot:newqus:as1"..quschen)
local ansar2 = Redis:get(LiOn.."lkz:gamebot:newqus:as2"..quschen)
local ansar3 = Redis:get(LiOn.."lkz:gamebot:newqus:as3"..quschen)
local ansar4 = Redis:get(LiOn.."lkz:gamebot:newqus:as4"..quschen)
if ansar1 == ansar4 then
tt = 'ansar1'
elseif ansar2 == ansar4 then
tt = 'ansar2'
elseif ansar3 == ansar4 then
tt = 'ansar3'
end
print(tt)
if tt == 'ansar1' then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'صحيح1'},
},
{
{text = ansar2, data = 'غلط1'},
},
{
{text = ansar3, data = 'غلط1'},
},
}
}
luatele.sendText(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
elseif tt == 'ansar2' then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'غلط1'},
},
{
{text = ansar2, data = 'صحيح1'},
},
{
{text = ansar3, data = 'غلط1'},
},
}
}
luatele.sendText(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
elseif tt == 'ansar3' then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'غلط1'},
},
{
{text = ansar2, data = 'غلط1'},
},
{
{text = ansar3, data = 'صحيح1'},
},
}
}
luatele.sendText(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
end

end
end
end

if text == 'اسئله كت' then
if not Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
return false
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."gamebot:List:Manager")
t = "❆︙ الاسئله المضافه : \n"
for k,v in pairs(list) do
t = t..""..k.."- (["..v.."])\n"
end
if #list == 0 then
t = "• لا يوجد اسئله"
end
return luatele.sendText(msg_chat_id,msg_id,t,'md')
end

if text == 'مسح اسئله كت' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."gamebot:List:Manager")
if #list == 0 then
luatele.sendText(msg_chat_id,msg_id,"• لا يوجد اسئله")
end
Redis:del(LiOn.."gamebot:List:Manager")
luatele.sendText(msg_chat_id,msg_id,'تم مسح الاسئله')
end

if text == ("مسح الثولان") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:tahaath'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'mero:tahaath'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."} من الثولان \n✓")
elseif text == ("مسح الجلاب") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:klp'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'mero:klp'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."} من الجلاب \n✓")
elseif text == ("مسح المطايه") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:donke'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'mero:donke'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."} من المطايه \n✓")
elseif text == ("مسح الزواحف") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:zahf'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'mero:zahf'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."} من الزواحف \n✓")
elseif text == ("مسح الصخول") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:sakl'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'mero:sakl'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."} من الصخول \n✓")
elseif text == ("مسح قائمه كلبي") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:klpe'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'mero:klpe'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."} من قائمه كلبي \n✓")
elseif text == ("مسح قائمه التاج") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:tagge'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'mero:tagge'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."} من قائمه التاج \n✓")
elseif text == ("مسح الزوجات") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:mrtee'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'mero:mrtee'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."} من قائمه الزوجات \n✓")
elseif text == ("مسح الثولان") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:klp'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'admins:'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."}  \n✓")
elseif text == ("مسح اللوكيه") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:loke'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'mero:loke'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."} من اللوكيه \n✓")
elseif text == ("مسح الاغبياء") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local numtsh = Redis:scard(LiOn..'mero:stope'..msg.chat_id)
if numtsh ==0 then  
return luatele.sendText(msg_chat_id,msg_id, "❆︙ هنالك خطأ \n❆︙عذرا لا احد ليتم مسحه ✓" )
end
Redis:del(LiOn..'mero:stope'..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙أهلا عزيزي "..msg.Name_Controller.."   \n❆︙تم مسح {"..numtsh.."} من الاغبياء \n✓")
end


if text == 'ملصق' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(LiOn..'kadmeat'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.photo then
if data.content.photo.sizes[1].photo.remote.id then
idPhoto = data.content.photo.sizes[1].photo.remote.id
elseif data.content.photo.sizes[2].photo.remote.id then
idPhoto = data.content.photo.sizes[2].photo.remote.id
elseif data.content.photo.sizes[3].photo.remote.id then
idPhoto = data.content.photo.sizes[3].photo.remote.id
end
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..idPhoto) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, './'..msg.id..'.webp') 
luatele.sendSticker(msg.chat_id, msg.id, Name_File)
os.execute('rm -rf '..Name_File) 
else
luatele.sendText(msg_chat_id,msg_id,'هذه ليست صوره')
end
end
if text == 'صوره' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(LiOn..'kadmeat'..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.sticker then    
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..data.content.sticker.sticker.remote.id) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, './'..msg.id..'.jpg') 
luatele.sendPhoto(msg.chat_id, msg.id, Name_File,'')
os.execute('rm -rf '..Name_File) 
else
luatele.sendText(msg_chat_id,msg_id,'هذا ليس ملصق')
end
end
if text == 'بصمه' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(LiOn..'kadmeat'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.audio then    
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..data.content.audio.audio.remote.id) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, './'..msg.id..'.ogg') 
luatele.sendVoiceNote(msg.chat_id, msg.id, Name_File, '', 'md')
os.execute('rm -rf '..Name_File) 
else
luatele.sendText(msg_chat_id,msg_id,'هذا ليس ملف صوتي')
end
end
if text == 'صوت' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(LiOn..'kadmeat'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.voice_note then
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..data.content.voice_note.voice.remote.id) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, msg.id..'.mp3') 
luatele.sendAudio(msg.chat_id, msg.id, Name_File, '', "md") 
os.execute('rm -rf '..Name_File) 
else
luatele.sendText(msg_chat_id,msg_id,'هذا ليس بصمه')
end
end
if text == 'mp3' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(LiOn..'kadmeat'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.video then
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..data.content.video.video.remote.id) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, msg.id..'.mp3') 
return luatele.sendAudio(msg.chat_id, msg.id, Name_File, '', "md") 
--os.execute('rm -rf '..Name_File) 
else
luatele.sendText(msg_chat_id,msg_id,'هذا ليس فيديو')
end
end
if text == 'متحركه' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(LiOn..'kadmeat'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.video then
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..data.content.video.video.remote.id) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, msg.id..'.gif.mp4') 
luatele.sendAnimation(msg.chat_id,msg.id, Name_File, '', 'md')
--os.execute('rm -rf '..Name_File) 
else
luatele.sendText(msg_chat_id,msg_id,'هذا ليس فيديو')
end
end


if text and text:match("^انطق (.*)$") and not Redis:get(LiOn..'intg'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UrlAntk = https.request('https://apiabs.ml/Antk.php?abs='..URL.escape(text:match("^انطق (.*)$")))
Antk = JSON.decode(UrlAntk)
if UrlAntk.ok ~= false then
uuu = download("https://translate"..Antk.result.google..Antk.result.code.."UTF-8"..Antk.result.utf..Antk.result.translate.."&tl=ar-IN",'./'..Antk.result.translate..'.mp3') 
sendAudio(msg.chat_id,msg.id,uuu)  
os.execute('rm -rf ./'..Antk.result.translate..'.mp3') 
end
end

 
if text == "نسبه الحب" or text == "نسبه حب" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
Redis:set(LiOn..":"..msg.sender_id.user_id..":lov_Bots"..msg.chat_id,"sendlove")
hggg = '❆︙الان ارسل اسمك واسم الشخص الثاني :'
luatele.sendText(msg_chat_id,msg_id,hggg) 
return false
end
end


if text == "نسبه الغباء" or text == "نسبه الغباء" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
Redis:set(LiOn..":"..msg.sender_id.user_id..":lov_Bottts"..msg.chat_id,"sendlove")
hggg = '❆︙الان ارسل اسم الشخص :'
luatele.sendText(msg_chat_id,msg_id,hggg) 
return false
end
end

if text == "نسبه الذكاء" or text == "نسبه الذكاء" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
Redis:set(LiOn..":"..msg.sender_id.user_id..":lov_Botttuus"..msg.chat_id,"sendlove")
hggg = '❆︙الان ارسل اسم الشخص :'
luatele.sendText(msg_chat_id,msg_id,hggg) 
return false
end
end

if text == "نسبه الكره" or text == "نسبه كره" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
Redis:set(LiOn..":"..msg.sender_id.user_id..":krh_Bots"..msg.chat_id,"sendkrhe")
hggg = '❆︙الان ارسل اسمك واسم الشخص الثاني :'
luatele.sendText(msg_chat_id,msg_id,hggg) 
return false
end
end


if text == "نسبه الرجوله" or text == "نسبه الرجوله" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
Redis:set(LiOn..":"..msg.sender_id.user_id..":rjo_Bots"..msg.chat_id,"sendrjoe")
hggg = '❆︙الان ارسل اسم الشخص :'
luatele.sendText(msg_chat_id,msg_id,hggg) 
return false
end
end

if text == "نسبه الانوثه" or text == "نسبه انوثه" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
Redis:set(LiOn..":"..msg.sender_id.user_id..":ano_Bots"..msg.chat_id,"sendanoe")
hggg = '❆︙الان ارسل اسم الشخص :'
luatele.sendText(msg_chat_id,msg_id,hggg) 
return false
end
end

if text and text:match("^برج (.*)$") and Redis:get(LiOn.."brj_Bots"..msg.chat_id) == "open" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Textbrj = text:match("^برج (.*)$")
gk = https.request('https://apiabs.ml/brg.php?brg='..URL.escape(Textbrj)..'')
br = JSON.decode(gk)
luatele.sendText(msg_chat_id,msg_id, br.ok.hso)
end



if text== "رفع اثول"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end    
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:tahaath"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم رفع العضو اثول الگروب🤪بنجاح\n❆︙تمت إضافته إلى قائمه الثولان😹\n✓️")
elseif text== "تنزيل اثول"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:tahaath"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيل العضو من ثولان الكروب\n❆︙تمت الزاله من قامة الثولان😹\n✓️")
elseif text== "رفع جلب"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:klp"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم رفع المتهم إلى جلب 🐕 بنجاح\n❆︙تمت إضافته إلى قائمه الجلاب😹\n✓️")
elseif text== "رفع مطي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:donke"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم رفع المتهم إلى مطي ??بنجاح\n❆︙تمت إضافته إلى قائمه المطايه😹\n✓️")
elseif text== "تنزيل مطي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:donke"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيل المتهم مطي بنجاح\n❆︙تمت ازالته من قائمه المطايه 🦓😹\n✓️")
elseif text== "رفع بقره"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:bkra"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم رفع المتهم بقره بنجاح\n❆︙الان اصبح بقرة مقدسه 🐄😹\n✓️")
elseif text== "تنزيل بقره"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:bkra"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيل المتهم بقره بنجاح\n❆︙تمت ٳزالته من قائمة البقرات 🐄😺\n✓️")
elseif text== "رفع ملك"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:kink"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهـلا عزيزي\n❆︙تم رفع صديقك ملـ👑ـك بنجاح\n❆︙اصبح ملك الكروب 👨‍🎨😍❗️ \n✓️")
elseif text== "تنزيل ملك"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:kink"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهـلا عزيزي\n❆︙تم تنزيل العضو المهتلف\n❆︙من قائمة ألملـ👑ـوك بنجاح 😹\n✓️")
elseif text== "رفع ملكه"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:Quean"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهـلا عزيزي\n❆︙تم رفع صديقتك ملكـ🥰ــه بنجاح\n❆︙اصبحت ملكة الكروب 💆‍♀😍❗️ \n✓️")
elseif text== "تنزيل ملكه"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:Quean"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهـلا عزيزي\n❆︙تم تنزيل الجكمه🤵‍♀\n❆︙من قائمة ألملكـ👑ـات بنجاح 😹??\n✓️")
elseif text== "تنزيل جلب"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:klp"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي \n❆︙تم تنزيل المتهم جلب 🐶بنجاح\n❆︙تمت إزالته من قائمه الجلاب🐕😹\n✓️")
elseif text== "تنزيل زاحف"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:zahf"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيل المتهم زاحف بنجاح\n❆︙تم ازالته من قائمه الزواحف🐊😹\n✓️")
elseif text== "رفع زاحف"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:zahf"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم رفعه زاحف😹 بنجاح\n❆︙تم اضافته الى قائمه الزواحف🐊😹\n✓️")
elseif text== "رفع صخل"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:sakl"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم رفع المتهم صخل بنجاح\n❆︙الان اصبح صخل الكروب 🐐😹\n✓️")
elseif text== "تنزيل صخل"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:sakl"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيل المتهم صخل بنجاح\n❆︙تمت ٳزالته من قائمة الصخوله🐐😺\n✓️")
elseif text== "رفع بكلبي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:klpe"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم رفع العضو داخل كلبك❤️\n❆︙تمت ترقيته بنجاح 😻\n✓️")
elseif text== "تنزيل من كلبي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then  
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:klpe"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيل من داخل قلبك❤️\n❆︙تمت ازالته من قائمه القلوب😹💔\n✓️")
elseif text== "رفع تاج"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:tagge"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهـلا عزيزي\n❆︙تم رفع صديقك تـ👑ـاج بنجاح  \n❆︙اصبح خط احمر ❗️ \n✓️")
elseif text== "تنزيل تاج"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:tagge"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهـلا عزيزي\n❆︙تم تنزيل العضو المهتلف\n❆︙من قائمة ألتـ👑ـاج بنجاح 😹💔\n✓️")
elseif text== "رفع مرتي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:mrtee"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم رفع العضو مرتك👫 بنجاح\nالآن يمكنكم أخذ راحتكم🤤😉\n✓️")
elseif text== "تنزيل مرتي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:mrtee"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيل الجكمه👩‍⚕️مرتك بنجاح\nالآن انتم مفترقان☹️💔\n✓️")
elseif text== "رفع لوكي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:loke"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم رفعه ضمن اللوكيه👨‍🦯😹\n✓️")
elseif text== "تنزيل لوكي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:loke"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيله من اللوكيه😹\n✓️")
elseif text== "رفع غبي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:stope"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم رفعه بنجاح اصبح غبي الان🧛‍♀️😺\n✓️")
elseif text== "تنزيل غبي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then  
  if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:stope"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيله من الاغبياء👏😹\n✓️")
elseif text== "رفع طلي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:tele"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهلا عزيزي\n❆︙تم رفع المتهم طلي الكروب\n❆︙اطلع برا ابو البعرور الوصخ 🤢😂")
elseif text== "تنزيل طلي"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:tele"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيله من الطليان👏😹\n✓️")
elseif text== "رفع طامس"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(LiOn.."mero:tams"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهلا عزيزي\n❆︙تم رفع المتهم طامس الكروب")
elseif text== "تنزيل طامس"  and msg.reply_to_message_id and not Redis:get(LiOn.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(LiOn.."mero:tams"..msg.chat_id, Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اهــلا عزيزي\n❆︙تم تنزيله من الطامسين👏😹\n✓️")
elseif text == ("الملوك") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:kink"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد ملوك") end
t = "\n• قائمة الملوك\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("البقرات") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:bkra"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد بقرات") end
t = "\n• قائمة البقرات\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الملكات") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:Quean"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد ملكات") end
t = "\n• قائمة الملكات\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("مسح الملوك") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."mero:kink"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id,'تم مسح الملوك ')
elseif text == ("مسح البقرات") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."mero:bkra"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id,'تم مسح البقرات ')
elseif text == ("مسح الملكات")  then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."mero:Quean"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id,'تم مسح الملكات ')
elseif text == ("الثولان") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:tahaath"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد ثولان") end
t = "\n• قائمة الثولان\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("مسح الطليان")  then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."mero:tele"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id,'تم مسح الطليان ')
elseif text == ("الطليان") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:tele"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد طليان") end
t = "\n• قائمة الطليان\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("مسح الطامسين")  then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."mero:tams"..msg.chat_id)
luatele.sendText(msg_chat_id,msg_id,'تم مسح الطامسين ')
elseif text == ("الطامسين") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:tams"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد طامسين") end
t = "\n• قائمة الطامسين\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الطلاك") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:taha1"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد مطلقين") end
t = "\n• قائمة الطلاك\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '[@'..UserInfo.username..']'
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الجلاب") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:klp"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد جلاب") end
t = "\n• قائمة الكلاب\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("المطايه") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:donke"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد مطايه") end
t = "\n• قائمة المطايه\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الزواحف") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:zahf"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد زواحف") end
t = "\n• قائمة الزواحف\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الصخول") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:sakl"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد صخول") end
t = "\n• قائمة الصخول\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("قائمه كلبي") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:klpe"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد اعضاء بكلبي") end
t = "\n• قائمة كلبي\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("قائمه التاج") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:tagge"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد قائمه تاج") end
t = "\n• قائمة التاج\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الزوجات") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:mrtee"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد زوجات") end
t = "\n• قائمة الزوجات\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("اللوكيه") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:loke"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد لوكيه") end
t = "\n• قائمة اللوكيه\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الاغبياء") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:stope"..msg.chat_id)
if #list == 0 then return luatele.sendText(msg_chat_id,msg_id, "• لا يوجد اغبياء") end
t = "\n• قائمة الاغبياء\n━━━━━━━━\n"
for k,v in pairs(list) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.."~ : "..username.."\n"
if #list == k then
return luatele.sendText(msg_chat_id,msg_id, t)
end
end
end

if text == "زواج" and msg.reply_to_message_id ~= 0 and Redis:get(LiOn..'LiOn:Alzwag:Chat'..msg.chat_id)  then
local InfoReply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local zogte = Redis:get(LiOn.."zogte"..msg.chat_id..InfoReply.sender_id.user_id)
if zogte then
local UserInfo = luatele.getUser(zogte)
local Teext = "- ["..UserInfo.first_name.."](tg://user?id="..zogte..")"
return luatele.sendText(msg.chat_id,msg.id,"❆︙العضو لديه زوج : "..Teext,"md")
end
local UserInfo = luatele.getUser(InfoReply.sender_id.user_id)
local Teext = "- ["..UserInfo.first_name.."](tg://user?id="..InfoReply.sender_id.user_id..")"
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="قبلت الزواج",data=InfoReply.sender_id.user_id.."/idomery/"..msg.sender_id.user_id},{text="لا اقبل الزواج",data=InfoReply.sender_id.user_id.."/idonotmery/"..msg.sender_id.user_id}
},
}
}
return luatele.sendText(msg.chat_id,msg.id,"❆︙عزيزي : "..Teext..'\n❆︙يوجد عرض زواج مقدم لك',"md",false, false, false, false, reply_markup)
end
if text == "طلاق" and msg.reply_to_message_id ~= 0 and Redis:get(LiOn..'LiOn:Alzwag:Chat'..msg.chat_id)  then
local InfoReply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local zogte = Redis:get(LiOn.."zogte"..msg.chat_id..InfoReply.sender_id.user_id)
if not zogte then
return luatele.sendText(msg.chat_id,msg.id,"❆︙العضو ليس لديه زوج","md")
end
Redis:del(LiOn.."zogte"..msg.chat_id..InfoReply.sender_id.user_id,msg.sender_id.user_id)
Redis:del(LiOn.."zogte"..msg.chat_id..msg.sender_id.user_id,InfoReply.sender_id.user_id)
Redis:srem(LiOn.."zogatall"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(LiOn.."zogatall"..msg.chat_id,InfoReply.sender_id.user_id)
return luatele.sendText(msg.chat_id,msg.id,"❆︙تم الطلاق منه","md")
end
if text == "زوجي" and Redis:get(LiOn..'LiOn:Alzwag:Chat'..msg.chat_id)  then
local zogte = Redis:get(LiOn.."zogte"..msg.chat_id..msg.sender_id.user_id)
if zogte then
local UserInfo = luatele.getUser(zogte)
local Teext = "- ["..UserInfo.first_name.."](tg://user?id="..zogte..")"
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="طلاق الزوج",data=zogte.."/tlakkk/"..msg.sender_id.user_id}
},
}
}
return luatele.sendText(msg.chat_id,msg.id,"❆︙زوجك : "..Teext,"md",false, false, false, false, reply_markup)
else
return luatele.sendText(msg.chat_id,msg.id,"❆︙ليس لديك زوج","md")
end
end
if text == "المتزوجين" then
local list = Redis:smembers(LiOn.."zogatall"..msg.chat_id)
if #list == 0 then
return luatele.sendText(msg.chat_id,msg.id,"❆︙لا يوجد متزوجين","md",true)  
end
local Member = "\n*❆︙قائمه المتزوجين  \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*\n"
for k,v in pairs(list) do
local zogte = Redis:get(LiOn.."zogte"..msg.chat_id..v)
local UserInfo = luatele.getUser(v)
local UserInfoo = luatele.getUser(zogte)
Member = Member.."*"..k..": *["..UserInfo.first_name.."](tg://user?id="..v..") ~ or ~ ["..UserInfoo.first_name.."](tg://user?id="..zogte..")\n"
end
return luatele.sendText(msg.chat_id,msg.id,Member,"md")
end
if text == "مسح المتزوجين" then
local list = Redis:smembers(LiOn.."zogatall"..msg.chat_id)
if #list == 0 then
return luatele.sendText(msg.chat_id,msg.id,"❆︙لا يوجد ازواج","md",true)  
end
for k,v in pairs(list) do
Redis:del(LiOn.."zogte"..msg.chat_id..v)
end
Redis:del(LiOn.."zogatall"..msg.chat_id)
return luatele.sendText(msg.chat_id,msg.id,"❆︙تم مسح المتزوجين","md",true)  
end

if text == "ثنائي اليوم" and Redis:get(LiOn..'LiOn:Althnaee:Chat'..msg.chat_id)  then
local Info_Members = luatele.searchChatMembers(msg.chat_id, "*", 200)
local List_Members = Info_Members.members
local NumRand1 = math.random(1, #List_Members); 
local NumRand2 = math.random(1, #List_Members); 
local user1 = List_Members[NumRand1].member_id.user_id
local user2 = List_Members[NumRand2].member_id.user_id
local UserInfo = luatele.getUser(user1)
local UserInfoo = luatele.getUser(user2)
local listTow = "❆︙ثنائي اليوم : \n ["..UserInfo.first_name.."](tg://user?id="..UserInfo.id..") ~ ["..UserInfoo.first_name.."](tg://user?id="..UserInfoo.id..")\n"
return luatele.sendText(msg.chat_id,msg.id,listTow,"md",true)  
end




if text == 'الاصدار' then
luatele.sendText(msg_chat_id,msg_id,'*❆︙mero source 64 : 8.4.6*',"md",true)  
end
if text == "الساعه" or text == "الوقت" then
local ramsesj20 = "\n الساعه الان : "..os.date("%I:%M%p")
luatele.sendText(msg_chat_id,msg_id,ramsesj20)
end

if text == "التاريخ" then
local ramsesj20 =  "\n التاريخ : "..os.date("%Y/%m/%d")
luatele.sendText(msg_chat_id,msg_id,ramsesj20)
end
if text == 'مسح صوت' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:set(LiOn.."mero:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'startdel')
return luatele.sendText(msg_chat_id,msg_id,'❆︙ ارسل اسم الصوتيه',"md")
end
if text== 'اضف صوت' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:set(LiOn.."mero:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'start')
return luatele.sendText(msg_chat_id,msg_id, '❆︙ ارسل اسم الصوت الان ...',"md")
end
if text== ("الصوتيات") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:text:Games:Bot"..msg.chat_id)
if #list == 0 then
luatele.sendText(msg_chat_id,msg_id, "❆︙لا توجد صوتيات")
return false
end
message = '❆︙قائمه الصوتيات :\n     للتشغيل اختر اسم من الاتي:\nـــــــــــــــــــــــــــــــــــــــــــــــــــــــ\n'
for k,v in pairs(list) do
message = message..""..k.."- ("..v..")\n"
end
luatele.sendText(msg_chat_id,msg_id,message)
end
if text== ("مسح الصوتيات") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."mero:text:Games:Bot"..msg.chat_id)
if #list == 0 then
luatele.sendText(msg_chat_id,msg_id, "❆︙لا توجد صوتيات عامه")
return false
end
for k,v in pairs(list) do
Redis:srem(LiOn.."mero:text:Games:Bot"..msg.chat_id,v)
Redis:del(LiOn.."mero:audio:Games"..msg.chat_id..v)
end
luatele.sendText(msg_chat_id,msg_id, "❆︙تم مسح جميع الصوتيات")
end


if text == 'مسح صوت عام' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."mero:All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'startdel')
luatele.sendText(msg_chat_id,msg_id, '❆︙ ارسل اسم الصوتيه',"md")
end
if text== 'اضف صوت عام' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."mero:All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'start')
luatele.sendText(msg_chat_id,msg_id, '❆︙ ارسل اسم الصوت الان ...',"md")
end
if text== ("الصوتيات العامه") or text== ("الاغاني") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."mero:All:text:Games:Bot")
if #list == 0 then
luatele.sendText(msg_chat_id,msg_id, "❆︙لا توجد صوتيات عامه")
return false
end
message = '❆︙قائمه الصوتيات العامه:\n     للتشغيل اختر اسم من الاتي:\nـــــــــــــــــــــــــــــــــــــــــــــــــــــــ\n'
for k,v in pairs(list) do
message = message..""..k.."- ("..v..")\n"
end
luatele.sendText(msg_chat_id,msg_id,message)
end
if text== ("مسح الصوتيات العامه") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."mero:All:text:Games:Bot")
if #list == 0 then
luatele.sendText(msg_chat_id,msg_id, "❆︙لا توجد صوتيات")
return false
end
for k,v in pairs(list) do
Redis:srem(LiOn.."mero:All:text:Games:Bot",v)
Redis:del(LiOn.."mero:All:audio:Games"..v)
end
luatele.sendText(msg_chat_id,msg_id, "❆︙تم مسح جميع الصوتيات")
end



if text and text:match('^كتم عام @(%S+)$') then
local UserName = text:match('^كتم عام @(%S+)$')
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end

local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if Controllerbanall(msg_chat_id,UserId_Info.id) == true then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:KtmAll:Groups",UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ❆︙تم كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:KtmAll:Groups",UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ❆︙تم كتمه عام من المجموعات ").Reply,"md",true)  
end
end
if text and text:match('^الغاء كتم عام @(%S+)$') then
local UserName = text:match('^الغاء كتم عام @(%S+)$')
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end

local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:KtmAll:Groups",UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ❆︙تم الغاء كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:KtmAll:Groups",UserId_Info.id) 
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ❆︙تم الغاء كتمه عام من المجموعات  ").Reply,"md",true)  
end
end

if text == ('كتم عام') and msg.reply_to_message_id ~= 0 then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end

local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if Controllerbanall(msg_chat_id,Message_Reply.sender_id.user_id) == true then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:KtmAll:Groups",Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ❆︙تم كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:KtmAll:Groups",Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ❆︙تم كتمه عام من المجموعات ").Reply,"md",true)  
end
end
if text == ('الغاء كتم عام') and msg.reply_to_message_id ~= 0 then
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end

local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:KtmAll:Groups",Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ❆︙تم الغاء كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:KtmAll:Groups",Message_Reply.sender_id.user_id) 
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ❆︙تم الغاء كتمه عام من المجموعات  ").Reply,"md",true)  
end
end
if text and text:match('^كتم عام (%d+)$') then
local UserId = text:match('^كتم عام (%d+)$')
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end

local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if Controllerbanall(msg_chat_id,UserId) == true then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:KtmAll:Groups",UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId," ❆︙تم كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:KtmAll:Groups",UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId," ❆︙تم كتمه عام من المجموعات ").Reply,"md",true)  
end
end
if text and text:match('^الغاء كتم عام (%d+)$') then
local UserId = text:match('^الغاء كتم عام (%d+)$')
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end

local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:KtmAll:Groups",UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId," ❆︙تم الغاء كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:KtmAll:Groups",UserId) 
luatele.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId," ❆︙تم الغاء كتمه عام من المجموعات  ").Reply,"md",true)  
end
end

if text == 'مسح المكتومين عام' then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end

local Info_Members = Redis:smembers(LiOn.."LiOn:KtmAll:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id," ❆︙لا يوجد مكتومين عام حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:KtmAll:Groups") 
return luatele.sendText(msg_chat_id,msg_id,"* ❆︙تم مسح {"..#Info_Members.."} من المكتومين عام *","md",true)
end

if text == 'المكتومين عام' or text == 'قائمه المكتومين عام' then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end

local Info_Members = Redis:smembers(LiOn.."LiOn:KtmAll:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id," ❆︙لا يوجد مكتومين عام حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المكتومين عام  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المكتومين عام', data = msg.sender_id.user_id..'/KtmAll'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end

if text and text:match('^رفع مطور اساسي @(%S+)$') then
local UserName = text:match('^رفع مطور اساسي @(%S+)$')
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(147982809) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if Redis:sismember(LiOn.."LiOn:ControlAll:Groups",UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ❆︙تم رفعه مطور اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:ControlAll:Groups",UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ❆︙تم رفعه مطور اساسي ").Reply,"md",true)  
end
end
if text and text:match('^تنزيل مطور اساسي @(%S+)$') then
local UserName = text:match('^تنزيل مطور اساسي @(%S+)$')
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(147982809) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:ControlAll:Groups",UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ❆︙تم تنزيله من المطورين الاساسيين مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:ControlAll:Groups",UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ❆︙تم تنزيله من المطوريين الاساسسين").Reply,"md",true)  
end
end
if text == ('رفع مطور اساسي') and msg.reply_to_message_id ~= 0 then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(147982809) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if Redis:sismember(LiOn.."LiOn:ControlAll:Groups",Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ❆︙تم رفعه مطور اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:ControlAll:Groups",Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ❆︙تم رفعه مطور اساسي ").Reply,"md",true)  
end
end
if text == ('تنزيل مطور اساسي') and msg.reply_to_message_id ~= 0 then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(147982809) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:ControlAll:Groups",Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ❆︙تم تنزيله من المطورين الاساسسين مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:ControlAll:Groups",Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ❆︙تم تنزيله من المطوريين الاساسسين").Reply,"md",true)  
end
end
if text and text:match('^رفع مطور اساسي (%d+)$') then
local UserId = text:match('^رفع مطور اساسي (%d+)$')
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(147982809) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if Redis:sismember(LiOn.."LiOn:ControlAll:Groups",UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId," ❆︙تم رفعه مطور اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:ControlAll:Groups",UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId," ❆︙تم رفعه مطور اساسي ").Reply,"md",true)  
end
end
if text and text:match('^تنزيل مطور اساسي (%d+)$') then
local UserId = text:match('^تنزيل مطور اساسي (%d+)$')
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(147982809) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:ControlAll:Groups",UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId," ❆︙تم تنزيله من المطوريين الاساسسين مسبقا").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:ControlAll:Groups",UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId," ❆︙تم تنزيله من المطوريين الاساسسين").Reply,"md",true)  
end
end
if text == 'مسح المطورين الاساسيين' then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(147982809) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local Info_Members = Redis:smembers(LiOn.."LiOn:ControlAll:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id," ❆︙لا يوجد مطورين اساسيين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:ControlAll:Groups") 
return luatele.sendText(msg_chat_id,msg_id,"* ❆︙تم مسح {"..#Info_Members.."} من المطورين الاساسيين *","md",true)
end
if text == 'المطورين الاساسيين' then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(147982809) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local Info_Members = Redis:smembers(LiOn.."LiOn:ControlAll:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id," ❆︙لا يوجد مطورين اساسيين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المطورين الاساسيين  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md', true)
end



if text == 'مطور السورس' then  
local UserId_Info = luatele.searchPublicChat("u24uu")
if UserId_Info.id then
local UserInfo = luatele.getUser(UserId_Info.id)
local InfoUser = luatele.getUserFullInfo(UserId_Info.id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = ''
end
if UserInfo.username then
UserInfousername = '[@'..UserInfo.username..']'
else
UserInfousername = 'لا يوجد'
end
local photo = luatele.getUserProfilePhotos(UserId_Info.id)
if photo.total_count > 0 then
local TestText = "- معلومات مطور السورس : \n\n*name:* ["..UserInfo.first_name.."](tg://user?id="..UserInfo.id..")\n\n*user :* "..UserInfousername.."\n\n *Bio:* ["..Bio.."]"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = '• LION TEAM . ', url='https://t.me/ul_39'},
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(TestText)..'&photo='..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id..'&reply_to_message_id='..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
else
local TestText = "- معلومات المطور الاساسي : \n\n*name:* ["..UserInfo.first_name.."](tg://user?id="..UserInfo.id..")\n\n*user :* "..UserInfousername.."\n\n *Bio:* ["..Bio.."]"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = '• LION TEAM . ', url='https://t.me/ul_39'},
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TestText).."&reply_to_message_id="..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
end
end
end

if text == 'المطور' or text == 'مطور البوت' then   
local UserInfo = luatele.getUser(Sudo_Id) 
local InfoUser = luatele.getUserFullInfo(Sudo_Id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = ''
end
if UserInfo.username then
UserInfousername = '[@'..UserInfo.username..']'
else
UserInfousername = 'لا يوجد'
end
local photo = luatele.getUserProfilePhotos(Sudo_Id)
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = (Redis:get(LiOn..'LiOn:Channel:Join:Name') or "قناة المطور"), url = 't.me/'..(Redis:get(LiOn..'LiOn:Channel:Join') or "ul_39") },
},

}
if photo.total_count > 0 then
local TestText = (Redis:get(LiOn..'LiOn:Texting:DevLiOn') or "- معلومات المطور الاساسي : \n\n*name:* ["..UserInfo.first_name.."](tg://user?id="..UserInfo.id..")\n\n*user :* "..UserInfousername.."\n\n *Bio:* ["..Bio.."]")
local msg_id = msg.id/2097152/0.5 
https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(TestText)..'&photo='..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id..'&reply_to_message_id='..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboardd))
else
local TestText = (Redis:get(LiOn..'LiOn:Texting:DevLiOn') or "- معلومات المطور الاساسي : \n\n*name:* ["..UserInfo.first_name.."](tg://user?id="..UserInfo.id..")\n\n*user :* "..UserInfousername.."\n\n *Bio:* ["..Bio.."]")
local msg_id = msg.id/2097152/0.5 
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TestText).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboardd))
end
if Redis:get(LiOn.."Status:tagdev") then
local Get_Chat = luatele.getChat(msg.chat_id)
local Info_Chats = luatele.getSupergroupFullInfo(msg.chat_id)
local InfoMethod = luatele.getUser(msg.sender_id.user_id)
if InfoMethod.username ~= "" then
UsersName = "[@"..InfoMethod.username.."]"
else
UsersName = "لا يوجد"
end
local infouserd = "*❆︙هنالك شخص ما بحاجه للمساعده..\n"..
"\n❆︙معرف الشخص ⇜❲ "..UsersName..""..
" ❳\n❆︙ايدي الشخص ⇜❲ "..msg.sender_id.user_id..
" ❳\n❆︙معلومات المجموعه"..
"\n❆︙اسم المجموعه⇜❲ "..Get_Chat.title..
" ❳\n❆︙ايدي المجموعه ⇜❲* `"..msg.chat_id..
"` *❳\n❆︙رابط المجموعه ⇟\n❲* ["..Info_Chats.invite_link.invite_link.."] ❳"
return luatele.sendText(Sudo_Id,0,infouserd,"md",true)
end
end

if text == ("مسح الردود المتعدده") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."botss:merox:List:Rd:Sudo"..msg.chat_id)
for k,v in pairs(list) do  
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:Text"..v..msg.chat_id) 
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:Text1"..v..msg.chat_id) 
Redis:del(LiOn.."botss:merox:Add:Rd:Sudo:Text2"..v..msg.chat_id)   
Redis:del(LiOn.."botss:merox:List:Rd:Sudo"..msg.chat_id)
end
luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم مسح كل الردود المتعدده")
end
if text == ("الردود المتعدده") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."botss:merox:List:Rd:Sudo"..msg.chat_id)
text = "\nقائمة الردود المتعدده  \n━━━━━━━━\n"
for k,v in pairs(list) do
db = "رساله "
text = text..""..k.." => {"..v.."} => {"..db.."}\n"
end
if #list == 0 then
text = "\n❆︙لا توجد ردود متعدده"
end
luatele.sendText(msg_chat_id,msg_id,""..text.."")
end
if text == "اضف رد متعدد" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:set(LiOn.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,true)
return luatele.sendText(msg_chat_id,msg_id, "\n❆︙ارسل اسم الرد المتعدد الان ")
end
if text == "مسح رد متعدد" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:set(LiOn.."botss:merox:Set:On"..msg.sender_id.user_id..":"..msg.chat_id,true)
return luatele.sendText(msg_chat_id,msg_id, "\n❆︙ارسل اسم الرد المتعدد لمسحه من المجموعه ")
end

if text and text:match("^(.*)$") then
if Redis:get(LiOn.."grand11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
 luatele.sendText(msg_chat_id,msg_id, '\nارسل لي الكلمه الان ')
Redis:set(LiOn.."grand11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id, "true1")
Redis:set(LiOn.."grand11:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id, text)
Redis:sadd(LiOn.."grand11:List:Rd:Sudo", text)
return false end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."grand11:Set:On"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
 luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح الرد من الردود المتعدده عام")
Redis:del(LiOn..'grand11:Add:Rd:Sudo:Text'..text)
Redis:del(LiOn..'grand11:Add:Rd:Sudo:Text1'..text)
Redis:del(LiOn..'grand11:Add:Rd:Sudo:Text2'..text)
Redis:del(LiOn.."grand11:Set:On"..msg.sender_id.user_id..":"..msg.chat_id)
Redis:srem(LiOn.."grand11:List:Rd:Sudo", text)
return false
end
end
if text == ("مسح الردود المتعدده عام") then
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."grand11:List:Rd:Sudo")
for k,v in pairs(list) do  
Redis:del(LiOn.."grand11:Add:Rd:Sudo:Text"..v) 
Redis:del(LiOn.."grand11:Add:Rd:Sudo:Text1"..v) 
Redis:del(LiOn.."grand11:Add:Rd:Sudo:Text2"..v)   
Redis:del(LiOn.."grand11:List:Rd:Sudo")
end
 luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح الردود المتعدده عام")
end
if text == ("الردود المتعدده عام") then
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."grand11:List:Rd:Sudo")
text = "\n❆︙قائمة الردود المتعدده عام \n━━━━━━━━\n"
for k,v in pairs(list) do
db = "رساله "
text = text..""..k.." => {"..v.."} => {"..db.."}\n"
end
if #list == 0 then
text = "❆︙لا توجد ردود متعدده عام"
end
 luatele.sendText(msg_chat_id,msg_id,""..text.."")
end
if text == "اضف رد عام متعدد" then
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."grand11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,true)
return  luatele.sendText(msg_chat_id,msg_id,"ارسل الرد الذي اريد اضافته")
end
if text == "مسح رد عام متعدد" then
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."grand11:Set:On"..msg.sender_id.user_id..":"..msg.chat_id,true)
return  luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل الان اسم الرد العام المتعدد لمسحه ")
end
if text then  
local test = Redis:get(LiOn.."grand11:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(LiOn.."grand11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "true1" then
Redis:set(LiOn.."grand11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd1')
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."grand11:Add:Rd:Sudo:Text"..test, text)  
end  
 luatele.sendText(msg_chat_id,msg_id,"تم حفظ الرد الاول ارسل الرد الثاني")
return false  
end  
end
if text then  
local test = Redis:get(LiOn.."grand11:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(LiOn.."grand11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "rd1" then
Redis:set(LiOn.."grand11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd2')
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."grand11:Add:Rd:Sudo:Text1"..test, text)  
end  
 luatele.sendText(msg_chat_id,msg_id,"تم حفظ الرد الثاني ارسل الرد الثالث")
return false  
end  
end
if text then  
local test = Redis:get(LiOn.."grand11:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(LiOn.."grand11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "rd2" then
Redis:set(LiOn.."grand11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd3')
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."grand11:Add:Rd:Sudo:Text2"..test, text)  
end  
 luatele.sendText(msg_chat_id,msg_id,"تم حفظ الرد")
return false  
end  
end
if text and not Redis:get(LiOn..'lock_repleyadded'..msg.chat_id) then
local Text = Redis:get(LiOn.."grand11:Add:Rd:Sudo:Text"..text)   
local Text1 = Redis:get(LiOn.."grand11:Add:Rd:Sudo:Text1"..text)   
local Text2 = Redis:get(LiOn.."grand11:Add:Rd:Sudo:Text2"..text)   
if Text or Text1 or Text2 then 
local texting = {
Text,
Text1,
Text2
}
Textes = math.random(#texting)
 luatele.sendText(msg_chat_id,msg_id,texting[Textes])
end
end

if text == 'السيرفر' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
luatele.sendText(msg_chat_id,msg_id, io.popen([[
linux_version=`lsb_release -ds`
memUsedPrc=`free -m | awk 'NR==2{printf "%sMB/%sMB {%.2f%}\n", $3,$2,$3*100/$2 }'`
HardDisk=`df -lh | awk '{if ($6 == "/") { print $3"/"$2" ~ {"$5"}" }}'`
CPUPer=`top -b -n1 | grep "Cpu(s)" | awk '{print $2 + $4}'`
uptime=`uptime | awk -F'( |,|:)+' '{if ($7=="min") m=$6; else {if ($7~/^day/) {d=$6;h=$8;m=$9} else {h=$6;m=$7}}} {print d+0,"days,",h+0,"hours,",m+0,"minutes."}'`
echo '❆︙ •⊱ { نظام التشغيل } ⊰•\n*»» '"$linux_version"'*' 
echo '*------------------------------\n*❆︙ •⊱ { الذاكره العشوائيه } ⊰•\n*»» '"$memUsedPrc"'*'
echo '*------------------------------\n*❆︙ •⊱ { وحـده الـتـخـزيـن } ⊰•\n*»» '"$HardDisk"'*'
echo '*------------------------------\n*❆︙ •⊱ { الـمــعــالــج } ⊰•\n*»» '"`grep -c processor /proc/cpuinfo`""Core ~ {$CPUPer%} "'*'
echo '*------------------------------\n*❆︙ •⊱ { الــدخــول } ⊰•\n*»» '`whoami`'*'
echo '*------------------------------\n*❆︙ •⊱ { مـده تـشغيـل الـسـيـرفـر } ⊰•  \n*»» '"$uptime"'*'
]]):read('*all'),"md")
end

if text == 'صلاحياتي' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
return luatele.sendText(msg_chat_id,msg_id,"❆︙الصلاحيات : مالك المجموعه","md",true) 
elseif (StatusMember == "chatMemberStatusAdministrator") then
StatusMemberChat = 'مشرف المجموعه'
else
return luatele.sendText(msg_chat_id,msg_id,"❆︙الصلاحيات : عضو في المجموعه" ,"md",true) 
end
if StatusMember == "chatMemberStatusAdministrator" then 
local GetMemberStatus = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status
if GetMemberStatus.can_change_info then
change_info = '❬ ✔️ ❭' else change_info = '❬ ❌ ❭'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '❬ ✔️ ❭' else delete_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_invite_users then
invite_users = '❬ ✔️ ❭' else invite_users = '❬ ❌ ❭'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '❬ ✔️ ❭' else pin_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '❬ ✔️ ❭' else restrict_members = '❬ ❌ ❭'
end
if GetMemberStatus.can_promote_members then
promote = '❬ ✔️ ❭' else promote = '❬ ❌ ❭'
end
local PermissionsUserr = '*\n❆︙صلاحيات المستخدم :\n— — — — — — — — —'..'\n❆︙تغيير المعلومات : '..change_info..'\n❆︙تثبيت الرسائل : '..pin_messages..'\n❆︙اضافه مستخدمين : '..invite_users..'\n❆︙مسح الرسائل : '..delete_messages..'\n❆︙حظر المستخدمين : '..restrict_members..'\n❆︙اضافه المشرفين : '..promote..'\n\n*'
return luatele.sendText(msg_chat_id,msg_id,"❆︙الصلاحيات : مشرف المجموعه"..(PermissionsUserr or '') ,"md",true) 
end
end
if text == 'صلاحياته' and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local StatusMember = luatele.getChatMember(msg_chat_id,Message_Reply.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
return luatele.sendText(msg_chat_id,msg_id,"❆︙الصلاحيات : مالك المجموعه","md",true) 
elseif (StatusMember == "chatMemberStatusAdministrator") then
StatusMemberChat = 'مشرف المجموعه'
else
return luatele.sendText(msg_chat_id,msg_id,"❆︙الصلاحيات : عضو في المجموعه" ,"md",true) 
end
if StatusMember == "chatMemberStatusAdministrator" then 
local GetMemberStatus = luatele.getChatMember(msg_chat_id,Message_Reply.sender_id.user_id).status
if GetMemberStatus.can_change_info then
change_info = '❬ ✔️ ❭' else change_info = '❬ ❌ ❭'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '❬ ✔️ ❭' else delete_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_invite_users then
invite_users = '❬ ✔️ ❭' else invite_users = '❬ ❌ ❭'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '❬ ✔️ ❭' else pin_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '❬ ✔️ ❭' else restrict_members = '❬ ❌ ❭'
end
if GetMemberStatus.can_promote_members then
promote = '❬ ✔️ ❭' else promote = '❬ ❌ ❭'
end
local PermissionsUserr = '*\n❆︙صلاحيات المستخدم :\n— — — — — — — — —'..'\n❆︙تغيير المعلومات : '..change_info..'\n❆︙تثبيت الرسائل : '..pin_messages..'\n❆︙اضافه مستخدمين : '..invite_users..'\n❆︙مسح الرسائل : '..delete_messages..'\n❆︙حظر المستخدمين : '..restrict_members..'\n❆︙اضافه المشرفين : '..promote..'\n\n*'
return luatele.sendText(msg_chat_id,msg_id,"❆︙الصلاحيات : مشرف المجموعه"..(PermissionsUserr or '') ,"md",true) 
end
end


if text and text:match('^صلاحياته @(%S+)$') then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserName = text:match('^صلاحياته @(%S+)$') 
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local StatusMember = luatele.getChatMember(msg_chat_id,UserId_Info.id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
return luatele.sendText(msg_chat_id,msg_id,"❆︙الصلاحيات : مالك المجموعه","md",true) 
elseif (StatusMember == "chatMemberStatusAdministrator") then
StatusMemberChat = 'مشرف المجموعه'
else
return luatele.sendText(msg_chat_id,msg_id,"❆︙الصلاحيات : عضو في المجموعه" ,"md",true) 
end
if StatusMember == "chatMemberStatusAdministrator" then 
local GetMemberStatus = luatele.getChatMember(msg_chat_id,UserId_Info.id).status
if GetMemberStatus.can_change_info then
change_info = '❬ ✔️ ❭' else change_info = '❬ ❌ ❭'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '❬ ✔️ ❭' else delete_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_invite_users then
invite_users = '❬ ✔️ ❭' else invite_users = '❬ ❌ ❭'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '❬ ✔️ ❭' else pin_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '❬ ✔️ ❭' else restrict_members = '❬ ❌ ❭'
end
if GetMemberStatus.can_promote_members then
promote = '❬ ✔️ ❭' else promote = '❬ ❌ ❭'
end
local PermissionsUserr = '*\n❆︙صلاحيات المستخدم :\n— — — — — — — — —'..'\n❆︙تغيير المعلومات : '..change_info..'\n❆︙تثبيت الرسائل : '..pin_messages..'\n❆︙اضافه مستخدمين : '..invite_users..'\n❆︙مسح الرسائل : '..delete_messages..'\n❆︙حظر المستخدمين : '..restrict_members..'\n❆︙اضافه المشرفين : '..promote..'\n\n*'
return luatele.sendText(msg_chat_id,msg_id,"❆︙الصلاحيات : مشرف المجموعه"..(PermissionsUserr or '') ,"md",true) 
end
end
if text and text:match('^تفاعله @(%S+)$') then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserName = text:match('^تفاعله @(%S+)$') 
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
TotalMsg = Redis:get(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..UserId_Info.id) or 0
TotalMsgT = Total_message(TotalMsg) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تفاعله : "..TotalMsgT, "md")
end
if text == 'تفاعله' and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
TotalMsg = Redis:get(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..Message_Reply.sender_id.user_id) or 0
TotalMsgT = Total_message(TotalMsg) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تفاعله : "..TotalMsgT, "md")
end
if text == 'نبذه' and not Redis:get(LiOn.."LiOn:biousers"..msg.chat_id) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- ذكر', data = msg.sender_id.user_id..'/bioold'},{text = '- انثى', data = msg.sender_id.user_id..'/biobnt'},
},
}
}
return luatele.sendText(msg_chat_id, msg_id, '❆︙اختر نبذه حسب جنسك ', 'md', false, false, false, false, reply_markup)
end

if text == 'معرفي' then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
if UserInfo.username then
UserInfousername = '@'..UserInfo.username..''
else
UserInfousername = 'لا يوجد'
end
return luatele.sendText(msg_chat_id,msg_id,'\n❆︙معرفك : *❪'..UserInfousername..'❫*', "md")
end

if text == 'اسمي' and not Redis:get(LiOn..'idnotmemname'..msg.chat_id)  then
local UserInfo = luatele.getUser(msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,'\n❆︙اسمك : *❪'..FlterBio(UserInfo.first_name)..'❫*', "md")
end
if text and text:match('^الرتبه @(%S+)$') then
local UserName = text:match('^الرتبه @(%S+)$') 
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local RinkBot = Controller(msg_chat_id,UserId_Info.id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙الرتبه : "..RinkBot, "md")
end
if text == 'الرتبه' and msg.reply_to_message_id ~= 0 then
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local RinkBot = Controller(msg_chat_id,Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙الرتبه : "..RinkBot, "md")
end
if text == 'جهاته' and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
luatele.sendText(msg_chat_id,msg_id,'❆︙عدد جهاته المضافه هنا *~ '..(Redis:get(LiOn.."LiOn:Num:Add:Memp"..msg.chat_id..":"..Message_Reply.sender_id.user_id) or 0)..'*',"md",true)  
end
if text and text:match('^جهاته @(%S+)$') then
local UserName = text:match('^جهاته @(%S+)$') 
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
luatele.sendText(msg_chat_id,msg_id,'❆︙عدد جهاته المضافه هنا *~ '..(Redis:get(LiOn.."LiOn:Num:Add:Memp"..msg.chat_id..":"..UserId_Info.id) or 0)..'*',"md",true)  
end
if text == "زخرفه" and not Redis:get(LiOn..'zhrfa'..msg.chat_id)  then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- عربي', data = msg.sender_id.user_id..'/Zhrfaar'},{text = '- English', data = msg.sender_id.user_id..'/Zhrfaen'},
},
}
}
return luatele.sendText(msg_chat_id, msg_id, '❆︙اختر نوع الزخرفه \n- En ~ انكلش \n- Ar ~ عربي', 'md', false, false, false, false, reply_markup)
end
if text == 'بايو' and not Redis:get(LiOn..'idnotmembio'..msg.chat_id)  then
local InfoUser = luatele.getUserFullInfo(msg.sender_id.user_id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = 'لا يوجد'
end

luatele.sendText(msg_chat_id, msg_id, '❆︙البايو : ['..FlterBio(Bio)..']', 'md')
end

if text == "ايدي" and msg.reply_to_message_id == 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn.."LiOn:Status:Id"..msg_chat_id) then
return false
end
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local InfoUser = luatele.getUserFullInfo(msg.sender_id.user_id)
if InfoUser.bio then
Bio = FlterBio(InfoUser.bio)
else
Bio = 'لا يوجد'
end
local nameuser = FlterBio(UserInfo.first_name)
local photo = luatele.getUserProfilePhotos(msg.sender_id.user_id)
local UserId = msg.sender_id.user_id
local RinkBot = msg.Name_Controller
local TotalMsg = Redis:get(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalPhoto = photo.total_count or 0
local TotalEdit = Redis:get(LiOn..'LiOn:Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local TotalMsgT = Total_message(TotalMsg) 
local NumberGames = Redis:get(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id) or 0
local NumAdd = Redis:get(LiOn.."LiOn:Num:Add:Memp"..msg.chat_id..":"..msg.sender_id.user_id) or 0
local Texting = {'يْأُحٌلَوِ مِنًيْنً أُلَلَھَہّ جُأُبّڳ🙈❤️','صہٰـــــــآكہٰ عمہٰــــــيٰ😉🔥₎','ﯾھَہّــــــﻟﺂ ﺑﺂﻟﻋﺂﭬﯾــــھَہّ😍🥰','گـﻣــړُ ﻋﻟـﮯ ﻋﻧﺂﮃھَہّــمہٰ😍🙈','خہلينٰہٰٖــــي احہبّــــكُہ🙈❤️','تہحبٰٰنہٰــــــــــــــــــيٰ؟😉🙈','أُحٌبّـڳّ يْأُۆﭴھَہّ أُلَقُمِـرٌ 😊🥀','نہٰكہٰبٰٰـــــــــــــــــل😊🙈♥️','دَغيٰرَهٰہٰٖـآ شہٰـيٰ هٰہٰٖذّآ😡😕','بّبّڳّــــــنً خِـــــــأُصً🌚😹₎','بّرٌبّڳ ﮭـأُيْ ﮭمِہﭴﮭـرٌهٰہٖ🤔😹','فہٰدَيٰـــتہٰ آلہٰحہٰلہٰــــو 🥰😹','شِٰہٰٰـهٰہٰٖـــلـٰہ ضۜہٰٰـــــوِٰرَة 😍😉','مٰہنَِہـــــوِٰرَ آلـٰـہيِٰــــوِٰمٰہ😻🙈','فّدِيْـتٌ أُلَصًـأُڳّ مِحٌحٌـہ🥰😘','مِـــأُ أُرٌتٌــأُحٌـــــــلَڳّہ 😐','شِٰہٰٰهٰہٰٖـــلـٰـہ عہٰٰسٰٓـــلـٰـہ₍🍯😻⁾',}
local Description = Texting[math.random(#Texting)]
if UserInfo.username then
UserInfousername = '@'..UserInfo.username..''
else
UserInfousername = 'لا يوجد'
end
Get_Is_Id = Redis:get(LiOn.."LiOn:Set:Id:Groups") or Redis:get(LiOn.."LiOn:Set:Id:Group"..msg_chat_id)
if Redis:get(LiOn.."LiOn:Status:IdPhoto"..msg_chat_id) then
if Get_Is_Id then
local Get_Is_Id = Get_Is_Id:gsub('#AddMem',NumAdd) 
local Get_Is_Id = Get_Is_Id:gsub('#id',msg.sender_id.user_id) 
local Get_Is_Id = Get_Is_Id:gsub('#username',UserInfousername) 
local Get_Is_Id = Get_Is_Id:gsub('#msgs',TotalMsg) 
local Get_Is_Id = Get_Is_Id:gsub('#edit',TotalEdit) 
local Get_Is_Id = Get_Is_Id:gsub('#stast',RinkBot) 
local Get_Is_Id = Get_Is_Id:gsub('#auto',TotalMsgT) 
local Get_Is_Id = Get_Is_Id:gsub('#Description',Description) 
local Get_Is_Id = Get_Is_Id:gsub('#game',NumberGames) 
local Get_Is_Id = Get_Is_Id:gsub('#photos',TotalPhoto) 
local Get_Is_Id = Get_Is_Id:gsub('#Bio',Bio) 
if photo.total_count > 0 then
if not msg.Distinguished and Redis:get(LiOn..'idnotmem'..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙ايديك : ❪'..UserId..
'❫\n❆︙معرفك : ❪*['..UserInfousername..
']*❫\n❆‍︙رتبتك : ❪'..RinkBot..
'❫\n❆︙رسائلك : ❪'..TotalMsg..
'❫\n❆︙سحكاتك : ❪'..TotalEdit..
'❫\n❆︙تفاعلك : ❪'..TotalMsgT..
'❫\n❆︙البايو : ❪*['..Bio..
']*❫*', "md")
end
return luatele.sendPhoto(msg.chat_id, msg.id, photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id,Get_Is_Id)
else
return luatele.sendText(msg_chat_id,msg_id,Get_Is_Id,"md",true) 
end
else
if photo.total_count > 0 then
if not msg.Distinguished and Redis:get(LiOn..'idnotmem'..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙ايديك : ❪'..UserId..
'❫\n❆︙معرفك : ❪*['..UserInfousername..
']*❫\n❆‍︙رتبتك : ❪'..RinkBot..
'❫\n❆︙رسائلك : ❪'..TotalMsg..
'❫\n❆︙سحكاتك : ❪'..TotalEdit..
'❫\n❆︙تفاعلك : ❪'..TotalMsgT..
'❫\n❆︙البايو : ❪*['..Bio..
']*❫*', "md")
end
return luatele.sendPhoto(msg.chat_id, msg.id, photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id,
'\n↫ '..Description..
'\n❆︙ايديك : ❪ '..UserId..
' ❫\n❆︙معرفك : ❪ ['..UserInfousername..
'] ❫\n❆‍︙رتبتك : ❪ '..RinkBot..
'❫\n❆︙رسائلك : ❪ '..TotalMsg..
' ❫\n❆︙نقاطك : ❪ '..NumberGames..
' ❫\n❆︙سحكاتك : ❪ '..TotalEdit..
' ❫\n❆︙تفاعلك : ❪ '..TotalMsgT..
'❫\n❆︙البايو : ❪ ['..Bio..
']❫', "md")
else
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙ايديك : ❪'..UserId..
'❫\n❆︙معرفك : ❪*['..UserInfousername..
']*❫\n❆‍︙رتبتك : ❪'..RinkBot..
'❫\n❆︙رسائلك : ❪'..TotalMsg..
'❫\n❆︙سحكاتك : ❪'..TotalEdit..
'❫\n❆︙تفاعلك : ❪'..TotalMsgT..
'❫\n❆︙البايو : ❪*['..Bio..
']*❫*', "md")
end
end
else
if Get_Is_Id then
local Get_Is_Id = Get_Is_Id:gsub('#AddMem',NumAdd) 
local Get_Is_Id = Get_Is_Id:gsub('#id',msg.sender_id.user_id) 
local Get_Is_Id = Get_Is_Id:gsub('#username',UserInfousername) 
local Get_Is_Id = Get_Is_Id:gsub('#msgs',TotalMsg) 
local Get_Is_Id = Get_Is_Id:gsub('#edit',TotalEdit) 
local Get_Is_Id = Get_Is_Id:gsub('#stast',RinkBot) 
local Get_Is_Id = Get_Is_Id:gsub('#auto',TotalMsgT) 
local Get_Is_Id = Get_Is_Id:gsub('#Description',Description) 
local Get_Is_Id = Get_Is_Id:gsub('#game',NumberGames) 
local Get_Is_Id = Get_Is_Id:gsub('#photos',TotalPhoto) 
local Get_Is_Id = Get_Is_Id:gsub('#Bio',Bio) 
return luatele.sendText(msg_chat_id,msg_id,'['..Get_Is_Id..']',"md",true) 
else
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙ايديك : ❪'..UserId..
'❫\n❆︙معرفك : ❪*['..UserInfousername..
']*❫\n❆‍︙رتبتك : ❪'..RinkBot..
'❫\n❆︙رسائلك : ❪'..TotalMsg..
'❫\n❆︙سحكاتك : ❪'..TotalEdit..
'❫\n❆︙تفاعلك : ❪'..TotalMsgT..
'❫\n❆︙البايو : ❪*['..Bio..
']*❫*', "md")
end
end
end 
if text and text:match('^تحكم @(%S+)$') then
local UserName = text:match('^تحكم @(%S+)$') 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
TheBasics = Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg.chat_id,UserId_Info.id) 
Originators = Redis:sismember(LiOn.."LiOn:Originators:Group"..msg.chat_id,UserId_Info.id)
Managers = Redis:sismember(LiOn.."LiOn:Managers:Group"..msg.chat_id,UserId_Info.id)
Addictive = Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg.chat_id,UserId_Info.id)
Distinguished = Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg.chat_id,UserId_Info.id)
BanGroup = Redis:sismember(LiOn.."LiOn:BanGroup:Group"..msg.chat_id,UserId_Info.id)
SilentGroup = Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,UserId_Info.id)
if BanGroup then
BanGroupz = "✔"
else
BanGroupz = "❌"
end
if SilentGroup then
SilentGroupz = "✔"
else
SilentGroupz = "❌"
end
if TheBasics then
TheBasicsz = "✔"
else
TheBasicsz = "❌"
end
if Originators then
Originatorsz = "✔"
else
Originatorsz = "❌"
end
if Managers then
Managersz = "✔"
else
Managersz = "❌"
end
if Addictive then
Addictivez = "✔"
else
Addictivez = "❌"
end
if Distinguished then
Distinguishedz = "✔"
else
Distinguishedz = "❌"
end

local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = '- منشئ اساسي : '..TheBasicsz, data =msg.sender_id.user_id..'/statusTheBasicsz/'..UserId_Info.id},{text = '- منشئ : '..Originatorsz, data =msg.sender_id.user_id..'/statusOriginatorsz/'..UserId_Info.id},
},
{
{text = '- مدير : '..Managersz, data =msg.sender_id.user_id..'/statusManagersz/'..UserId_Info.id},{text = '- ادمن : '..Addictivez, data =msg.sender_id.user_id..'/statusAddictivez/'..UserId_Info.id},
},
{
{text = '- مميز : '..Distinguishedz, data =msg.sender_id.user_id..'/statusDistinguishedz/'..UserId_Info.id},
},
{
{text = '- الحظر : '..BanGroupz, data =msg.sender_id.user_id..'/statusban/'..UserId_Info.id},{text = '- الكتم : '..SilentGroupz, data =msg.sender_id.user_id..'/statusktm/'..UserId_Info.id},
},
{
{text = '- عضو  ', data =msg.sender_id.user_id..'/statusmem/'..UserId_Info.id},
},
{
{text = '- اخفاء الامر ', data ='/delAmr1'}
}
}
}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙تحكم برتب الشخص*',"md",false, false, false, false, reply_markup)
end
if text == 'تحكم' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
TheBasics = Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg.chat_id,Message_Reply.sender_id.user_id) 
Originators = Redis:sismember(LiOn.."LiOn:Originators:Group"..msg.chat_id,Message_Reply.sender_id.user_id)
Managers = Redis:sismember(LiOn.."LiOn:Managers:Group"..msg.chat_id,Message_Reply.sender_id.user_id)
Addictive = Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg.chat_id,Message_Reply.sender_id.user_id)
Distinguished = Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg.chat_id,Message_Reply.sender_id.user_id)
BanGroup = Redis:sismember(LiOn.."LiOn:BanGroup:Group"..msg.chat_id,Message_Reply.sender_id.user_id)
SilentGroup = Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..msg.chat_id,Message_Reply.sender_id.user_id)
if BanGroup then
BanGroupz = "✔"
else
BanGroupz = "❌"
end
if SilentGroup then
SilentGroupz = "✔"
else
SilentGroupz = "❌"
end
if TheBasics then
TheBasicsz = "✔"
else
TheBasicsz = "❌"
end
if Originators then
Originatorsz = "✔"
else
Originatorsz = "❌"
end
if Managers then
Managersz = "✔"
else
Managersz = "❌"
end
if Addictive then
Addictivez = "✔"
else
Addictivez = "❌"
end
if Distinguished then
Distinguishedz = "✔"
else
Distinguishedz = "❌"
end
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = '- منشئ اساسي : '..TheBasicsz, data =msg.sender_id.user_id..'/statusTheBasicsz/'..Message_Reply.sender_id.user_id},{text = '- منشئ : '..Originatorsz, data =msg.sender_id.user_id..'/statusOriginatorsz/'..Message_Reply.sender_id.user_id},
},
{
{text = '- مدير : '..Managersz, data =msg.sender_id.user_id..'/statusManagersz/'..Message_Reply.sender_id.user_id},{text = '- ادمن : '..Addictivez, data =msg.sender_id.user_id..'/statusAddictivez/'..Message_Reply.sender_id.user_id},
},
{
{text = '- مميز : '..Distinguishedz, data =msg.sender_id.user_id..'/statusDistinguishedz/'..Message_Reply.sender_id.user_id},
},
{
{text = '- الحظر : '..BanGroupz, data =msg.sender_id.user_id..'/statusban/'..Message_Reply.sender_id.user_id},{text = '- الكتم : '..SilentGroupz, data =msg.sender_id.user_id..'/statusktm/'..Message_Reply.sender_id.user_id},
},
{
{text = '- عضو  ', data =msg.sender_id.user_id..'/statusmem/'..Message_Reply.sender_id.user_id},
},
{
{text = '- اخفاء الامر ', data ='/delAmr1'}
}
}
}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙تحكم برتب الشخص*',"md",false, false, false, false, reply_markup)
end
if text == 'ايدي' and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.username then
UserInfousername = '@'..UserInfo.username..''
else
UserInfousername = 'لا يوجد'
end
local InfoUser = luatele.getUserFullInfo(Message_Reply.sender_id.user_id)
if InfoUser.bio then
Bio = FlterBio(InfoUser.bio)
else
Bio = 'لا يوجد'
end
local photo = luatele.getUserProfilePhotos(Message_Reply.sender_id.user_id)
local UserId = Message_Reply.sender_id.user_id
local RinkBot = Controller(msg_chat_id,Message_Reply.sender_id.user_id)
local TotalMsg = Redis:get(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..Message_Reply.sender_id.user_id) or 0
local TotalEdit = Redis:get(LiOn..'LiOn:Num:Message:Edit'..msg_chat_id..Message_Reply.sender_id.user_id) or 0
local TotalMsgT = Total_message(TotalMsg) 
if Redis:get(LiOn.."LiOn:Status:IdPhoto"..msg_chat_id) then
if photo.total_count > 0 then
if not msg.Distinguished and Redis:get(LiOn..'idnotmem'..msg.chat_id)  then
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙ايديك : ❪'..UserId..
'❫\n❆︙معرفك : ❪*['..UserInfousername..
']*❫\n❆‍︙رتبتك : ❪'..RinkBot..
'❫\n❆︙رسائلك : ❪'..TotalMsg..
'❫\n❆︙سحكاتك : ❪'..TotalEdit..
'❫\n❆︙تفاعلك : ❪'..TotalMsgT..
'❫\n❆︙البايو : ❪*['..Bio..
']*❫*', "md")
end
return luatele.sendPhoto(msg.chat_id, msg.id, photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id,
'\n*❆︙ايديه : '..UserId..
'\n❆︙معرفه : '..UserInfousername..
'\n❆‍︙رتبته : '..RinkBot..
'\n❆︙رسائله : '..TotalMsg..
'\n❆︙سحكاته : '..TotalEdit..
'\n❆︙تفاعله : '..TotalMsgT..
'*', "md")
else
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙ايديه : '..UserId..
'\n❆︙معرفه : '..UserInfousername..
'\n❆‍︙رتبته : '..RinkBot..
'\n❆︙رسائله : '..TotalMsg..
'\n❆︙سحكاته : '..TotalEdit..
'\n❆︙تفاعله : '..TotalMsgT..
'*',"md",true) 
end
else
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙ايديه : '..UserId..
'\n❆︙معرفه : '..UserInfousername..
'\n❆‍︙رتبته : '..RinkBot..
'\n❆︙رسائله : '..TotalMsg..
'\n❆︙سحكاته : '..TotalEdit..
'\n❆︙تفاعله : '..TotalMsgT..
'*',"md",true) 
end
end

if text and (text == "متحركه" or text == "↫ متحركه ✯") and not Redis:get(LiOn..'Abs:gif:Abs'..msg.chat_id) then
Abs = math.random(2,1075); 
local Text ='*❆︙تم اختيار المتحركه لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendanimation?chat_id=' .. msg.chat_id .. '&animation=https://t.me/GifWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end

if text and (text == "ميمز" or text == "↫ ميمز ✯") and not Redis:get(LiOn..'Abs:memz:Abs'..msg.chat_id) then
Abs = math.random(2,220); 
local Text ='*❆︙تم اختيار مقطع الميمز لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/MemzWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end

if text and (text == "ريمكس" or text == "↫ ريمكس ✯") and not Redis:get(LiOn..'Abs:Remix:Abs'..msg.chat_id) then
Abs = math.random(2,400); 
local Text ='*❆︙تم اختيار الريمكس لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/RemixWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end


if text and (text == "صوره" or text == "↫ صوره ✯") and not Redis:get(LiOn..'Abs:Photo:Abs'..msg.chat_id) then
Abs = math.random(4,1120); 
local Text ='*❆︙تم اختيار الصوره لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/PhotosWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end


if text and (text == "انمي" or text == "↫ انمي ✯") and not Redis:get(LiOn..'Abs:Anime:Abs'..msg.chat_id) then
Abs = math.random(3,998); 
local Text ='*❆︙تم اختيار صورة الانمي لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/AnimeWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end


if text and (text == "فلم" or text == "↫ فلم ✯") and not Redis:get(LiOn..'Abs:Movies:Abs'..msg.chat_id) then
Abs = math.random(4,80); 
local Text ='*❆︙تم اختيار الفلم لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/MoviesWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end

if text and (text == "مسلسل" or text == "↫ مسلسل ✯") and not Redis:get(LiOn..'Abs:Series:Abs'..msg.chat_id) then
Abs = math.random(2,54); 
local Text ='*❆︙تم اختيار المسلسل لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/SeriesWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end
if text == 'كشف'  and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.username then
UserInfousername = '@'..UserInfo.username..''
else
UserInfousername = 'لا يوجد'
end
local photo = luatele.getUserProfilePhotos(Message_Reply.sender_id.user_id)
local UserId = Message_Reply.sender_id.user_id
local RinkBot = Controller(msg_chat_id,Message_Reply.sender_id.user_id)
local TotalMsg = Redis:get(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..Message_Reply.sender_id.user_id) or 0
local TotalEdit = Redis:get(LiOn..'LiOn:Num:Message:Edit'..msg_chat_id..Message_Reply.sender_id.user_id) or 0
local TotalMsgT = Total_message(TotalMsg) 
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙ايديه : '..UserId..
'\n❆︙معرفه : '..UserInfousername..
'\n❆‍︙رتبته : '..RinkBot..
'\n❆︙رسائله : '..TotalMsg..
'\n❆︙سحكاته : '..TotalEdit..
'\n❆︙تفاعله : '..TotalMsgT..
'*',"md",true) 
end
if text and text:match('^ايدي @(%S+)$') or text and text:match('^كشف @(%S+)$') then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserName = text:match('^ايدي @(%S+)$') or text:match('^كشف @(%S+)$')
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local UserId = UserId_Info.id
local RinkBot = Controller(msg_chat_id,UserId_Info.id)
local TotalMsg = Redis:get(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..UserId_Info.id) or 0
local TotalEdit = Redis:get(LiOn..'LiOn:Num:Message:Edit'..msg_chat_id..UserId_Info.id) or 0
local TotalMsgT = Total_message(TotalMsg) 
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙ايديه : '..UserId..
'\n❆︙معرفه : @'..UserName..
'\n❆‍︙رتبته : '..RinkBot..
'\n❆︙رسائله : '..TotalMsg..
'\n❆︙سحكاته : '..TotalEdit..
'\n❆︙تفاعله : '..TotalMsgT..
'*',"md",true) 
end
if text == 'رتبتي' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
return luatele.sendText(msg_chat_id,msg_id,'\n❆︙رتبتك هي : '..msg.Name_Controller,"md",true)  
end
if text == 'معلوماتي' or text == 'موقعي' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
StatusMemberChat = 'مالك المجموعه'
elseif (StatusMember == "chatMemberStatusAdministrator") then
StatusMemberChat = 'مشرف المجموعه'
else
StatusMemberChat = 'عضو في المجموعه'
end
local UserId = msg.sender_id.user_id
local RinkBot = msg.Name_Controller
local TotalMsg = Redis:get(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalEdit = Redis:get(LiOn..'LiOn:Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local TotalMsgT = Total_message(TotalMsg) 
if UserInfo.username then
UserInfousername = '@'..UserInfo.username..''
else
UserInfousername = 'لا يوجد'
end
if StatusMemberChat == 'مشرف المجموعه' then 
local GetMemberStatus = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status
if GetMemberStatus.can_change_info then
change_info = '❬ ✔️ ❭' else change_info = '❬ ❌ ❭'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '❬ ✔️ ❭' else delete_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_invite_users then
invite_users = '❬ ✔️ ❭' else invite_users = '❬ ❌ ❭'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '❬ ✔️ ❭' else pin_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '❬ ✔️ ❭' else restrict_members = '❬ ❌ ❭'
end
if GetMemberStatus.can_promote_members then
promote = '❬ ✔️ ❭' else promote = '❬ ❌ ❭'
end
PermissionsUser = '*\n❆︙صلاحيات المستخدم :\n— — — — — — — — —'..'\n❆︙تغيير المعلومات : '..change_info..'\n❆︙تثبيت الرسائل : '..pin_messages..'\n❆︙اضافه مستخدمين : '..invite_users..'\n❆︙مسح الرسائل : '..delete_messages..'\n❆︙حظر المستخدمين : '..restrict_members..'\n❆︙اضافه المشرفين : '..promote..'\n\n*'
end
return luatele.sendText(msg_chat_id,msg_id,
'\n*❆︙ايديك : '..UserId..
'\n❆︙معرفك : '..UserInfousername..
'\n❆‍︙رتبتك : '..RinkBot..
'\n❆‍︙رتبته المجموعه: '..StatusMemberChat..
'\n❆︙رسائلك : '..TotalMsg..
'\n❆︙سحكاتك : '..TotalEdit..
'\n❆︙تفاعلك : '..TotalMsgT..
'*'..(PermissionsUser or '') ,"md",true) 
end
if text == 'لقبي' then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id)
if StatusMember.status.custom_title ~= "" then
Lakb = StatusMember.status.custom_title
else
Lakb = 'مشرف'
end
if (StatusMember.status.Merotele == "chatMemberStatusCreator") then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙لقبك { '..Lakb..' }* ',"md",true)  
elseif (StatusMember.status.Merotele == "chatMemberStatusAdministrator") then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙لقبك { '..Lakb..' }* ',"md",true)  
else
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙انت عضو في المجموعه* ',"md",true)  
end
end
if text == "تفاعلي" then
local TotalMsg = Redis:get(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsgT = Total_message(TotalMsg) 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تفاعلك : '..TotalMsgT..'* ',"md",true)  
end
if text == 'فحص البوت' then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local StatusMember = luatele.getChatMember(msg_chat_id,LiOn).status.Merotele
if (StatusMember ~= "chatMemberStatusAdministrator") then
return luatele.sendText(msg_chat_id,msg_id,'❆︙البوت عضو في المجموعه ',"md",true) 
end
local GetMemberStatus = luatele.getChatMember(msg_chat_id,LiOn).status
if GetMemberStatus.can_change_info then
change_info = '❬ ✔️ ❭' else change_info = '❬ ❌ ❭'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '❬ ✔️ ❭' else delete_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_invite_users then
invite_users = '❬ ✔️ ❭' else invite_users = '❬ ❌ ❭'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '❬ ✔️ ❭' else pin_messages = '❬ ❌ ❭'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '❬ ✔️ ❭' else restrict_members = '❬ ❌ ❭'
end
if GetMemberStatus.can_promote_members then
promote = '❬ ✔️ ❭' else promote = '❬ ❌ ❭'
end
PermissionsUser = '*\n❆︙صلاحيات البوت : مشرف في المجموعه :\n— — — — — — — — —'..'\n❆︙تغيير المعلومات : '..change_info..'\n❆︙تثبيت الرسائل : '..pin_messages..'\n❆︙اضافه مستخدمين : '..invite_users..'\n❆︙مسح الرسائل : '..delete_messages..'\n❆︙حظر المستخدمين : '..restrict_members..'\n❆︙اضافه المشرفين : '..promote..'\n\n*'
return luatele.sendText(msg_chat_id,msg_id,PermissionsUser,"md",true) 
end

if text and text:match('^مسح (%d+)$') then
local NumMessage = text:match('^مسح (%d+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).Delmsg == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه مسح الرسائل* ',"md",true)  
end
if tonumber(NumMessage) > 1000 then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙العدد اكثر من 1000 لا تستطيع المسح',"md",true)  
end
local Message = msg.id
for i=1,tonumber(NumMessage) do
local deleteMessages = luatele.deleteMessages(msg.chat_id,{[1]= Message})
var(deleteMessages)
Message = Message - 1048576
end
luatele.sendText(msg_chat_id, msg_id, "❆︙تم مسح - "..NumMessage.. ' رساله', 'md')
end
if text == ('رفع مالك اساسي') and msg.reply_to_message_id ~= 0 then
if not msg.Developers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:sadd(LiOn.."LiOn:MalekAsase:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم رفعه مالك اساسي ").Reply,"md",true)  
end
if text and text:match('^رفع مالك اساسي @(%S+)$') then
local UserName = text:match('^رفع مالك اساسي @(%S+)$')
if not msg.Developers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
Redis:sadd(LiOn.."LiOn:MalekAsase:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم رفعه مالك اساسي ").Reply,"md",true)  
end 
if text == ('تنزيل مالك اساسي') and msg.reply_to_message_id ~= 0 then
if not msg.Developers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:srem(LiOn.."LiOn:MalekAsase:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله مالك اساسي ").Reply,"md",true)  
end
if text and text:match('^تنزيل مالك اساسي @(%S+)$') then
local UserName = text:match('^تنزيل مالك اساسي @(%S+)$')
if not msg.Developers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
Redis:srem(LiOn.."LiOn:MalekAsase:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله مالك اساسي ").Reply,"md",true)  
end 
if text == 'المالكين الاساسيين' then
if not msg.Developers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:MalekAsase:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد المالكين الاساسيين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المالكين الاساسيين \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المالكين الاساسيين', data = msg.sender_id.user_id..'/MalekAsase'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'مسح المالكين الاساسيين' then
if not msg.Developers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Memberss = Redis:smembers(LiOn.."LiOn:MalekAsase:Group"..msg_chat_id) 
if #Info_Memberss == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد المالكين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:MalekAsase:Group"..msg_chat_id) 
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
Redis:sadd(LiOn.."LiOn:MalekAsase:Group"..msg_chat_id,v.member_id.user_id) 
end
end
end
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Memberss.."} من المالكين الاساسيين  *","md",true)
end

if text == ('رفع مدير عام') and msg.reply_to_message_id ~= 0 then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:sadd(LiOn.."LiOn:Distinguishedall:Group",Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم رفعه مدير عام ").Reply,"md",true)  
end
if text and text:match('^رفع مدير عام @(%S+)$') then
local UserName = text:match('^رفع مدير عام @(%S+)$')
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
Redis:sadd(LiOn.."LiOn:Distinguishedall:Group",UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم رفعه مدير عام ").Reply,"md",true)  
end 
if text == ('تنزيل مدير عام') and msg.reply_to_message_id ~= 0 then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:srem(LiOn.."LiOn:Distinguishedall:Group",Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله مدير عام ").Reply,"md",true)  
end
if text and text:match('^تنزيل مدير عام @(%S+)$') then
local UserName = text:match('^تنزيل مدير عام @(%S+)$')
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
Redis:srem(LiOn.."LiOn:Distinguishedall:Group",UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله مدير عام ").Reply,"md",true)  
end 


if text and text:match('^تنزيل (.*) @(%S+)$') then
local UserName = {text:match('^تنزيل (.*) @(%S+)$')}
local UserId_Info = luatele.searchPublicChat(UserName[2])
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName[2]:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if UserName[1] == "مطور ثانوي" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:DevelopersQ:Groups",UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله مطور ثانوي").Reply,"md",true)  
end
end
if UserName[1] == "مطور" then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Developers:Groups",UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله مطور مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Developers:Groups",UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله مطور ").Reply,"md",true)  
end
end
if UserName[1] == "مالك" then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.MalekAsase then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if not Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله مالك مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله مالك ").Reply,"md",true)  
end
end
if UserName[1] == "منشئ اساسي" then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله منشئ اساسي ").Reply,"md",true)  
end
end
if UserName[1] == "منشئ" then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Originators:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله من المنشئين مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله من المنشئين ").Reply,"md",true)  
end
end
if UserName[1] == "مدير" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Managers:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله من المدراء مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله من المدراء ").Reply,"md",true)  
end
end
if UserName[1] == "ادمن" then
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Managers then
testmod = true
else
testmod = false
end
if testmod == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله من الادمنيه مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله من الادمنيه ").Reply,"md",true)  
end
end
if UserName[1] == "مميز" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله من المميزين مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله من المميزبن ").Reply,"md",true)  
end
end
end
if text and text:match("^تنزيل (.*)$") and msg.reply_to_message_id ~= 0 then
local TextMsg = text:match("^تنزيل (.*)$")
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if TextMsg == 'مطور ثانوي' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:DevelopersQ:Groups",Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله مطور ثانوي").Reply,"md",true)  
end
end
if TextMsg == 'مطور' then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Developers:Groups",Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله مطور مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Developers:Groups",Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله مطور ").Reply,"md",true)  
end
end
if TextMsg == "مالك" then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.MalekAsase then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if not Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله مالك مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله مالك ").Reply,"md",true)  
end
end
if TextMsg == "منشئ اساسي" then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله منشئ اساسي ").Reply,"md",true)  
end
end
if TextMsg == "منشئ" then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Originators:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله من المنشئين مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله من المنشئين ").Reply,"md",true)  
end
end
if TextMsg == "مدير" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Managers:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله من المدراء مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله من المدراء ").Reply,"md",true)  
end
end
if TextMsg == "ادمن" then
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Managers then
testmod = true
else
testmod = false
end
if testmod == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله من الادمنيه مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله من الادمنيه ").Reply,"md",true)  
end
end
if TextMsg == "مميز" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله من المميزين مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله من المميزبن ").Reply,"md",true)  
end
end
end


if text and text:match('^تنزيل (.*) (%d+)$') then
local UserId = {text:match('^تنزيل (.*) (%d+)$')}
local UserInfo = luatele.getUser(UserId[2])
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if UserId[1] == 'مطور ثانوي' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم تنزيله مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:DevelopersQ:Groups",UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم تنزيله مطور ثانوي").Reply,"md",true)  
end
end
if UserId[1] == 'مطور' then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Developers:Groups",UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم تنزيله مطور مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Developers:Groups",UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم تنزيله مطور ").Reply,"md",true)  
end
end
if UserId[1] == "مالك" then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.MalekAsase then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if not Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله مالك مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله مالك ").Reply,"md",true)  
end
end
if UserId[1] == "منشئ اساسي" then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله منشئ اساسي ").Reply,"md",true)  
end
end
if UserId[1] == "منشئ" then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Originators:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله من المنشئين مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله من المنشئين ").Reply,"md",true)  
end
end
if UserId[1] == "مدير" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Managers:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله من المدراء مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله من المدراء ").Reply,"md",true)  
end
end
if UserId[1] == "ادمن" then
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Managers then
testmod = true
else
testmod = false
end
if testmod == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله من الادمنيه مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله من الادمنيه ").Reply,"md",true)  
end
end
if UserId[1] == "مميز" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله من المميزين مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم تنزيله من المميزبن ").Reply,"md",true)  
end
end
end
if text and text:match('^رفع (.*) @(%S+)$') then
local UserName = {text:match('^رفع (.*) @(%S+)$')}
local UserId_Info = luatele.searchPublicChat(UserName[2])
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName[2]:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if UserName[1] == "مطور ثانوي" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:DevelopersQ:Groups",UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته مطور ثانوي").Reply,"md",true)  
end
end
if UserName[1] == "مطور" then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:Developers:Groups",UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته مطور مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Developers:Groups",UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته مطور ").Reply,"md",true)  
end
end
if UserName[1] == "مالك" then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.MalekAsase then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته مالك مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته مالك ").Reply,"md",true)  
end
end
if UserName[1] == "منشئ اساسي" then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته منشئ اساسي ").Reply,"md",true)  
end
end
if UserName[1] == "منشئ" then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:Originators:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته منشئ  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Originators:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته منشئ  ").Reply,"md",true)  
end
end
if UserName[1] == "مدير" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:Managers:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته مدير  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Managers:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته مدير  ").Reply,"md",true)  
end
end
if UserName[1] == "ادمن" then
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Managers then
testmod = true
else
testmod = false
end
if testmod == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:SetId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته ادمن  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Addictive:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته ادمن  ").Reply,"md",true)  
end
end
if UserName[1] == "مميز" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:SetId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته مميز  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم ترقيته مميز  ").Reply,"md",true)  
end
end
end
if text and text:match("^رفع (.*)$") and msg.reply_to_message_id ~= 0 then
local TextMsg = text:match("^رفع (.*)$")
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if TextMsg == 'مطور ثانوي' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:DevelopersQ:Groups",Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته مطور ثانوي").Reply,"md",true)  
end
end
if TextMsg == 'مطور' then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:Developers:Groups",Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته مطور مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Developers:Groups",Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته مطور ").Reply,"md",true)  
end
end
if TextMsg == "مالك" then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.MalekAsase then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته مالك مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته مالك ").Reply,"md",true)  
end
end
if TextMsg == "منشئ اساسي" then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته منشئ اساسي ").Reply,"md",true)  
end
end
if TextMsg == "منشئ" then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:Originators:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته منشئ  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Originators:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته منشئ  ").Reply,"md",true)  
end
end
if TextMsg == "مدير" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:Managers:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته مدير  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Managers:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته مدير  ").Reply,"md",true)  
end
end
if TextMsg == "ادمن" then
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Managers then
testmod = true
else
testmod = false
end
if testmod == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:SetId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته ادمن  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Addictive:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته ادمن  ").Reply,"md",true)  
end
end
if TextMsg == "مميز" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:SetId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته مميز  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم ترقيته مميز  ").Reply,"md",true)  
end
end
end
if text and text:match('^رفع (.*) (%d+)$') then
local UserId = {text:match('^رفع (.*) (%d+)$')}
local UserInfo = luatele.getUser(UserId[2])
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if UserId[1] == 'مطور ثانوي' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم ترقيته مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:DevelopersQ:Groups",UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم ترقيته مطور ثانوي").Reply,"md",true)  
end
end
if UserId[1] == 'مطور' then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:Developers:Groups",UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم ترقيته مطور مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Developers:Groups",UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم ترقيته مطور ").Reply,"md",true)  
end
end
if UserId[1] == "مالك" then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.MalekAsase then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته مالك مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته مالك ").Reply,"md",true)  
end
end
if UserId[1] == "منشئ اساسي" then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:TheBasics:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته منشئ اساسي ").Reply,"md",true)  
end
end
if UserId[1] == "منشئ" then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:Originators:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته منشئ  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Originators:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته منشئ  ").Reply,"md",true)  
end
end
if UserId[1] == "مدير" then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(LiOn.."LiOn:Managers:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته مدير  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Managers:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته مدير  ").Reply,"md",true)  
end
end
if UserId[1] == "ادمن" then
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Managers then
testmod = true
else
testmod = false
end
if testmod == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:SetId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته ادمن  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Addictive:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته ادمن  ").Reply,"md",true)  
end
end
if UserId[1] == "مميز" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:SetId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,UserId[2]) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته مميز  مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:Distinguished:Group"..msg_chat_id,UserId[2]) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[2],"❆︙تم ترقيته مميز  ").Reply,"md",true)  
end
end
end
if text and text:match("^تغيير رد المطور (.*)$") then
local Teext = text:match("^تغيير رد المطور (.*)$") 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:set(LiOn.."LiOn:Developer:Bot:Reply"..msg.chat_id,Teext)
return luatele.sendText(msg_chat_id,msg_id,"❆︙ تم تغيير رد المطور الى :"..Teext)
elseif text and text:match("^تغيير رد المالك (.*)$") then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local Teext = text:match("^تغيير رد المالك (.*)$") 
Redis:set(LiOn.."LiOn:PresidentQ:Group:Reply"..msg.chat_id,Teext)
return luatele.sendText(msg_chat_id,msg_id,"❆︙ تم تغيير رد المالك الى :"..Teext)
elseif text and text:match("^تغيير رد المنشئ الاساسي (.*)$") then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local Teext = text:match("^تغيير رد المنشئ الاساسي (.*)$") 
Redis:set(LiOn.."LiOn:President:Group:Reply"..msg.chat_id,Teext)
return luatele.sendText(msg_chat_id,msg_id,"❆︙ تم تغيير رد المنشئ الاساسي الى :"..Teext)
elseif text and text:match("^تغيير رد المنشئ (.*)$") then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local Teext = text:match("^تغيير رد المنشئ (.*)$") 
Redis:set(LiOn.."LiOn:Constructor:Group:Reply"..msg.chat_id,Teext)
return luatele.sendText(msg_chat_id,msg_id,"❆︙ تم تغيير رد المنشئ الى :"..Teext)
elseif text and text:match("^تغيير رد المدير (.*)$") then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local Teext = text:match("^تغيير رد المدير (.*)$") 
Redis:set(LiOn.."LiOn:Manager:Group:Reply"..msg.chat_id,Teext) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙ تم تغيير رد المدير الى :"..Teext)
elseif text and text:match("^تغيير رد الادمن (.*)$") then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local Teext = text:match("^تغيير رد الادمن (.*)$") 
Redis:set(LiOn.."LiOn:Admin:Group:Reply"..msg.chat_id,Teext)
return luatele.sendText(msg_chat_id,msg_id,"❆︙ تم تغيير رد الادمن الى :"..Teext)
elseif text and text:match("^تغيير رد المميز (.*)$") then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local Teext = text:match("^تغيير رد المميز (.*)$") 
Redis:set(LiOn.."LiOn:Vip:Group:Reply"..msg.chat_id,Teext)
return luatele.sendText(msg_chat_id,msg_id,"❆︙ تم تغيير رد المميز الى :"..Teext)
elseif text and text:match("^تغيير رد العضو (.*)$") then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local Teext = text:match("^تغيير رد العضو (.*)$") 
Redis:set(LiOn.."LiOn:Mempar:Group:Reply"..msg.chat_id,Teext)
return luatele.sendText(msg_chat_id,msg_id,"❆︙ تم تغيير رد العضو الى :"..Teext)
elseif text == 'مسح رد المطور' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."LiOn:Developer:Bot:Reply"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم حدف رد المطور")
elseif text == 'مسح رد المنشئ الاساسي' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."LiOn:President:Group:Reply"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح رد المنشئ الاساسي ")
elseif text == 'مسح رد المالك' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."LiOn:PresidentQ:Group:Reply"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح رد المالك ")
elseif text == 'مسح رد المنشئ' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."LiOn:Constructor:Group:Reply"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح رد المنشئ ")
elseif text == 'مسح رد المدير' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."LiOn:Manager:Group:Reply"..msg.chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح رد المدير ")
elseif text == 'مسح رد الادمن' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."LiOn:Admin:Group:Reply"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح رد الادمن ")
elseif text == 'مسح رد المميز' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."LiOn:Vip:Group:Reply"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح رد المميز")
elseif text == 'مسح رد العضو' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
Redis:del(LiOn.."LiOn:Mempar:Group:Reply"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح رد العضو")
end 
if text and text:match('^ضع رتبه @(%S+) (.*)$') and not Redis:get(LiOn..'Redis:setRt'..msg.chat_id) then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserName = {text:match('^ضع رتبه @(%S+) (.*)$')}
local UserId_Info = luatele.searchPublicChat(UserName[1])
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName[1] and UserName[1]:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
Redis:set(LiOn..'LiOn:SetRt'..msg_chat_id..':'..UserId_Info.id,UserName[2])
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم وضع رتبه له : "..UserName[2],"md",true)  
end
if text and text:match('^ضع رتبه (.*)$') and msg.reply_to_message_id ~= 0 and not Redis:get(LiOn..'Redis:setRt'..msg.chat_id) then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:set(LiOn..'LiOn:SetRt'..msg_chat_id..':'..Message_Reply.sender_id.user_id,text:match('^ضع رتبه (.*)$'))
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم وضع رتبه له : "..text:match('^ضع رتبه (.*)$'),"md",true)  
end
if text and text:match('^مسح رتبه @(%S+)$') and not Redis:get(LiOn..'Redis:setRt'..msg.chat_id) then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserName = text:match('^مسح رتبه @(%S+)$')
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
Redis:del(LiOn..'LiOn:SetRt'..msg_chat_id..':'..UserId_Info.id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم مسح رتبه  التي وضعتها","md",true)  
end
if text and text:match('^مسح رتبه$') and msg.reply_to_message_id ~= 0 and not Redis:get(LiOn..'Redis:setRt'..msg.chat_id) then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:del(LiOn..'LiOn:SetRt'..msg_chat_id..':'..Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم مسح رتبه التي وضعتها ","md",true)  
end



if text == 'تاك للكل' and (Redis:get(LiOn..'tagallgroup'..msg.chat_id) == "open") then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end

local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
local UserInfo = luatele.getUser(v.member_id.user_id)
if UserInfo.first_name ~= "" then
if UserInfo.username then
Creator = "*❆︙مالك المجموعه : @"..UserInfo.username.."*\n"
else
Creator = "❆︙مالك المجموعه : *["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserInfo.id..")\n"
end
luatele.sendText(msg_chat_id,msg_id,Creator,"md",true)  
end
end
end
local Info_Members = Redis:smembers(LiOn.."LiOn:MalekAsase:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n*❆︙قائمه المالكين الاساسيين\n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n*❆︙قائمه المالكين \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(LiOn.."LiOn:TheBasics:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n*❆︙قائمه المنشئين الاساسيين \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Originators:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n*❆︙قائمه المنشئين  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Managers:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n*❆︙قائمه المدراء  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Addictive:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n*❆︙قائمه الادمنيه  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Distinguished:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n*❆︙قائمه المميزين  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = luatele.searchChatMembers(msg_chat_id, "*", 200)
local List_Members = Info_Members.members
listall = '\n*❆︙قائمه الاعضاء \n — — — — — — — — —*\n'
for k, v in pairs(List_Members) do
local UserInfo = luatele.getUser(v.member_id.user_id)
if UserInfo.username ~= "" then
listall = listall.."*"..k.." - @"..UserInfo.username.."*\n"
else
listall = listall.."*"..k.." -* ["..UserInfo.id.."](tg://user?id="..UserInfo.id..")\n"
end
end
luatele.sendText(msg_chat_id,msg_id,listall,"md",true)  
end

if text == 'المطورين الثانويين' or text == 'المطورين الثانوين' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:DevelopersQ:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مطورين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه مطورين الثانويين \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المطورين الثانويين', data = msg.sender_id.user_id..'/DevelopersQ'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المطورين' then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Developers:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مطورين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه مطورين البوت \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المطورين', data = msg.sender_id.user_id..'/Developers'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المالكين' then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.Originators then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' , مالك المجموعه }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مالكين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المالكين \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المالكين', data = msg.sender_id.user_id..'/TheBasicsQ'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'المنشئين الاساسيين' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:TheBasics:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد منشئين اساسيين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المنشئين الاساسيين \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المنشئين الاساسيين', data = msg.sender_id.user_id..'/TheBasics'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'المنشئين' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Originators:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد منشئين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المنشئين  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المنشئين', data = msg.sender_id.user_id..'/Originators'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'المدراء' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Managers:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مدراء حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المدراء  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المدراء', data = msg.sender_id.user_id..'/Managers'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'الادمنيه' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Addictive:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد ادمنيه حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه الادمنيه  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح الادمنيه', data = msg.sender_id.user_id..'/Addictive'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'المميزين' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Distinguished:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مميزين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المميزين  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المميزين', data = msg.sender_id.user_id..'/DelDistinguished'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'المحظورين عام' or text == 'قائمه العام' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:BanAll:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد محظورين عام حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المحظورين عام  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المحظورين عام', data = msg.sender_id.user_id..'/BanAll'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المحظورين' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:BanGroup:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد محظورين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المحظورين  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المحظورين', data = msg.sender_id.user_id..'/BanGroup'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المكتومين' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مكتومين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المكتومين  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المكتومين', data = msg.sender_id.user_id..'/SilentGroupGroup'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end

if text and text:match("^(.*)$") then
if Redis:get(LiOn.."Mero11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
 luatele.sendText(msg_chat_id,msg_id, '\nارسل لي الكلمه الان ')
Redis:set(LiOn.."Mero11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id, "true1")
Redis:set(LiOn.."Mero11:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id, text)
Redis:sadd(LiOn.."Mero11:List:Rd:Sudo", text)
return false end
end
if text and text:match("^(.*)$") then
if Redis:get(LiOn.."Mero11:Set:On"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
 luatele.sendText(msg_chat_id,msg_id,"تم مسح الرد من ردود المتعدده")
Redis:del(LiOn..'Mero11:Add:Rd:Sudo:Text'..text)
Redis:del(LiOn..'Mero11:Add:Rd:Sudo:Text1'..text)
Redis:del(LiOn..'Mero11:Add:Rd:Sudo:Text2'..text)
Redis:del(LiOn.."Mero11:Set:On"..msg.sender_id.user_id..":"..msg.chat_id)
Redis:srem(LiOn.."Mero11:List:Rd:Sudo", text)
return false
end
end 
if text == ("مسح الردود المتعدده عام") then
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."Mero11:List:Rd:Sudo")
for k,v in pairs(list) do  
Redis:del(LiOn.."Mero11:Add:Rd:Sudo:Text"..v) 
Redis:del(LiOn.."Mero11:Add:Rd:Sudo:Text1"..v) 
Redis:del(LiOn.."Mero11:Add:Rd:Sudo:Text2"..v)   
Redis:del(LiOn.."Mero11:List:Rd:Sudo")
end
 luatele.sendText(msg_chat_id,msg_id,"")
end
if text == ("الردود المتعدده عام") then
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."Mero11:List:Rd:Sudo")
text = "\n❆︙قائمة الردود المتعدده عام \n━━━━━━━━\n"
for k,v in pairs(list) do
db = "رساله "
text = text..""..k.." => {"..v.."} => {"..db.."}\n"
end
if #list == 0 then
text = "لا توجد ردود متعدده عامه"
end
 luatele.sendText(msg_chat_id,msg_id,"["..text.."]")
end
if text == "اضف رد عام متعدد" then
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(LiOn.."Mero11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,true)
return  luatele.sendText(msg_chat_id,msg_id,"ارسل الرد الذي اريد اضافته")
end
if text == "مسح رد عام متعدد" then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
Redis:set(LiOn.."Mero11:Set:On"..msg.sender_id.user_id..":"..msg.chat_id,true)
return  luatele.sendText(msg_chat_id,msg_id,"ارسل الان اسم الرد لمسحه ")
end
if text then  
local test = Redis:get(LiOn.."Mero11:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(LiOn.."Mero11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "true1" then
Redis:set(LiOn.."Mero11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd1')
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."Mero11:Add:Rd:Sudo:Text"..test, text)  
end  
 luatele.sendText(msg_chat_id,msg_id,"تم حفظ الرد الاول ارسل الرد الثاني")
return false  
end  
end
if text then  
local test = Redis:get(LiOn.."Mero11:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(LiOn.."Mero11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "rd1" then
Redis:set(LiOn.."Mero11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd2')
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."Mero11:Add:Rd:Sudo:Text1"..test, text)  
end  
 luatele.sendText(msg_chat_id,msg_id,"تم حفظ الرد الثاني ارسل الرد الثالث")
return false  
end  
end
if text then  
local test = Redis:get(LiOn.."Mero11:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(LiOn.."Mero11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "rd2" then
Redis:set(LiOn.."Mero11:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd3')
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(LiOn.."Mero11:Add:Rd:Sudo:Text2"..test, text)  
end  
 luatele.sendText(msg_chat_id,msg_id,"تم حفظ الرد")
return false  
end  
end
if text then
local Text = Redis:get(LiOn.."Mero11:Add:Rd:Sudo:Text"..text)   
local Text1 = Redis:get(LiOn.."Mero11:Add:Rd:Sudo:Text1"..text)   
local Text2 = Redis:get(LiOn.."Mero11:Add:Rd:Sudo:Text2"..text)   
if Text or Text1 or Text2 then 
local texting = {
Text,
Text1,
Text2
}
Textes = math.random(#texting)
 luatele.sendText(msg_chat_id,msg_id,texting[Textes])
end
end
 
if msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo then      
Redis:sadd(LiOn.."LiOn:allM"..msg.chat_id, msg.id)
if Redis:get(LiOn.."LiOn:Status:Del:Media"..msg.chat_id) then    
local Numbardel = Redis:get(LiOn.."LiOn:allM:numdel"..msg.chat_id) or 200
local gmedia = Redis:scard(LiOn.."LiOn:allM"..msg.chat_id)  
if tonumber(gmedia) >= tonumber(Numbardel) then
local liste = Redis:smembers(LiOn.."LiOn:allM"..msg.chat_id)
for k,v in pairs(liste) do
local Mesge = v
if Mesge then
t = "❆︙تم مسح "..k.." من الوسائط تلقائيا\n❆︙يمكنك تعطيل الميزه باستخدام الامر ( `تعطيل المسح التلقائي` )"
luatele.deleteMessages(msg.chat_id,{[1]= Mesge})
end
end
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙بواسطه : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
luatele.sendText(msg.chat_id,msg.id, Teext..t,"md",true)
Redis:del(LiOn.."LiOn:allM"..msg.chat_id)
end
end
end
if text and text:match("^ضع عدد المسح (%d+)$") then  
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
local Numbardel = text:match("^ضع عدد المسح (%d+)$")
Redis:set(LiOn.."LiOn:allM:numdel"..msg.chat_id,Numbardel) 
luatele.sendText(msg_chat_id,msg_id, 'تم تعيين العدد  الى : '..Numbardel)
end

if text == ("امسح") and Redis:get(LiOn..'LiOn:Aldel:Chat'..msg.chat_id)  and Redis:get(LiOn..'LiOn:Aldel:Chatall')  then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local list = Redis:smembers(LiOn.."LiOn:allM"..msg.chat_id)
for k,v in pairs(list) do
local Message = v
if Message then
t = "❆︙تم مسح "..k.." من الوسائط الموجوده"
luatele.deleteMessages(msg.chat_id,{[1]= Message})
Redis:del(LiOn.."LiOn:allM"..msg.chat_id)
end
end
if #list == 0 then
t = "❆︙لا يوجد ميديا في المجموعه"
end

local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙بواسطه : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
luatele.sendText(msg.chat_id,msg.id, Teext..t,"md",true)
end
if text == ("الميديا") then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local gmria = Redis:scard(LiOn.."LiOn:allM"..msg.chat_id)  
 luatele.sendText(msg_chat_id,msg_id,"❆︙عدد الميديا الموجود هو (* "..gmria.." *)","md")
end

if text and text:match("^برج (.*)$") and not Redis:get(LiOn.."brjj"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Textbrj = text:match("^برج (.*)$")
gk = io.popen('curl -s "https://apiabs.ml/brg.php?brg='..URL.escape(Textbrj)..'"'):read('*a')
br = JSON.decode(gk)
luatele.sendText(msg_chat_id,msg_id, br.ok.abs)
end

if text == "غنيلي" or text == "غني" then 
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn.."knele"..msg.chat_id) then
Abs = math.random(2,140); 
local Text ='*❆‍︙تم اختيار الاغنيه لك*'
local MsgId = msg.id/2097152/0.5
local MSGID = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/TEAMSUL/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MSGID.."&parse_mode=markdown") 
end
end
if text and (text == "شعر" or text == "↫ شعر ✯") and not Redis:get(LiOn.."LiOn:sh3ir:Abs"..msg.chat_id) then
Abs = math.random(2,140); 
local Text ="*❆︙تم اختيار الشعر لك فقط*"
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendVoice?chat_id=" .. msg.chat_id .. "&voice=https://t.me/L1BBBL/"..Abs.."&caption=" .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end

if text and text:match('^حظر عام @(%S+)$') then
local UserName = text:match('^حظر عام @(%S+)$')
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if Controllerbanall(msg_chat_id,UserId_Info.id) == true then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:BanAll:Groups",UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:BanAll:Groups",UserId_Info.id) 
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'banned',0)
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم حظره عام من المجموعات ").Reply,"md",true)  
end
end
if text and text:match('^الغاء حظر عام @(%S+)$') then
local UserName = text:match('^الغاء العام @(%S+)$')or text:match('^الغاء حظر عام @(%S+)$')
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:BanAll:Groups",UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم الغاء حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:BanAll:Groups",UserId_Info.id) 
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم الغاء حظره عام من المجموعات  ").Reply,"md",true)  
end
end
if text and text:match('^حظر @(%S+)$') then
local UserName = text:match('^حظر @(%S+)$')
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Addictive then
testmod = true
else
testmod = false
end
if testmod == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,UserId_Info.id) 
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'banned',0)
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم حظره من المجموعه ").Reply,"md",true)  
end
end
if text and text:match('^الغاء حظر @(%S+)$') then
local UserName = text:match('^الغاء حظر @(%S+)$')
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Addictive then
testmod = true
else
testmod = false
end
if testmod == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم الغاء حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,UserId_Info.id) 
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم الغاء حظره من المجموعه  ").Reply,"md",true)  
end
end

if text and text:match('^كتم @(%S+)$') then
local UserName = text:match('^كتم @(%S+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).Delmsg == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه مسح الرسائل* ',"md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if StatusSilent(msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم كتمه في المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم كتمه في المجموعه  ").Reply,"md",true)  
end
end
if text and text:match('^الغاء كتم @(%S+)$') then
local UserName = text:match('^الغاء كتم @(%S+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم الغاء كتمه من المجموعه ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,UserId_Info.id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم الغاء كتمه من المجموعه ").Reply,"md",true)  
end
end
if text and text:match('^تقييد (%d+) (.*) @(%S+)$') then
local UserName = {text:match('^تقييد (%d+) (.*) @(%S+)$') }
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local UserId_Info = luatele.searchPublicChat(UserName[3])
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName[3] and UserName[3]:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
if UserName[2] == 'يوم' then
Time_Restrict = UserName[1]:match('(%d+)')
Time = Time_Restrict * 86400
end
if UserName[2] == 'ساعه' then
Time_Restrict = UserName[1]:match('(%d+)')
Time = Time_Restrict * 3600
end
if UserName[2] == 'دقيقه' then
Time_Restrict = UserName[1]:match('(%d+)')
Time = Time_Restrict * 60
end
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,0,0,0,0,0,0,0,0,tonumber(msg.date+Time)})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تقييده في المجموعه \n❆︙لمدة : "..UserName[1]..' '..UserName[2]).Reply,"md",true)  
end

if text and text:match('^تقييد (%d+) (.*)$') and msg.reply_to_message_id ~= 0 then
local TimeKed = {text:match('^تقييد (%d+) (.*)$') }
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
if TimeKed[2] == 'يوم' then
Time_Restrict = TimeKed[1]:match('(%d+)')
Time = Time_Restrict * 86400
end
if TimeKed[2] == 'ساعه' then
Time_Restrict = TimeKed[1]:match('(%d+)')
Time = Time_Restrict * 3600
end
if TimeKed[2] == 'دقيقه' then
Time_Restrict = TimeKed[1]:match('(%d+)')
Time = Time_Restrict * 60
end
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0,tonumber(msg.date+Time)})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تقييده في المجموعه \n❆︙لمدة : "..TimeKed[1]..' '..TimeKed[2]).Reply,"md",true)  
end

if text and text:match('^تقييد (%d+) (.*) (%d+)$') then
local UserId = {text:match('^تقييد (%d+) (.*) (%d+)$') }
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local UserInfo = luatele.getUser(UserId[3])
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId[3]) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId[3]).." } *","md",true)  
end
if UserId[2] == 'يوم' then
Time_Restrict = UserId[1]:match('(%d+)')
Time = Time_Restrict * 86400
end
if UserId[2] == 'ساعه' then
Time_Restrict = UserId[1]:match('(%d+)')
Time = Time_Restrict * 3600
end
if UserId[2] == 'دقيقه' then
Time_Restrict = UserId[1]:match('(%d+)')
Time = Time_Restrict * 60
end
luatele.setChatMemberStatus(msg.chat_id,UserId[3],'restricted',{1,0,0,0,0,0,0,0,0,tonumber(msg.date+Time)})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId[3],"\n❆︙تم تقييده في المجموعه \n❆︙لمدة : "..UserId[1]..' ' ..UserId[2]).Reply,"md",true)  
end
if text and text:match('^تقييد @(%S+)$') then
local UserName = text:match('^تقييد @(%S+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,0,0,0,0,0,0,0,0})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تقييده في المجموعه ").Reply,"md",true)  
end

if text and text:match('^الغاء التقييد @(%S+)$') then
local UserName = text:match('^الغاء التقييد @(%S+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم الغاء تقييده من المجموعه").Reply,"md",true)  
end

if text and text:match('^طرد @(%S+)$') then
local UserName = text:match('^طرد @(%S+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId_Info.id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end 
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'banned',0)
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم طرده من المجموعه ").Reply,"md",true)  
end
if text == ('حظر عام') and msg.reply_to_message_id ~= 0 then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if Controllerbanall(msg_chat_id,Message_Reply.sender_id.user_id) == true then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:BanAll:Groups",Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:BanAll:Groups",Message_Reply.sender_id.user_id) 
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'banned',0)
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم حظره عام من المجموعات ").Reply,"md",true)  
end
end
if text == ('الغاء العام') or text == ('الغاء حظر عام') and msg.reply_to_message_id ~= 0 then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:BanAll:Groups",Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم الغاء حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:BanAll:Groups",Message_Reply.sender_id.user_id) 
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم الغاء حظره عام من المجموعات  ").Reply,"md",true)  
end
end
if text == ('حظر') and msg.reply_to_message_id ~= 0 then
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Addictive then
testmod = true
else
testmod = false
end
if testmod == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'banned',0)
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم حظره من المجموعه ").Reply,"md",true)  
end
end
if text == ('الغاء حظر') or text == ('الغاء الحظر') and   msg.reply_to_message_id ~= 0 then
if Redis:sismember(LiOn.."LiOn:Distinguishedall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Addictive then
testmod = true
else
testmod = false
end
if testmod == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
if not Redis:sismember(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم الغاء حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم الغاء حظره من المجموعه  ").Reply,"md",true)  
end
end

if text == ('كتم') and msg.reply_to_message_id ~= 0 then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).Delmsg == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه مسح الرسائل* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply.sender_id.Merotele == "messageSenderChat" then
--var(Message_Reply.sender_id.chat_id)
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم كتم القناة من المجموعه  ","md",true)  
end
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if StatusSilent(msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم كتمه في المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم كتمه في المجموعه  ").Reply,"md",true)  
end
end
if text == ('الغاء كتم') or text == ('الغاء الكتم') and msg.reply_to_message_id ~= 0 then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply.sender_id.Merotele == "messageSenderChat" then
--var(Message_Reply.sender_id.chat_id)
Redis:srem(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم الغاء كتم القناة من المجموعه  ","md",true)  
end
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم الغاء كتمه من المجموعه ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم الغاء كتمه من المجموعه ").Reply,"md",true)  
end
end

if text == ('تقييد') and msg.reply_to_message_id ~= 0 then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تقييده في المجموعه ").Reply,"md",true)  
end

if text == ('الغاء التقييد') or text == ('الغاء تقييد') and msg.reply_to_message_id ~= 0 then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم الغاء تقييده من المجموعه").Reply,"md",true)  
end

if text == ('طرد') and msg.reply_to_message_id ~= 0 then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,Message_Reply.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'banned',0)
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم طرده من المجموعه ").Reply,"md",true)  
end

if text and text:match('^حظر عام (%d+)$') then
local UserId = text:match('^حظر عام (%d+)$')
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if Controllerbanall(msg_chat_id,UserId) == true then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:BanAll:Groups",UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:BanAll:Groups",UserId) 
luatele.setChatMemberStatus(msg.chat_id,UserId,'banned',0)
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم حظره عام من المجموعات ").Reply,"md",true)  
end
end
if text and text:match('^الغاء العام (%d+)$') then
local UserId = text:match('^الغاء العام (%d+)$')
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,1,1,1,1,1,1,1,1})
if not Redis:sismember(LiOn.."LiOn:BanAll:Groups",UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم الغاء حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:BanAll:Groups",UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم الغاء حظره عام من المجموعات  ").Reply,"md",true)  
end
end
if text and text:match('^حظر (%d+)$') then
local UserId = text:match('^حظر (%d+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,UserId) 
luatele.setChatMemberStatus(msg.chat_id,UserId,'banned',0)
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم حظره من المجموعه ").Reply,"md",true)  
end
end
if text and text:match('^الغاء حظر (%d+)$') then
local UserId = text:match('^الغاء حظر (%d+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,1,1,1,1,1,1,1,1})
if not Redis:sismember(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم الغاء حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم الغاء حظره من المجموعه  ").Reply,"md",true)  
end
end

if text and text:match('^كتم (%d+)$') then
local UserId = text:match('^كتم (%d+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).Delmsg == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه مسح الرسائل* ',"md",true)  
end
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if StatusSilent(msg_chat_id,UserId) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
if Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم كتمه في المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم كتمه في المجموعه  ").Reply,"md",true)  
end
end
if text and text:match('^الغاء كتم (%d+)$') then
local UserId = text:match('^الغاء كتم (%d+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if not Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,UserId) then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم الغاء كتمه من المجموعه ").Reply,"md",true)  
else
Redis:srem(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,UserId) 
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم الغاء كتمه من المجموعه ").Reply,"md",true)  
end
end

if text and text:match('^تقييد (%d+)$') then
local UserId = text:match('^تقييد (%d+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,0,0,0,0,0,0,0,0})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم تقييده في المجموعه ").Reply,"md",true)  
end

if text and text:match('^الغاء التقييد (%d+)$') then
local UserId = text:match('^الغاء التقييد (%d+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم الغاء تقييده من المجموعه").Reply,"md",true)  
end

if text and text:match('^طرد (%d+)$') then
local UserId = text:match('^طرد (%d+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين","md",true)
end 
local UserInfo = luatele.getUser(UserId)
if UserInfo.Merotele == "error" and UserInfo.code == 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
luatele.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId,"❆︙تم طرده من المجموعه ").Reply,"md",true)  
end

if text == "اطردني" or text == "طردني" then
if not Redis:get(LiOn.."LiOn:Status:KickMe"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"*❆︙امر اطردني تم تعطيله من قبل المدراء *","md",true)  
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if StatusCanOrNotCan(msg_chat_id,msg.sender_id.user_id) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,msg.sender_id.user_id).." } *","md",true)  
end
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
KickMe = true
elseif (StatusMember == "chatMemberStatusAdministrator") then
KickMe = true
else
KickMe = false
end
if KickMe == true then
return luatele.sendText(msg_chat_id,msg_id,"*❆︙عذرا لا استطيع طرد ادمنيه ومنشئين المجموعه*","md",true)    
end
luatele.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم طردك من المجموعه بنائآ على طلبك").Reply,"md",true)  
end

if text == 'ادمنيه الكروب' or text == 'المشرفين' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
listAdmin = '\n*❆︙قائمه المشرفين \n — — — — — — — — —*\n'
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
Creator = '→ *{ المالك }*'
else
Creator = ""
end
local UserInfo = luatele.getUser(v.member_id.user_id)
if UserInfo.username ~= "" then
listAdmin = listAdmin.."*"..k.." - @"..UserInfo.username.."* "..Creator.."\n"
else
listAdmin = listAdmin.."*"..k.." - *["..UserInfo.id.."](tg://user?id="..UserInfo.id..") "..Creator.."\n"
end
end
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
if Info_Chats.photo then
return luatele.sendPhoto(msg.chat_id, msg.id, Info_Chats.photo.sizes[1].photo.remote.id,listAdmin,"md")
else
luatele.sendText(msg_chat_id,msg_id,listAdmin,"md",true)  
end
end
if text == 'رفع الادمنيه' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
y = 0
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,v.member_id.user_id) 
x = x + 1
else
Redis:sadd(LiOn.."LiOn:Addictive:Group"..msg_chat_id,v.member_id.user_id) 
y = y + 1
end
end
end
luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تم ترقيه - ('..y..') ادمنيه *',"md",true)  
end

if text == 'المالك' and not Redis:get(LiOn..'lock_getadmin'..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
local UserInfo = luatele.getUser(v.member_id.user_id)
if UserInfo.first_name == "" then
luatele.sendText(msg_chat_id,msg_id,"*❆︙اوبس , المالك حسابه محذوف *","md",true)  
return false
end 
local photo = luatele.getUserProfilePhotos(UserInfo.id)
local InfoUser = luatele.getUserFullInfo(UserInfo.id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = ''
end
if UserInfo.username then
UserInfousername = '[@'..UserInfo.username..']'
else
UserInfousername = 'لا يوجد'
end

if photo.total_count > 0 then
local TestText = "- معلومات المالك : \n\n*name:* ["..UserInfo.first_name.."](tg://user?id="..UserInfo.id..")\n\n*user :* "..UserInfousername.."\n\n *Bio:* ["..Bio.."]"
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(TestText)..'&photo='..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id..'&reply_to_message_id='..msg_id..'&parse_mode=markdown')  
else
local TestText = "- معلومات المالك : \n\n*name:* ["..UserInfo.first_name.."](tg://user?id="..UserInfo.id..")\n\n*user :* "..UserInfousername.."\n\n *Bio:* ["..Bio.."]"
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TestText).."&reply_to_message_id="..msg_id.."&parse_mode=markdown")
end

end
end
end
if text == 'رفع المالك' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
local UserInfo = luatele.getUser(v.member_id.user_id)
if UserInfo.first_name == "" then
luatele.sendText(msg_chat_id,msg_id,"*❆︙اوبس , المالك حسابه محذوف *","md",true)  
return false
end 
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,v.member_id.user_id) 
luatele.sendText(msg_chat_id,msg_id,"*❆︙تم رفع المالك*","md",true)  
return false
end
end
end

if text == 'كشف البوتات' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Bots", "*", 0, 200)
local List_Members = Info_Members.members
listBots = '\n*❆︙قائمه البوتات \n — — — — — — — — —*\n'
x = 0
for k, v in pairs(List_Members) do
local UserInfo = luatele.getUser(v.member_id.user_id)
if Info_Members.members[k].status.Merotele == "chatMemberStatusAdministrator" then
x = x + 1
Admin = '→ *{ ادمن }*'
else
Admin = ""
end
listBots = listBots.."*"..k.." - @"..UserInfo.username.."* "..Admin.."\n"
end
luatele.sendText(msg_chat_id,msg_id,listBots.."*\n— — — — — — — — —\n❆︙عدد البوتات التي هي ادمن ( "..x.." )*","md",true)  
end


 
if text == 'المقيدين' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Recent", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
local y = false
restricted = '\n*❆︙قائمه المقيديين \n — — — — — — — — —*\n'
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.is_member == true and Info_Members.members[k].status.Merotele == "chatMemberStatusRestricted" then
y = true
x = x + 1
local UserInfo = luatele.getUser(v.member_id.user_id)
if UserInfo.username ~= "" then
restricted = restricted.."*"..x.." - @"..UserInfo.username.."*\n"
else
restricted = restricted.."*"..x.." - *["..UserInfo.id.."](tg://user?id="..UserInfo.id..") \n"
end
end
end
if y == true then
luatele.sendText(msg_chat_id,msg_id,restricted,"md",true)  
else
luatele.sendText(msg_chat_id,msg_id,'❆︙لا يوجد مقيدين ',"md",true)  
end
end


if text and text:match(Bot_Name.." غادر$") then  
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
luatele.sendText(msg_chat_id,msg_id,"*\n❆︙تم مغادرة المجموعه بامر من المطور *","md",true)  
local Left_Bot = luatele.leaveChat(msg.chat_id)
end
if text and text:match('^غادر (-100%d+)$') then
local Chatid = text:match('^غادر (-100%d+)$')
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
luatele.leaveChat(Chatid)
luatele.sendText(msg_chat_id,msg_id,'- تم مغادره المجموعه  ')
end 
if text == "@all" or text == "تاك عام" or text == "all" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."tagall@all"..msg_chat_id) == "open" then
local Info_Members = luatele.searchChatMembers(msg_chat_id, "*", 200)
x = 0
tags = 0
local list = Info_Members.members
for k, v in pairs(list) do
local UserInfo = luatele.getUser(v.member_id.user_id)
if x == 20 or x == tags or k == 0 then
tags = x + 20
listall = ""
end
x = x + 1
if UserInfo.first_name ~= '' then
listall = listall.." ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserInfo.id.."),"
end
if x == 20 or x == tags or k == 0 then
luatele.sendText(msg_chat_id,msg_id,listall,"md",true)  
end
end
end
end
if text and text:match("@all (.*)")  then
textee = text:match("@all (.*)") 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."tagall@all"..msg_chat_id) == "open" then
local Info_Members = luatele.searchChatMembers(msg_chat_id, "*", 200)
x = 0
tags = 0
local list = Info_Members.members
for k, v in pairs(list) do
local UserInfo = luatele.getUser(v.member_id.user_id)
if x == 20 or x == tags or k == 0 then
tags = x + 20
listall = ""
end
x = x + 1
if UserInfo.first_name ~= '' then
listall = listall.." ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserInfo.id.."),"
end
if x == 20 or x == tags or k == 0 then
luatele.sendText(msg_chat_id,msg_id,textee.."\n"..listall,"md",true)  
end
end
end
end
if text == 'تاك' and (Redis:get(LiOn..'tagallgroup'..msg.chat_id) == "open") then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = luatele.searchChatMembers(msg_chat_id, "*", 200)
local List_Members = Info_Members.members
listall = '\n*❆︙قائمه الاعضاء \n — — — — — — — — —*\n'
for k, v in pairs(List_Members) do
local UserInfo = luatele.getUser(v.member_id.user_id)
if UserInfo.username ~= "" then
listall = listall.."*"..k.." - @"..UserInfo.username.."*\n"
else
listall = listall.."*"..k.." -* ["..UserInfo.id.."](tg://user?id="..UserInfo.id..")\n"
end
end
luatele.sendText(msg_chat_id,msg_id,listall,"md",true)  
end

if text == "قفل ارسال القناة" or text == "قفل القنوات" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:SenderChat"..msg_chat_id,true) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل ارسال القناة").Lock,"md",true)  
return false
end 
if text == "فتح ارسال القناة" or text == "فتح القنوات" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:SenderChat"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح ارسال القناة").unLock,"md",true)  
return false
end 
if text == "قفل الفشار" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:phshar"..msg_chat_id,true) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الفشار").Lock,"md",true)  
return false
end 
if text == "فتح الفشار" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:phshar"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الفشار").unLock,"md",true)  
return false
end 
if text == "قفل الكفر" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:alkfr"..msg_chat_id,true) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الكفر").Lock,"md",true)  
return false
end 
if text == "فتح الكفر" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:alkfr"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الكفر").unLock,"md",true)  
return false
end 
if text == "قفل الانكليزيه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:english"..msg_chat_id,true) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الانكليزيه").Lock,"md",true)  
return false
end 
if text == "فتح الانكليزيه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:english"..msg_chat_id) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الانكليزيه").unLock,"md",true)  
return false
end 


if text == 'نزلني' and not Redis:get(LiOn..'LiOn:Nzlne:Abs'..msg.chat_id) then
if Controllerbanall(msg_chat_id,msg.sender_id.user_id) == true then 
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ لا يمكنني تنزيل { "..Controller(msg_chat_id,msg.sender_id.user_id).." } *","md",true)  
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ نعم }', data = msg.sender_id.user_id..'/Nzlne'},{text = '{ لا }', data = msg.sender_id.user_id..'/noNzlne'},
},
{
{text = '𝑴𝑬𝑹𝑶 𝑺𝑶𝑼??𝑪𝑬 ™®', url = 't.me/ul_39'}, 
},
}
}
return luatele.sendText(msg_chat_id,msg_id,' ❆︙عليك الاجابه اذا كمت تريد استمرار الامر',"md",false, false, false, false, reply_markup)
end


if text =="صورتي" and not Redis:get(LiOn..'myphoto'..msg.chat_id) and msg.Distinguished  then
local photo = luatele.getUserProfilePhotos(msg.sender_id.user_id)
local textrand = {"10%","20%","30%","40%","50%","60%","70%","80%","90%","100%",}
local Text_Rand = textrand[math.random(#textrand)] 
if photo.total_count > 0 then
return luatele.sendPhoto(msg.chat_id, msg.id, photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id,"❆︙نسبه جمالك من 100 هي  : "..Text_Rand,"md")
else
return luatele.sendText(msg_chat_id,msg_id,'لا يوجد صوره لك',"md",true) 
end
end
if text and text:match("^معنى اسم (.*)$") then 
local TextMean = text:match("^معنى اسم (.*)$") or text:match("^معنى اسم (.*)$") 
if not Redis:get(LiOn..'mynames'..msg.chat_id)  then
UrlMean = io.popen('curl -s "https://apiabs.ml/Mean.php?Abs='..URL.escape(TextMean)..'"'):read('*a')
Mean = JSON.decode(UrlMean) 
luatele.sendText(msg_chat_id,msg_id, Mean.ok.abs)
end
end

if text and text:match("^كول (.*)$") and Redis:get(LiOn..'kolklma'..msg.chat_id) then
local txt = {string.match(text, "^(كول) (.*)$")}
return luatele.sendText(msg_chat_id,msg_id, txt[2], 'md')
end
if text and text:match("^احسب (.*)$") or text and text:match("^عمري (.*)$") then 
local TextAge = text:match("^احسب (.*)$") or text:match("^عمري (.*)$") 
if not Redis:get(LiOn..'myages'..msg.chat_id)  then
UrlAge = io.popen('curl -s "http://185.185.127.158/youtube/age.php?Age='..URL.escape(TextAge)..'"'):read('*a')
Age = JSON.decode(UrlAge)
luatele.sendText(msg_chat_id,msg_id, Age.Age.YouAge)
end
end

if text == "اغنية" or text == "اغنيه" then 
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn..'myniknea'..msg.chat_id) then
Abs = math.random(3,205); 
print(Abs)
local Text ='*❆‍︙تم اختيار الاغنيه لك*'
local MsgId = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendaudio?chat_id=' .. msg.chat_id .. '&audio=https://t.me/meromp3/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 

end
end 
if text == "قفل الاباحي" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end

luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الاباحي").Lock,"md",true)  
return false
end 
if text == "فتح الاباحي" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 

luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الاباحي").unLock,"md",true)  
return false
end 
if text == "قفل التفليش" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:tphlesh"..msg_chat_id,true) 
Redis:del(LiOn.."LiOn:Status:IdPhoto"..msg_chat_id) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التفليش").Lock,"md",true)  
return false
end 
if text == "فتح التفليش" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:tphlesh"..msg_chat_id)  
Redis:set(LiOn.."LiOn:Status:IdPhoto"..msg_chat_id,true) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح التفليش").unLock,"md",true)  
return false
end 
if text == "قفل الفارسيه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:farsia"..msg_chat_id,true) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الفارسيه").Lock,"md",true)  
return false
end 
if text == "فتح الفارسيه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:farsia"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الفارسيه").unLock,"md",true)  
return false
end 

if text == "قفل الدردشه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:text"..msg_chat_id,true) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الدردشه").Lock,"md",true)  
return false
end 
if text == "قفل الاضافه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(LiOn.."LiOn:Lock:AddMempar"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل اضافة الاعضاء").Lock,"md",true)  
return false
end 
if text == "قفل الدخول" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(LiOn.."LiOn:Lock:Join"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل دخول الاعضاء").Lock,"md",true)  
return false
end 
if text == "قفل البوتات" then  
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(LiOn.."LiOn:Lock:Bot:kick"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل البوتات").Lock,"md",true)  
return false
end 
if text == "قفل البوتات بالطرد" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(LiOn.."LiOn:Lock:Bot:kick"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل البوتات").lockKick,"md",true)  
return false
end 
if text == "قفل الاشعارات" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:set(LiOn.."LiOn:Lock:tagservr"..msg_chat_id,true)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الاشعارات").Lock,"md",true)  
return false
end 
if text == "قفل التثبيت" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:set(LiOn.."LiOn:lockpin"..msg_chat_id,(luatele.getChatPinnedMessage(msg_chat_id).id or true)) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التثبيت هنا").Lock,"md",true)  
return false
end 
if text == "قفل التعديل" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(LiOn.."LiOn:Lock:edittext"..msg_chat_id,true) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التعديل").Lock,"md",true)  
return false
end 
if text == "قفل تعديل الميديا" then 
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(LiOn.."LiOn:Lock:edit"..msg_chat_id,true) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل تعديل الميديا").Lock,"md",true)  
return false
end 
if text == "قفل الكل" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:set(LiOn.."LiOn:Lock:tagservrbot"..msg_chat_id,true)   
list ={"Lock:Bot:kick","Lock:User:Name","Lock:hashtak","Lock:Cmd","Lock:Link","Lock:forward","Lock:Keyboard","Lock:geam","Lock:Photo","Lock:Animation","Lock:Video","Lock:Audio","Lock:vico","Lock:Sticker","Lock:Document","Lock:Unsupported","Lock:Markdaun","Lock:Contact","Lock:Spam"}
for i,lock in pairs(list) do 
Redis:set(LiOn..'LiOn:'..lock..msg_chat_id,"del")    
end
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل جميع الاوامر").Lock,"md",true)  
return false
end 

if text == "قفل وسائط المميزين" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:set(LiOn.."LiOn:Lock:AlUasat"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل جميع الوسائط المميزين").Lock,"md",true)  
return false
end 
if text == "فتح وسائط المميزين" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:AlUasat"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فـتح جميع الوسائط المميزين").unLock,"md",true)  
return false
end 

if text == "قفل الوسائط" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:set(LiOn.."LiOn:Lock:Animation"..msg_chat_id,"del")  
Redis:set(LiOn.."LiOn:Lock:Photo"..msg_chat_id,"del")  
Redis:set(LiOn.."LiOn:Lock:vico"..msg_chat_id,"del")  
Redis:set(LiOn.."LiOn:Lock:Audio"..msg_chat_id,"del")  
Redis:set(LiOn.."LiOn:Lock:Sticker"..msg_chat_id,"del")  
Redis:set(LiOn.."LiOn:Lock:Video"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل جميع الوسائط").Lock,"md",true)  
return false
end 
if text == "فتح الوسائط" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:Animation"..msg_chat_id)  
Redis:del(LiOn.."LiOn:Lock:Photo"..msg_chat_id)  
Redis:del(LiOn.."LiOn:Lock:vico"..msg_chat_id)  
Redis:del(LiOn.."LiOn:Lock:Audio"..msg_chat_id)  
Redis:del(LiOn.."LiOn:Lock:Sticker"..msg_chat_id)  
Redis:del(LiOn.."LiOn:Lock:Video"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فـتح جميع الوسائط").unLock,"md",true)  
return false
end 
--------------------------------------------------------------------------------------------------------------
if text == "فتح الاضافه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:AddMempar"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح اضافة الاعضاء").unLock,"md",true)  
return false
end 
if text == "فتح الدردشه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:text"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الدردشه").unLock,"md",true)  
return false
end 
if text == "فتح الدخول" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:Join"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح دخول الاعضاء").unLock,"md",true)  
return false
end 
if text == "فتح البوتات" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:Bot:kick"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فـتح البوتات").unLock,"md",true)  
return false
end 
if text == "فتح البوتات " then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:Bot:kick"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فـتح البوتات").unLock,"md",true)  
return false
end 
if text == "فتح الاشعارات" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:del(LiOn.."LiOn:Lock:tagservr"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فـتح الاشعارات").unLock,"md",true)  
return false
end 
if text == "فتح التثبيت" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:lockpin"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فـتح التثبيت هنا").unLock,"md",true)  
return false
end 
if text == "فتح التعديل" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:edittext"..msg_chat_id) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فـتح التعديل").unLock,"md",true)  
return false
end 
if text == "فتح تعديل الميديا" then 
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:edit"..msg_chat_id) 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فـتح تعديل الميديا").unLock,"md",true)  
return false
end 
if text == "فتح الكل" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(LiOn.."LiOn:Lock:tagservrbot"..msg_chat_id)   
list ={"Lock:Bot:kick","Lock:User:Name","Lock:hashtak","Lock:Cmd","Lock:Link","Lock:forward","Lock:Keyboard","Lock:geam","Lock:Photo","Lock:Animation","Lock:Video","Lock:Audio","Lock:vico","Lock:Sticker","Lock:Document","Lock:Unsupported","Lock:Markdaun","Lock:Contact","Lock:Spam"}
for i,lock in pairs(list) do 
Redis:del(LiOn..'LiOn:'..lock..msg_chat_id)    
end
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فـتح جميع الاوامر").unLock,"md",true)  
return false
end 
--------------------------------------------------------------------------------------------------------------
if text == "قفل التكرار" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:hset(LiOn.."LiOn:Spam:Group:User"..msg_chat_id ,"Spam:User","del")  
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التكرار").Lock,"md",true)  
elseif text == "قفل التكرار بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:hset(LiOn.."LiOn:Spam:Group:User"..msg_chat_id ,"Spam:User","keed")  
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التكرار").lockKid,"md",true)  
elseif text == "قفل التكرار بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:hset(LiOn.."LiOn:Spam:Group:User"..msg_chat_id ,"Spam:User","mute")  
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التكرار").lockKtm,"md",true)  
elseif text == "قفل التكرار بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:hset(LiOn.."LiOn:Spam:Group:User"..msg_chat_id ,"Spam:User","kick")  
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التكرار").lockKick,"md",true)  
elseif text == "فتح التكرار" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:hdel(LiOn.."LiOn:Spam:Group:User"..msg_chat_id ,"Spam:User")  
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح التكرار").unLock,"md",true)  
end
if text == "قفل الروابط" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Link"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الروابط").Lock,"md",true)  
return false
end 
if text == "قفل الروابط بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Link"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الروابط").lockKid,"md",true)  
return false
end 
if text == "قفل الروابط بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Link"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الروابط").lockKtm,"md",true)  
return false
end 
if text == "قفل الروابط بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Link"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الروابط").lockKick,"md",true)  
return false
end 
if text == "فتح الروابط" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Link"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الروابط").unLock,"md",true)  
return false
end 
if text == "قفل المعرفات" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:User:Name"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل المعرفات").Lock,"md",true)  
return false
end 
if text == "قفل المعرفات بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:User:Name"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل المعرفات").lockKid,"md",true)  
return false
end 
if text == "قفل المعرفات بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:User:Name"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل المعرفات").lockKtm,"md",true)  
return false
end 
if text == "قفل المعرفات بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:User:Name"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل المعرفات").lockKick,"md",true)  
return false
end 
if text == "فتح المعرفات" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:User:Name"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح المعرفات").unLock,"md",true)  
return false
end 
if text == "قفل التاك" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:hashtak"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التاك").Lock,"md",true)  
return false
end 
if text == "قفل التاك بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:hashtak"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التاك").lockKid,"md",true)  
return false
end 
if text == "قفل التاك بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:hashtak"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التاك").lockKtm,"md",true)  
return false
end 
if text == "قفل التاك بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:hashtak"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التاك").lockKick,"md",true)  
return false
end 
if text == "فتح التاك" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:hashtak"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح التاك").unLock,"md",true)  
return false
end 
if text == "قفل الشارحه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Cmd"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الشارحه").Lock,"md",true)  
return false
end 
if text == "قفل الشارحه بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Cmd"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الشارحه").lockKid,"md",true)  
return false
end 
if text == "قفل الشارحه بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Cmd"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الشارحه").lockKtm,"md",true)  
return false
end 
if text == "قفل الشارحه بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Cmd"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الشارحه").lockKick,"md",true)  
return false
end 
if text == "فتح الشارحه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Cmd"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الشارحه").unLock,"md",true)  
return false
end 
if text == "قفل الصور"then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Photo"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الصور").Lock,"md",true)  
return false
end 
if text == "قفل الصور بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Photo"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الصور").lockKid,"md",true)  
return false
end 
if text == "قفل الصور بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Photo"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الصور").lockKtm,"md",true)  
return false
end 
if text == "قفل الصور بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Photo"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الصور").lockKick,"md",true)  
return false
end 
if text == "فتح الصور" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Photo"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الصور").unLock,"md",true)  
return false
end 
if text == "قفل الفيديو" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Video"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الفيديو").Lock,"md",true)  
return false
end 
if text == "قفل الفيديو بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Video"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الفيديو").lockKid,"md",true)  
return false
end 
if text == "قفل الفيديو بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Video"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الفيديو").lockKtm,"md",true)  
return false
end 
if text == "قفل الفيديو بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Video"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الفيديو").lockKick,"md",true)  
return false
end 
if text == "فتح الفيديو" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Video"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الفيديو").unLock,"md",true)  
return false
end 
if text == "قفل المتحركه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Animation"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل المتحركه").Lock,"md",true)  
return false
end 
if text == "قفل المتحركه بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Animation"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل المتحركه").lockKid,"md",true)  
return false
end 
if text == "قفل المتحركه بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Animation"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل المتحركه").lockKtm,"md",true)  
return false
end 
if text == "قفل المتحركه بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Animation"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل المتحركه").lockKick,"md",true)  
return false
end 
if text == "فتح المتحركه" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Animation"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح المتحركه").unLock,"md",true)  
return false
end 
if text == "قفل الالعاب" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:geam"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الالعاب").Lock,"md",true)  
return false
end 
if text == "قفل الالعاب بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:geam"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الالعاب").lockKid,"md",true)  
return false
end 
if text == "قفل الالعاب بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:geam"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الالعاب").lockKtm,"md",true)  
return false
end 
if text == "قفل الالعاب بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:geam"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الالعاب").lockKick,"md",true)  
return false
end 
if text == "فتح الالعاب" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:geam"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الالعاب").unLock,"md",true)  
return false
end 
if text == "قفل الاغاني" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Audio"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الاغاني").Lock,"md",true)  
return false
end 
if text == "قفل الاغاني بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Audio"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الاغاني").lockKid,"md",true)  
return false
end 
if text == "قفل الاغاني بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Audio"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الاغاني").lockKtm,"md",true)  
return false
end 
if text == "قفل الاغاني بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Audio"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الاغاني").lockKick,"md",true)  
return false
end 
if text == "فتح الاغاني" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Audio"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الاغاني").unLock,"md",true)  
return false
end 
if text == "قفل الصوت" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:vico"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الصوت").Lock,"md",true)  
return false
end 
if text == "قفل الصوت بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:vico"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الصوت").lockKid,"md",true)  
return false
end 
if text == "قفل الصوت بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:vico"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الصوت").lockKtm,"md",true)  
return false
end 
if text == "قفل الصوت بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:vico"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الصوت").lockKick,"md",true)  
return false
end 
if text == "فتح الصوت" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:vico"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الصوت").unLock,"md",true)  
return false
end 
if text == "قفل الكيبورد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Keyboard"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الكيبورد").Lock,"md",true)  
return false
end 
if text == "قفل الكيبورد بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Keyboard"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الكيبورد").lockKid,"md",true)  
return false
end 
if text == "قفل الكيبورد بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Keyboard"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الكيبورد").lockKtm,"md",true)  
return false
end 
if text == "قفل الكيبورد بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Keyboard"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الكيبورد").lockKick,"md",true)  
return false
end 
if text == "فتح الكيبورد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Keyboard"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الكيبورد").unLock,"md",true)  
return false
end 
if text == "قفل الملصقات" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Sticker"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الملصقات").Lock,"md",true)  
return false
end 
if text == "قفل الملصقات بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Sticker"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الملصقات").lockKid,"md",true)  
return false
end 
if text == "قفل الملصقات بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Sticker"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الملصقات").lockKtm,"md",true)  
return false
end 
if text == "قفل الملصقات بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Sticker"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الملصقات").lockKick,"md",true)  
return false
end 
if text == "فتح الملصقات" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Sticker"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الملصقات").unLock,"md",true)  
return false
end 
if text == "قفل التوجيه" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:forward"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التوجيه").Lock,"md",true)  
return false
end 
if text == "قفل التوجيه بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:forward"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التوجيه").lockKid,"md",true)  
return false
end 
if text == "قفل التوجيه بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:forward"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التوجيه").lockKtm,"md",true)  
return false
end 
if text == "قفل التوجيه بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:forward"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل التوجيه").lockKick,"md",true)  
return false
end 
if text == "فتح التوجيه" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:forward"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح التوجيه").unLock,"md",true)  
return false
end 
if text == "قفل الملفات" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Document"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الملفات").Lock,"md",true)  
return false
end 
if text == "قفل الملفات بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Document"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الملفات").lockKid,"md",true)  
return false
end 
if text == "قفل الملفات بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Document"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الملفات").lockKtm,"md",true)  
return false
end 
if text == "قفل الملفات بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Document"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الملفات").lockKick,"md",true)  
return false
end 
if text == "فتح الملفات" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Document"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الملفات").unLock,"md",true)  
return false
end 
if text == "قفل السيلفي" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Unsupported"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل السيلفي").Lock,"md",true)  
return false
end 
if text == "قفل السيلفي بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Unsupported"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل السيلفي").lockKid,"md",true)  
return false
end 
if text == "قفل السيلفي بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Unsupported"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل السيلفي").lockKtm,"md",true)  
return false
end 
if text == "قفل السيلفي بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Unsupported"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل السيلفي").lockKick,"md",true)  
return false
end 
if text == "فتح السيلفي" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Unsupported"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح السيلفي").unLock,"md",true)  
return false
end 
if text == "قفل الماركداون" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Markdaun"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الماركداون").Lock,"md",true)  
return false
end 
if text == "قفل الماركداون بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Markdaun"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الماركداون").lockKid,"md",true)  
return false
end 
if text == "قفل الماركداون بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Markdaun"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الماركداون").lockKtm,"md",true)  
return false
end 
if text == "قفل الماركداون بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Markdaun"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الماركداون").lockKick,"md",true)  
return false
end 
if text == "فتح الماركداون" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Markdaun"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الماركداون").unLock,"md",true)  
return false
end 
if text == "قفل الجهات" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Contact"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الجهات").Lock,"md",true)  
return false
end 
if text == "قفل الجهات بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Contact"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الجهات").lockKid,"md",true)  
return false
end 
if text == "قفل الجهات بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Contact"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الجهات").lockKtm,"md",true)  
return false
end 
if text == "قفل الجهات بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Contact"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الجهات").lockKick,"md",true)  
return false
end 
if text == "فتح الجهات" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Contact"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الجهات").unLock,"md",true)  
return false
end 
if text == "قفل الكلايش" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Spam"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الكلايش").Lock,"md",true)  
return false
end 
if text == "قفل الكلايش بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Spam"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الكلايش").lockKid,"md",true)  
return false
end 
if text == "قفل الكلايش بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Spam"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الكلايش").lockKtm,"md",true)  
return false
end 
if text == "قفل الكلايش بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Spam"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الكلايش").lockKick,"md",true)  
return false
end 
if text == "فتح الكلايش" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Spam"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الكلايش").unLock,"md",true)  
return false
end 
if text == "قفل الانلاين" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Inlen"..msg_chat_id,"del")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الانلاين").Lock,"md",true)  
return false
end 
if text == "قفل الانلاين بالتقييد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Inlen"..msg_chat_id,"ked")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الانلاين").lockKid,"md",true)  
return false
end 
if text == "قفل الانلاين بالكتم" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Inlen"..msg_chat_id,"ktm")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الانلاين").lockKtm,"md",true)  
return false
end 
if text == "قفل الانلاين بالطرد" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Lock:Inlen"..msg_chat_id,"kick")  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم قفـل الانلاين").lockKick,"md",true)  
return false
end 
if text == "فتح الانلاين" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Lock:Inlen"..msg_chat_id)  
luatele.sendText(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"❆︙تم فتح الانلاين").unLock,"md",true)  
return false
end 
if text == "ضع رابط" or text == "وضع رابط" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Set:Link"..msg_chat_id..""..msg.sender_id.user_id,120,true) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل رابط المجموعه او رابط قناة المجموعه","md",true)  
end
if text == "مسح الرابط" or text == "مسح الرابط" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Group:Link"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح الرابط ","md",true)             
end
if text == "الرابط" then
if not Redis:get(LiOn.."LiOn:Status:Link"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل الرابط من قبل الادارة","md",true)
end 
local Get_Chat = luatele.getChat(msg_chat_id)
local GetLink = Redis:get(LiOn.."LiOn:Group:Link"..msg_chat_id) 
if GetLink then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{{text =Get_Chat.title, url = GetLink}, },}}
return luatele.sendText(msg_chat_id, msg_id, "❆︙ Link Group : \n["..GetLink.."]", 'md', true, false, false, false, reply_markup)
else
return luatele.sendText(msg_chat_id, msg_id, "❆︙ لا يوجد رابط ارسل انشاء رابط", 'md', true, false, false, false, reply_markup)
end
end
if text == "انشاء رابط" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
local Get_Chat = luatele.getChat(msg_chat_id)
local LinkGroup = luatele.generateChatInviteLink(msg_chat_id,'am',tonumber(msg.date+864000),100,false)
if LinkGroup.code == 3 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا استطيع جلب الرابط بسبب ليس لدي صلاحيه دعوه مستخدمين من خلال الرابط ","md",true)
end
Redis:set(LiOn.."LiOn:Group:Link"..msg_chat_id,LinkGroup.invite_link) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{{text = Get_Chat.title, url = LinkGroup.invite_link},},}}
return luatele.sendText(msg_chat_id, msg_id, "❆︙ Link Group : \n["..LinkGroup.invite_link.. "]", 'md', true, false, false, false, reply_markup)
end


if text == "ضع الترحيب عام" or text == "وضع الترحيب عام" then  
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Welcome:Group:Set" .. msg_chat_id .. "" .. msg.sender_id.user_id, 120, true)  
local textett =[[
❆︙ارسل لي الترحيب عام الان
❆︙تستطيع اضافة مايلي !
يمكنك استخدام الدوال الاتيه 

- عرض اسم الشخص : `{الاسم}`
- عرض يوزر الشخص : `{المعرف}`
- عرض اسم المجموعه : `{المجموعه}`
- عرض عدد الاعضاء : `{الاعضاء}`
- عرض عدد الادمنيه : `{الادمنيه}`
- عرض الوقت : `{الوقت}`
- عرض التاريخ : `{التاريخ}`
]]
return luatele.sendText(msg_chat_id,msg_id,textett,"md",true)   
end
if text == "الترحيب عام" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Welcome = Redis:get(LiOn.."LiOn:Welcome:Groups")
if Welcome then 
return luatele.sendText(msg_chat_id,msg_id,Welcome,"md",true)   
else 
return luatele.sendText(msg_chat_id,msg_id,"❆︙لم يتم تعيين ترحيب عام","md",true)   
end 
end
if text == "مسح الترحيب عام" or text == "مسح الترحيب عام" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Welcome:Groups") 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم ازالة الترحيب العام في المجموعات","md",true)   
end

if Redis:get(LiOn.."LiOn:Welcome:Group:Set" .. msg_chat_id .. "" .. msg.sender_id.user_id) then 
if text == "الغاء" then 
Redis:del(LiOn.."LiOn:Welcome:Group:Set" .. msg_chat_id .. "" .. msg.sender_id.user_id)  
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم الغاء حفظ الترحيب عام","md",true)   
end 
Redis:del(LiOn.."LiOn:Welcome:Group:Set" .. msg_chat_id .. "" .. msg.sender_id.user_id)  
Redis:set(LiOn.."LiOn:Welcome:Groups",text) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم حفظ الترحيب العام للمجموعات","md",true)     
end



if text == "ضع الترحيب" or text == "وضع الترحيب" then  
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."Tshake:Welcome:Group" .. msg_chat_id .. "" .. msg.sender_id.user_id, 120, true)  
local textett =[[
❆︙ارسل لي الترحيب عام الان
❆︙تستطيع اضافة مايلي !
يمكنك استخدام الدوال الاتيه 

- عرض اسم الشخص : `{الاسم}`
- عرض يوزر الشخص : `{المعرف}`
- عرض اسم المجموعه : `{المجموعه}`
- عرض عدد الاعضاء : `{الاعضاء}`
- عرض عدد الادمنيه : `{الادمنيه}`
- عرض الوقت : `{الوقت}`
- عرض التاريخ : `{التاريخ}`
]]
return luatele.sendText(msg_chat_id,msg_id,textett,"md",true)   
end
if text == "الترحيب" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(LiOn.."LiOn:Status:Welcome"..msg_chat_id) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل الترحيب من قبل الادمنيه","md",true)
end 
local Welcome = Redis:get(LiOn.."LiOn:Welcome:Group"..msg_chat_id)
if Welcome then 
return luatele.sendText(msg_chat_id,msg_id,Welcome,"md",true)   
else 
return luatele.sendText(msg_chat_id,msg_id,"❆︙لم يتم تعيين ترحيب للمجموعه","md",true)   
end 
end
if text == "مسح الترحيب" or text == "مسح الترحيب" then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Welcome:Group"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم ازالة ترحيب المجموعه","md",true)   
end
if text == "ضع قوانين" or text == "وضع قوانين" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Set:Rules:" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل لي القوانين الان","md",true)  
end
if text == "مسح القوانين" or text == "مسح القوانين" then  
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Group:Rules"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم ازالة قوانين المجموعه","md",true)    
end
if text == "القوانين" then 
local Rules = Redis:get(LiOn.."LiOn:Group:Rules" .. msg_chat_id)   
if Rules then     
return luatele.sendText(msg_chat_id,msg_id,Rules,"md",true)     
else      
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا توجد قوانين هنا","md",true)     
end    
end
if text == "ضع وصف" or text == "وضع وصف" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).Info == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه تغيير المعلومات* ',"md",true)  
end
Redis:setex(LiOn.."LiOn:Set:Description:" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل لي وصف المجموعه الان","md",true)  
end
if text == "مسح الوصف" or text == "مسح الوصف" then  
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).Info == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه تغيير المعلومات* ',"md",true)  
end
luatele.setChatDescription(msg_chat_id, '') 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم ازالة قوانين المجموعه","md",true)    
end

if text and text:match("^ضع اسم (.*)") or text and text:match("^وضع اسم (.*)") then 
local NameChat = text:match("^ضع اسم (.*)") or text:match("^وضع اسم (.*)") 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).Info == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه تغيير المعلومات* ',"md",true)  
end
luatele.setChatTitle(msg_chat_id,NameChat)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تغيير اسم المجموعه الى : "..NameChat,"md",true)    
end

if text == ("ضع صوره") or text == ("وضع صوره") then  
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).Info == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه تغيير المعلومات* ',"md",true)  
end
Redis:set(LiOn.."LiOn:Chat:Photo"..msg_chat_id..":"..msg.sender_id.user_id,true) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل الصوره لوضعها للمجموعه","md",true)    
end

if text == "مسح قائمه المنع" then   
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:List:Filter"..msg_chat_id)  
if #list == 0 then  
return luatele.sendText(msg_chat_id,msg_id,"*❆︙لا يوجد كلمات ممنوعه هنا *","md",true)   
end  
for k,v in pairs(list) do  
v = v:gsub('photo:',"") 
v = v:gsub('sticker:',"") 
v = v:gsub('animation:',"") 
v = v:gsub('text:',"") 
Redis:del(LiOn.."LiOn:Filter:Group:"..v..msg_chat_id)  
Redis:srem(LiOn.."LiOn:List:Filter"..msg_chat_id,v)  
end  
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح ("..#list..") كلمات ممنوعه *","md",true)   
end
if text == "قائمه المنع" then   
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:List:Filter"..msg_chat_id)  
if #list == 0 then  
return luatele.sendText(msg_chat_id,msg_id,"*❆︙لا يوجد كلمات ممنوعه هنا *","md",true)   
end  
Filter = '\n*❆︙قائمه المنع \n — — — — — — — — —*\n'
for k,v in pairs(list) do  
print(v)
if v:match('photo:(.*)') then
ver = 'صوره'
elseif v:match('animation:(.*)') then
ver = 'متحركه'
elseif v:match('sticker:(.*)') then
ver = 'ملصق'
elseif v:match('text:(.*)') then
ver = v:gsub('text:',"") 
end
v = v:gsub('photo:',"") 
v = v:gsub('sticker:',"") 
v = v:gsub('animation:',"") 
v = v:gsub('text:',"") 
local Text_Filter = Redis:get(LiOn.."LiOn:Filter:Group:"..v..msg_chat_id)   
Filter = Filter.."*"..k.."- "..ver.." » { "..Text_Filter.." }*\n"    
end  
luatele.sendText(msg_chat_id,msg_id,Filter,"md",true)  
end  
if text == "منع" then       
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn..'LiOn:FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'true')
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙ارسل الان { ملصق ,متحركه ,صوره ,رساله } *',"md",true)  
end    
if text == "الغاء منع" then    
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn..'LiOn:FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'DelFilter')
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙ارسل الان { ملصق ,متحركه ,صوره ,رساله } *',"md",true)  
end

if text == "اضف امر" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Command:Reids:Group"..msg_chat_id..":"..msg.sender_id.user_id,"true") 
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- الغاء الامر ', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return luatele.sendText(msg_chat_id,msg_id,"❆︙الان ارسل لي الامر القديم ...", 'md', false, false, false, false, reply_markup)
end
if text == "مسح امر" or text == "مسح امر" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Command:Reids:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id,"true") 
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- الغاء الامر ', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل الان الامر الذي قمت بوضعه مكان الامر القديم", 'md', false, false, false, false, reply_markup)
end
if text == "مسح الاوامر المضافه" or text == "مسح الاوامر المضافه" then 
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:Command:List:Group"..msg_chat_id)
for k,v in pairs(list) do
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..v)
Redis:del(LiOn.."LiOn:Command:List:Group"..msg_chat_id)
end
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح جميع الاوامر التي تم اضافتها","md",true)
end
if text == "الاوامر المضافه" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:Command:List:Group"..msg_chat_id.."")
Command = "❆︙قائمه الاوامر المضافه  \n— — — — — — — — —\n"
for k,v in pairs(list) do
Commands = Redis:get(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..v)
if Commands then 
Command = Command..""..k..": ("..v..") ← {"..Commands.."}\n"
else
Command = Command..""..k..": ("..v..") \n"
end
end
if #list == 0 then
Command = "❆︙لا توجد اوامر مضافه"
end
return luatele.sendText(msg_chat_id,msg_id,Command,"md",true)
end

if text == "تثبيت" and msg.reply_to_message_id ~= 0 then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).PinMsg == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه تثبيت الرسائل* ',"md",true)  
end
luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم تثبيت الرساله","md",true)
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local PinMsg = luatele.pinChatMessage(msg_chat_id,Message_Reply.id,true)
end
if text == 'الغاء التثبيت' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).PinMsg == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه تثبيت الرسائل* ',"md",true)  
end
luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم الغاء تثبيت الرساله","md",true)
luatele.unpinChatMessage(msg.chat_id,luatele.getChatPinnedMessage(msg.chat_id).id) 
end
if text == 'الغاء تثبيت الكل' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).PinMsg == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه تثبيت الرسائل* ',"md",true)  
end
luatele.sendText(msg_chat_id,msg_id,"\n❆︙تم الغاء تثبيت جميع الرسائل","md",true)
for i=0, 20 do
local UnPin = luatele.unpinChatMessage(msg_chat_id) 
if not luatele.getChatPinnedMessage(msg_chat_id).id then
break
end
end
end
if text == "الحمايه" then    
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = 'تعطيل الرابط', data = msg.sender_id.user_id..'/'.. 'unmute_link'},{text = 'تفعيل الرابط', data = msg.sender_id.user_id..'/'.. 'mute_link'},
},
{
{text = 'تعطيل الترحيب', data = msg.sender_id.user_id..'/'.. 'unmute_welcome'},{text = 'تفعيل الترحيب', data = msg.sender_id.user_id..'/'.. 'mute_welcome'},
},
{
{text = 'اتعطيل الايدي', data = msg.sender_id.user_id..'/'.. 'unmute_Id'},{text = 'اتفعيل الايدي', data = msg.sender_id.user_id..'/'.. 'mute_Id'},
},
{
{text = 'تعطيل الايدي بالصوره', data = msg.sender_id.user_id..'/'.. 'unmute_IdPhoto'},{text = 'تفعيل الايدي بالصوره', data = msg.sender_id.user_id..'/'.. 'mute_IdPhoto'},
},
{
{text = 'تعطيل الردود', data = msg.sender_id.user_id..'/'.. 'unmute_ryple'},{text = 'تفعيل الردود', data = msg.sender_id.user_id..'/'.. 'mute_ryple'},
},
{
{text = 'تعطيل الردود العامه', data = msg.sender_id.user_id..'/'.. 'unmute_ryplesudo'},{text = 'تفعيل الردود العامه', data = msg.sender_id.user_id..'/'.. 'mute_ryplesudo'},
},
{
{text = 'تعطيل الرفع', data = msg.sender_id.user_id..'/'.. 'unmute_setadmib'},{text = 'تفعيل الرفع', data = msg.sender_id.user_id..'/'.. 'mute_setadmib'},
},
{
{text = 'تعطيل الطرد', data = msg.sender_id.user_id..'/'.. 'unmute_kickmembars'},{text = 'تفعيل الطرد', data = msg.sender_id.user_id..'/'.. 'mute_kickmembars'},
},
{
{text = 'تعطيل الالعاب', data = msg.sender_id.user_id..'/'.. 'unmute_games'},{text = 'تفعيل الالعاب', data = msg.sender_id.user_id..'/'.. 'mute_games'},
},
{
{text = 'تعطيل اطردني', data = msg.sender_id.user_id..'/'.. 'unmute_kickme'},{text = 'تفعيل اطردني', data = msg.sender_id.user_id..'/'.. 'mute_kickme'},
},
{
{text = 'تعطيل التحشيش', data = msg.sender_id.user_id..'/'.. 'unmute_thshesh'},{text = 'تفعيل التحشيش', data = msg.sender_id.user_id..'/'.. 'mute_thshesh'},
},
{
{text = 'تعطيل الحظر المحدود', data = msg.sender_id.user_id..'/'.. 'unmute_kicknum'},{text = 'تفعيل الحظر المحدود', data = msg.sender_id.user_id..'/'.. 'mute_kicknum'},
},
{
{text = 'تعطيل الصيغ', data = msg.sender_id.user_id..'/'.. 'unmute_seck'},{text = 'تفعيل الصيغ', data = msg.sender_id.user_id..'/'.. 'mute_seck'},
},
{
{text = 'تعطيل غنيلي', data = msg.sender_id.user_id..'/'.. 'unmute_knile'},{text = 'تفعيل غنيلي', data = msg.sender_id.user_id..'/'.. 'mute_knile'},
},
{
{text = 'تعطيل الابراح', data = msg.sender_id.user_id..'/'.. 'unmute_brj'},{text = 'تفعيل الابراج', data = msg.sender_id.user_id..'/'.. 'mute_brj'},
},
{
{text = 'تعطيل الصوتيات', data = msg.sender_id.user_id..'/'.. 'unmute_audio'},{text = 'تفعيل الصوتيات', data = msg.sender_id.user_id..'/'.. 'mute_audio'},
},
{
{text = 'تعطيل الصوتيات العامه', data = msg.sender_id.user_id..'/'.. 'unmute_audioall'},{text = 'تفعيل الصوتيات العامه', data = msg.sender_id.user_id..'/'.. 'mute_audioall'},
},
{
{text = 'تعطيل تاك عام', data = msg.sender_id.user_id..'/'.. 'unmute_takall'},{text = 'تفعيل تاك عام', data = msg.sender_id.user_id..'/'.. 'mute_takall'},
},
{
{text = 'تعطيل التنبيه', data = msg.sender_id.user_id..'/'.. 'unmute_namemy'},{text = 'تفعيل التنبيه', data = msg.sender_id.user_id..'/'.. 'mute_namemy'},
},
{
{text = '- اخفاء الامر ', data ='/delAmr'}
},
}
}
return luatele.sendText(msg_chat_id, msg_id, '❆︙اوامر التفعيل والتعطيل ', 'md', false, false, false, false, reply_markup)
end  
if text and text:match("^زخرفه (.*)$") and not Redis:get(LiOn..'zhrfa'..msg.chat_id)  then
local TextZhrfa = text:match("^زخرفه (.*)$")
zh = io.popen('curl -s "https://apiabs.ml/zrf.php?abs='..URL.escape(TextZhrfa)..'"'):read('*a')
zx = JSON.decode(zh) 
t = "\n✯︙قائمه الزخرفه \n━━━━━━━━\n"
i = 0
for k,v in pairs(zx.ok) do
i = i + 1
t = t..i.."-  `"..v.."` \n"
end
return luatele.sendText(msg_chat_id,msg_id, t..'',"md",true)
end
if text == 'اعدادات الحمايه' then 
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Link"..msg.chat_id) then
Statuslink = '❬ ✔️ ❭' else Statuslink = '❬ ❌ ❭'
end
if Redis:get(LiOn.."LiOn:Status:Welcome"..msg.chat_id) then
StatusWelcome = '❬ ✔️ ❭' else StatusWelcome = '❬ ❌ ❭'
end
if Redis:get(LiOn.."LiOn:Status:Id"..msg.chat_id) then
StatusId = '❬ ✔️ ❭' else StatusId = '❬ ❌ ❭'
end
if Redis:get(LiOn.."LiOn:Status:IdPhoto"..msg.chat_id) then
StatusIdPhoto = '❬ ✔️ ❭' else StatusIdPhoto = '❬ ❌ ❭'
end
if Redis:get(LiOn.."LiOn:Status:Reply"..msg.chat_id) then
StatusReply = '❬ ✔️ ❭' else StatusReply = '❬ ❌ ❭'
end
if Redis:get(LiOn.."LiOn:Status:ReplySudo"..msg.chat_id) then
StatusReplySudo = '❬ ✔️ ❭' else StatusReplySudo = '❬ ❌ ❭'
end
if Redis:get(LiOn.."LiOn:Status:BanId"..msg.chat_id)  then
StatusBanId = '❬ ✔️ ❭' else StatusBanId = '❬ ❌ ❭'
end
if Redis:get(LiOn.."LiOn:Status:SetId"..msg.chat_id) then
StatusSetId = '❬ ✔️ ❭' else StatusSetId = '❬ ❌ ❭'
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
StatusGames = '❬ ✔️ ❭' else StatusGames = '❬ ❌ ❭'
end
if Redis:get(LiOn.."LiOn:Status:KickMe"..msg.chat_id) then
Statuskickme = '❬ ✔️ ❭' else Statuskickme = '❬ ❌ ❭'
end
if Redis:get(LiOn.."LiOn:Status:AddMe"..msg.chat_id) then
StatusAddme = '❬ ✔️ ❭' else StatusAddme = '❬ ❌ ❭'
end
local protectionGroup = '\n*❆︙اعدادات حمايه المجموعه\n — — — — — — — — —\n'
..'\n❆︙جلب الرابط ➤ '..Statuslink
..'\n❆︙جلب الترحيب ➤ '..StatusWelcome
..'\n❆︙الايدي ➤ '..StatusId
..'\n❆︙الايدي بالصوره ➤ '..StatusIdPhoto
..'\n❆︙الردود ➤ '..StatusReply
..'\n❆︙الردود العامه ➤ '..StatusReplySudo
..'\n❆︙الرفع ➤ '..StatusSetId
..'\n❆︙الحظر - الطرد ➤ '..StatusBanId
..'\n❆︙الالعاب ➤ '..StatusGames
..'\n❆︙امر اطردني ➤ '..Statuskickme..'*\n\n.'
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
return luatele.sendText(msg_chat_id, msg_id,protectionGroup,'md', false, false, false, false, reply_markup)
end
if text == "الاعدادات" then    
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Text = "*\n❆︙اعدادات المجموعه ".."\n❆︙علامة ال (✔️) تعني مقفول".."\n❆︙علامة ال (❌) تعني مفتوح*"
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = GetSetieng(msg_chat_id).lock_links, data = '&'},{text = 'الروابط : ', data =msg.sender_id.user_id..'/'.. 'Status_link'},
},
{
{text = GetSetieng(msg_chat_id).lock_spam, data = '&'},{text = 'الكلايش : ', data =msg.sender_id.user_id..'/'.. 'Status_spam'},
},
{
{text = GetSetieng(msg_chat_id).lock_inlin, data = '&'},{text = 'الكيبورد : ', data =msg.sender_id.user_id..'/'.. 'Status_keypord'},
},
{
{text = GetSetieng(msg_chat_id).lock_vico, data = '&'},{text = 'الاغاني : ', data =msg.sender_id.user_id..'/'.. 'Status_voice'},
},
{
{text = GetSetieng(msg_chat_id).lock_gif, data = '&'},{text = 'المتحركه : ', data =msg.sender_id.user_id..'/'.. 'Status_gif'},
},
{
{text = GetSetieng(msg_chat_id).lock_file, data = '&'},{text = 'الملفات : ', data =msg.sender_id.user_id..'/'.. 'Status_files'},
},
{
{text = GetSetieng(msg_chat_id).lock_text, data = '&'},{text = 'الدردشه : ', data =msg.sender_id.user_id..'/'.. 'Status_text'},
},
{
{text = GetSetieng(msg_chat_id).lock_ved, data = '&'},{text = 'الفيديو : ', data =msg.sender_id.user_id..'/'.. 'Status_video'},
},
{
{text = GetSetieng(msg_chat_id).lock_photo, data = '&'},{text = 'الصور : ', data =msg.sender_id.user_id..'/'.. 'Status_photo'},
},
{
{text = GetSetieng(msg_chat_id).lock_user, data = '&'},{text = 'المعرفات : ', data =msg.sender_id.user_id..'/'.. 'Status_username'},
},
{
{text = GetSetieng(msg_chat_id).lock_hash, data = '&'},{text = 'التاك : ', data =msg.sender_id.user_id..'/'.. 'Status_tags'},
},
{
{text = GetSetieng(msg_chat_id).lock_bots, data = '&'},{text = 'البوتات : ', data =msg.sender_id.user_id..'/'.. 'Status_bots'},
},
{
{text = GetSetieng(msg_chat_id).farsia, data = '&'},{text = 'الفارسيه : ', data =msg.sender_id.user_id..'/'.. 'Status_farsia'},
},
{
{text = GetSetieng(msg_chat_id).tphlesh, data = '&'},{text = 'التفليش : ', data =msg.sender_id.user_id..'/'.. 'Status_tphlesh'},
},
{
{text = GetSetieng(msg_chat_id).alkfr, data = '&'},{text = 'الكفر : ', data =msg.sender_id.user_id..'/'.. 'Status_alkfr'},
},
{
{text = GetSetieng(msg_chat_id).alphsar, data = '&'},{text = 'الفشار : ', data =msg.sender_id.user_id..'/'.. 'Status_alphsar'},
},
{
{text = '- التالي ... ', data =msg.sender_id.user_id..'/'.. 'NextSeting'}
},
{
{text = '- اخفاء الامر ', data ='/delAmr'}
},
}
}
return luatele.sendText(msg_chat_id, msg_id, Text, 'md', false, false, false, false, reply_markup)
end  


if text == 'المجموعه' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Chats = luatele.getSupergroupFullInfo(msg_chat_id)
local Get_Chat = luatele.getChat(msg_chat_id)
if Get_Chat.permissions.can_add_web_page_previews then
web = '❬ ✔️ ❭' else web = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_change_info then
info = '❬ ✔️ ❭' else info = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_invite_users then
invite = '❬ ✔️ ❭' else invite = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_pin_messages then
pin = '❬ ✔️ ❭' else pin = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_media_messages then
media = '❬ ✔️ ❭' else media = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_messages then
messges = '❬ ✔️ ❭' else messges = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_other_messages then
other = '❬ ✔️ ❭' else other = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_polls then
polls = '❬ ✔️ ❭' else polls = '❬ ❌ ❭'
end
local permissions = '*\n❆︙صلاحيات المجموعه :\n— — — — — — — — —'..'\n❆︙ارسال الويب : '..web..'\n❆︙تغيير معلومات المجموعه : '..info..'\n❆︙اضافه مستخدمين : '..invite..'\n❆︙تثبيت الرسائل : '..pin..'\n❆︙ارسال الميديا : '..media..'\n❆︙ارسال الرسائل : '..messges..'\n❆︙اضافه البوتات : '..other..'\n❆︙ارسال استفتاء : '..polls..'*\n\n'
local TextChat = '*\n❆︙معلومات المجموعه :\n— — — — — — — — —'..' \n❆︙اسم المجموعه : ❬* ['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')* ❭\n❆︙عدد الادمنيه : ❬ '..Info_Chats.administrator_count..' ❭\n❆︙عدد المحظورين : ❬ '..Info_Chats.banned_count..' ❭\n❆︙عدد الاعضاء : ❬ '..Info_Chats.member_count..' ❭\n❆︙عدد المقيديين : ❬ '..Info_Chats.restricted_count..' ❭\n❆︙الايدي : ❬ *`'..msg.chat_id..'`* ❭*\n'
if Info_Chats.photo then
luatele.sendPhoto(msg.chat_id, msg.id, Info_Chats.photo.sizes[1].photo.remote.id,TextChat..permissions, "md")
else
return luatele.sendText(msg_chat_id,msg_id, TextChat..permissions,"md",true)
end
end
if text and text:match("^معلومات المجموعه (-100%d+)$") then
local ChatIdd = text:match("^معلومات المجموعه (-100%d+)$")
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local Info_Chats = luatele.getSupergroupFullInfo(ChatIdd)
local Get_Chat = luatele.getChat(ChatIdd)
if not Get_Chat.id then
return luatele.sendText(msg_chat_id,msg_id,"\nالايدي غير صحيح او البوت مطرود","md",true)  
end
if Get_Chat.permissions.can_add_web_page_previews then
web = '❬ ✔️ ❭' else web = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_change_info then
info = '❬ ✔️ ❭' else info = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_invite_users then
invite = '❬ ✔️ ❭' else invite = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_pin_messages then
pin = '❬ ✔️ ❭' else pin = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_media_messages then
media = '❬ ✔️ ❭' else media = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_messages then
messges = '❬ ✔️ ❭' else messges = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_other_messages then
other = '❬ ✔️ ❭' else other = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_polls then
polls = '❬ ✔️ ❭' else polls = '❬ ❌ ❭'
end
local permissions = '*\n❆︙صلاحيات المجموعه :\n— — — — — — — — —'..'\n❆︙ارسال الويب : '..web..'\n❆︙تغيير معلومات المجموعه : '..info..'\n❆︙اضافه مستخدمين : '..invite..'\n❆︙تثبيت الرسائل : '..pin..'\n❆︙ارسال الميديا : '..media..'\n❆︙ارسال الرسائل : '..messges..'\n❆︙اضافه البوتات : '..other..'\n❆︙ارسال استفتاء : '..polls..'*\n\n'
local TextChat = '*\n❆︙معلومات المجموعه :\n— — — — — — — — —'..' \n❆︙اسم المجموعه : ❬* ['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')* ❭\n❆︙عدد الادمنيه : ❬ '..Info_Chats.administrator_count..' ❭\n❆︙عدد المحظورين : ❬ '..Info_Chats.banned_count..' ❭\n❆︙عدد الاعضاء : ❬ '..Info_Chats.member_count..' ❭\n❆︙عدد المقيديين : ❬ '..Info_Chats.restricted_count..' ❭\n❆︙الايدي : ❬ *`'..ChatIdd..'`* ❭*\n'
if Info_Chats.photo then
luatele.sendPhoto(msg.chat_id, msg.id, Info_Chats.photo.sizes[1].photo.remote.id,TextChat..permissions, "md")
else
return luatele.sendText(msg_chat_id,msg_id, TextChat..permissions,"md",true)
end
end
if text == 'كشف الرتب' then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' }* ',"md",true)  
end
local TheBasicsQ = Redis:scard(LiOn.."LiOn:TheBasicsQ:Group"..msg.chat_id) or 0
local TheBasics = Redis:scard(LiOn.."LiOn:TheBasics:Group"..msg.chat_id) or 0
local Originators = Redis:scard(LiOn.."LiOn:Originators:Group"..msg.chat_id) or 0
local Managers = Redis:scard(LiOn.."LiOn:Managers:Group"..msg.chat_id) or 0
local Addictive = Redis:scard(LiOn.."LiOn:Addictive:Group"..msg.chat_id) or 0
local Distinguished = Redis:scard(LiOn.."LiOn:Distinguished:Group"..msg.chat_id) or 0
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙عدد المالكين : '..TheBasicsQ..'\n❆︙عدد المنشئين الاساسيين : '..TheBasics..'\n❆︙عدد المنشئين : '..Originators..'\n❆︙عدد المدراء : '..Managers..'\n❆︙عدد الادمنيه : '..Addictive..'\n❆︙عدد المميزين : '..Distinguished..'* ',"md",true)  
end

if text == 'صلاحيات المجموعه' then 
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Get_Chat = luatele.getChat(msg_chat_id)
if Get_Chat.permissions.can_add_web_page_previews then
web = '❬ ✔️ ❭' else web = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_change_info then
info = '❬ ✔️ ❭' else info = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_invite_users then
invite = '❬ ✔️ ❭' else invite = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_pin_messages then
pin = '❬ ✔️ ❭' else pin = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_media_messages then
media = '❬ ✔️ ❭' else media = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_messages then
messges = '❬ ✔️ ❭' else messges = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_other_messages then
other = '❬ ✔️ ❭' else other = '❬ ❌ ❭'
end
if Get_Chat.permissions.can_send_polls then
polls = '❬ ✔️ ❭' else polls = '❬ ❌ ❭'
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- ارسال الويب : '..web, data = msg.sender_id.user_id..'/web'}, 
},
{
{text = '- تغيير معلومات المجموعه : '..info, data =msg.sender_id.user_id..  '/info'}, 
},
{
{text = '- اضافه مستخدمين : '..invite, data =msg.sender_id.user_id..  '/invite'}, 
},
{
{text = '- تثبيت الرسائل : '..pin, data =msg.sender_id.user_id..  '/pin'}, 
},
{
{text = '- ارسال الميديا : '..media, data =msg.sender_id.user_id..  '/media'}, 
},
{
{text = '- ارسال الرسائل : .'..messges, data =msg.sender_id.user_id..  '/messges'}, 
},
{
{text = '- اضافه البوتات : '..other, data =msg.sender_id.user_id..  '/other'}, 
},
{
{text = '- ارسال استفتاء : '..polls, data =msg.sender_id.user_id.. '/polls'}, 
},
{
{text = '- اخفاء الامر ', data ='/delAmr'}
},
}
}
return luatele.sendText(msg_chat_id, msg_id, "❆︙ الصلاحيات - ", 'md', false, false, false, false, reply_markup)
end
if text == 'تنزيل الكل' and msg.reply_to_message_id ~= 0 then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",Message_Reply.sender_id.user_id) then
devQ = "المطور الثانوي ،" 
else 
devQ = "" 
end
if Redis:sismember(LiOn.."LiOn:Developers:Groups",Message_Reply.sender_id.user_id) then
dev = "المطور ،" 
else 
dev = "" 
end
if Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
crrQ = "المالك ،" 
else 
crrQ = "" 
end
if Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
crr = "منشئ اساسي ،" 
else 
crr = "" 
end
if Redis:sismember(LiOn..'LiOn:Originators:Group'..msg_chat_id, Message_Reply.sender_id.user_id) then
cr = "منشئ ،" 
else 
cr = "" 
end
if Redis:sismember(LiOn..'LiOn:Managers:Group'..msg_chat_id, Message_Reply.sender_id.user_id) then
own = "مدير ،" 
else 
own = "" 
end
if Redis:sismember(LiOn..'LiOn:Addictive:Group'..msg_chat_id, Message_Reply.sender_id.user_id) then
mod = "ادمن ،" 
else 
mod = "" 
end
if Redis:sismember(LiOn..'LiOn:Distinguished:Group'..msg_chat_id, Message_Reply.sender_id.user_id) then
vip = "مميز ،" 
else 
vip = ""
end
if The_ControllerAll(Message_Reply.sender_id.user_id) == true then
Rink = 1
elseif Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",Message_Reply.sender_id.user_id)  then
Rink = 2
elseif Redis:sismember(LiOn.."LiOn:Developers:Groups",Message_Reply.sender_id.user_id)  then
Rink = 3
elseif Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 4
elseif Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 5
elseif Redis:sismember(LiOn.."LiOn:Originators:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 6
elseif Redis:sismember(LiOn.."LiOn:Managers:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 7
elseif Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 8
elseif Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 9
else
Rink = 10
end
if StatusCanOrNotCan(msg_chat_id,Message_Reply.sender_id.user_id) == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙ليس لديه اي رتبه هنا *","md",true)  
end
if msg.ControllerBot then
if Rink == 1 or Rink < 1 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:DevelopersQ:Groups",Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Developers:Groups",Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.DevelopersQ then
if Rink == 2 or Rink < 2 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:Developers:Groups",Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.Developers then
if Rink == 3 or Rink < 3 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.TheBasicsQ then
if Rink == 4 or Rink < 4 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.TheBasics then
if Rink == 5 or Rink < 5 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.Originators then
if Rink == 6 or Rink < 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.Managers then
if Rink == 7 or Rink < 7 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.Addictive then
if Rink == 8 or Rink < 8 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
end
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙تم تنزيل المستخدم من الرتب التاليه { "..devQ..""..dev..""..crrQ..""..crr..""..cr..""..own..""..mod..""..vip.." *}","md",true)  
end

if text and text:match('^تنزيل الكل @(%S+)$') then
local UserName = text:match('^تنزيل الكل @(%S+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",UserId_Info.id) then
devQ = "المطور الثانوي ،" 
else 
devQ = "" 
end
if Redis:sismember(LiOn.."LiOn:Developers:Groups",UserId_Info.id) then
dev = "المطور ،" 
else 
dev = "" 
end
if Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id, UserId_Info.id) then
crrQ = "المالك ،" 
else 
crrQ = "" 
end
if Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, UserId_Info.id) then
crr = "منشئ اساسي ،" 
else 
crr = "" 
end
if Redis:sismember(LiOn..'LiOn:Originators:Group'..msg_chat_id, UserId_Info.id) then
cr = "منشئ ،" 
else 
cr = "" 
end
if Redis:sismember(LiOn..'LiOn:Managers:Group'..msg_chat_id, UserId_Info.id) then
own = "مدير ،" 
else 
own = "" 
end
if Redis:sismember(LiOn..'LiOn:Addictive:Group'..msg_chat_id, UserId_Info.id) then
mod = "ادمن ،" 
else 
mod = "" 
end
if Redis:sismember(LiOn..'LiOn:Distinguished:Group'..msg_chat_id, UserId_Info.id) then
vip = "مميز ،" 
else 
vip = ""
end
if The_ControllerAll(UserId_Info.id) == true then
Rink = 1
elseif Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",UserId_Info.id)  then
Rink = 2
elseif Redis:sismember(LiOn.."LiOn:Developers:Groups",UserId_Info.id)  then
Rink = 3
elseif Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id, UserId_Info.id) then
Rink = 4
elseif Redis:sismember(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, UserId_Info.id) then
Rink = 5
elseif Redis:sismember(LiOn.."LiOn:Originators:Group"..msg_chat_id, UserId_Info.id) then
Rink = 6
elseif Redis:sismember(LiOn.."LiOn:Managers:Group"..msg_chat_id, UserId_Info.id) then
Rink = 7
elseif Redis:sismember(LiOn.."LiOn:Addictive:Group"..msg_chat_id, UserId_Info.id) then
Rink = 8
elseif Redis:sismember(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, UserId_Info.id) then
Rink = 9
else
Rink = 10
end
if StatusCanOrNotCan(msg_chat_id,UserId_Info.id) == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙ليس لديه اي رتبه هنا *","md",true)  
end
if msg.ControllerBot then
if Rink == 1 or Rink < 1 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:DevelopersQ:Groups",UserId_Info.id)
Redis:srem(LiOn.."LiOn:Developers:Groups",UserId_Info.id)
Redis:srem(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, UserId_Info.id)
elseif msg.DevelopersQ then
if Rink == 2 or Rink < 2 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:Developers:Groups",UserId_Info.id)
Redis:srem(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, UserId_Info.id)
elseif msg.Developers then
if Rink == 3 or Rink < 3 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, UserId_Info.id)
elseif msg.TheBasicsQ then
if Rink == 4 or Rink < 4 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:TheBasics:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, UserId_Info.id)
elseif msg.TheBasics then
if Rink == 5 or Rink < 5 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:Originators:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, UserId_Info.id)
elseif msg.Originators then
if Rink == 6 or Rink < 6 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:Managers:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, UserId_Info.id)
elseif msg.Managers then
if Rink == 7 or Rink < 7 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:Addictive:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, UserId_Info.id)
elseif msg.Addictive then
if Rink == 8 or Rink < 8 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(LiOn.."LiOn:Distinguished:Group"..msg_chat_id, UserId_Info.id)
end
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙تم تنزيل المستخدم من الرتب التاليه { "..devQ..""..dev..""..crrQ..""..crr..""..cr..""..own..""..mod..""..vip.." *}","md",true)  
end
if text == "تنزيل جميع الرتب" then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.TheBasicsQ then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' , مالك المجموعه }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:TheBasics:Group"..msg_chat_id)
Redis:del(LiOn.."LiOn:Originators:Group"..msg_chat_id)
Redis:del(LiOn.."LiOn:Managers:Group"..msg_chat_id)
Redis:del(LiOn.."LiOn:Addictive:Group"..msg_chat_id)
--Redis:del(LiOn.."LiOn:Distinguished:Group"..msg_chat_id)
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙تم تنزيل جميع رتب المجموعه { المنشئين الاساسسين , المنشئين , المدراء , الادمنيه  }* ',"md",true)  
end

if text and text:match('ضع لقب (.*)') and msg.reply_to_message_id ~= 0 then
local CustomTitle = text:match('ضع لقب (.*)')
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن او ليست لدي جميع الصلاحيات *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
local SetCustomTitle = https.request("https://api.telegram.org/bot"..Token.."/setChatAdministratorCustomTitle?chat_id="..msg_chat_id.."&user_id="..Message_Reply.sender_id.user_id.."&custom_title="..CustomTitle)
local SetCustomTitle_ = JSON.decode(SetCustomTitle)
if SetCustomTitle_.result == true then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم وضع له لقب : "..CustomTitle).Reply,"md",true)  
else
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ هناك خطا تاكد من البوت ومن الشخص","md",true)  
end 
end
if text and text:match('^ضع لقب @(%S+) (.*)$') then
local UserName = {text:match('^ضع لقب @(%S+) (.*)$')}
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن او ليست لدي جميع الصلاحيات *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName[1])
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName[1]:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local SetCustomTitle = https.request("https://api.telegram.org/bot"..Token.."/setChatAdministratorCustomTitle?chat_id="..msg_chat_id.."&user_id="..UserId_Info.id.."&custom_title="..UserName[2])
local SetCustomTitle_ = JSON.decode(SetCustomTitle)
if SetCustomTitle_.result == true then
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم وضع له لقب : "..UserName[2]).Reply,"md",true)  
else
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ هناك خطا تاكد من البوت ومن الشخص","md",true)  
end 
end 
if text and text:match("^ضع التكرار (%d+)$") then  
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
local Numbardel = text:match("^ضع التكرار (%d+)$")
Redis:hset(LiOn.."LiOn:Spam:Group:User"..msg_chat_id ,"Num:Spam",Numbardel)  
luatele.sendText(msg_chat_id,msg_id, 'تم تعيين عدد التكرار الى  : '..Numbardel)
end
if text == ('رفع مشرف بكل الصلاحيات') and msg.reply_to_message_id ~= 0 then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..Message_Reply.sender_id.user_id.."&&can_manage_voice_chats=true&can_change_info=True&can_delete_messages=True&can_invite_users=True&can_restrict_members=True&can_pin_messages=True&can_promote_members=True")
return luatele.sendText(msg_chat_id, msg_id, "❆︙ تم ترقيته مشوف بكل الصلاحيات", 'md')
end
if text and text:match('^رفع مشرف بكل الصلاحيات @(%S+)$') then
local UserName = text:match('^رفع مشرف بكل الصلاحيات @(%S+)$')
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end

https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..UserId_Info.id.."&&can_manage_voice_chats=true&can_change_info=True&can_delete_messages=True&can_invite_users=True&can_restrict_members=True&can_pin_messages=True&can_promote_members=True")
return luatele.sendText(msg_chat_id, msg_id, "❆︙ تم ترقيته مشوف بكل الصلاحيات", 'md')
end 
if text == ('رفع مشرف') and msg.reply_to_message_id ~= 0 then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
local SetAdmin = luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'administrator',{1 ,1, 0, 0, 0, 0, 0 , 0, 0, 0, 0, 0, ''})
if SetAdmin.code == 3 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكنني رفعه ليس لدي صلاحيات *","md",true)  
end
https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..Message_Reply.sender_id.user_id.."&&can_manage_voice_chats=true")
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- تعديل الصلاحيات ', data = msg.sender_id.user_id..'/groupNumseteng//'..Message_Reply.sender_id.user_id}, 
},
}
}
return luatele.sendText(msg_chat_id, msg_id, "❆︙ صلاحيات المستخدم - ", 'md', false, false, false, false, reply_markup)
end
if text and text:match('^رفع مشرف @(%S+)$') then
local UserName = text:match('^رفع مشرف @(%S+)$')
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local SetAdmin = luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'administrator',{1 ,1, 0, 0, 0, 0, 0 , 0, 0, 0, 0, 0, ''})
if SetAdmin.code == 3 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكنني رفعه ليس لدي صلاحيات *","md",true)  
end
https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..UserId_Info.id.."&&can_manage_voice_chats=true")
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- تعديل الصلاحيات ', data = msg.sender_id.user_id..'/groupNumseteng//'..UserId_Info.id}, 
},
}
}
return luatele.sendText(msg_chat_id, msg_id, "❆︙ صلاحيات المستخدم - ", 'md', false, false, false, false, reply_markup)
end 
if text == ('تنزيل مشرف') and msg.reply_to_message_id ~= 0 then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
local SetAdmin = luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'administrator',{0 ,0, 0, 0, 0, 0, 0 ,0, 0})
if SetAdmin.code == 400 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لست انا من قام برفعه *","md",true)  
end
if SetAdmin.code == 3 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكنني تنزيله ليس لدي صلاحيات *","md",true)  
end
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم تنزيله من المشرفين ").Reply,"md",true)  
end
if text and text:match('^تنزيل مشرف @(%S+)$') then
local UserName = text:match('^تنزيل مشرف @(%S+)$')
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local SetAdmin = luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'administrator',{0 ,0, 0, 0, 0, 0, 0 ,0, 0})
if SetAdmin.code == 400 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لست انا من قام برفعه *","md",true)  
end
if SetAdmin.code == 3 then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا يمكنني تنزيله ليس لدي صلاحيات *","md",true)  
end
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(UserId_Info.id,"❆︙تم تنزيله من المشرفين ").Reply,"md",true)  
end 
if text == 'مسح رسائلي' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn..'LiOn:Num:Message:User'..msg.chat_id..':'..msg.sender_id.user_id)
luatele.sendText(msg_chat_id,msg_id,'❆︙تم مسح جميع رسائلك ',"md",true)  
elseif text == 'مسح سحكاتي' or text == 'مسح تعديلاتي' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn..'LiOn:Num:Message:Edit'..msg.chat_id..msg.sender_id.user_id)
luatele.sendText(msg_chat_id,msg_id,'❆︙تم مسح جميع سحكاتك ',"md",true)  
elseif text == 'مسح جهاتي' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn..'LiOn:Num:Add:Memp'..msg.chat_id..':'..msg.sender_id.user_id)
luatele.sendText(msg_chat_id,msg_id,'❆︙تم مسح جميع جهاتك المضافه ',"md",true)  
elseif text == 'رسائلي' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
luatele.sendText(msg_chat_id,msg_id,'❆︙عدد رسائلك هنا *~ '..(Redis:get(LiOn..'LiOn:Num:Message:User'..msg.chat_id..':'..msg.sender_id.user_id) or 1)..'*',"md",true)  
elseif text == 'سحكاتي' or text == 'سحكاتي' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
luatele.sendText(msg_chat_id,msg_id,'❆︙عدد السحكات هنا *~ '..(Redis:get(LiOn..'LiOn:Num:Message:Edit'..msg.chat_id..msg.sender_id.user_id) or 0)..'*',"md",true)  
elseif text == 'جهاتي' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
luatele.sendText(msg_chat_id,msg_id,'❆︙عدد جهاتك المضافه هنا *~ '..(Redis:get(LiOn.."LiOn:Num:Add:Memp"..msg.chat_id..":"..msg.sender_id.user_id) or 0)..'*',"md",true)  
elseif text == 'مسح' and msg.reply_to_message_id ~= 0 and msg.Addictive then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).Delmsg == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه مسح الرسائل* ',"md",true)  
end
luatele.deleteMessages(msg.chat_id,{[1]= msg.reply_to_message_id})
luatele.deleteMessages(msg.chat_id,{[1]= msg_id})
end

if text == 'تفاعل المجموعه' and msg.reply_to_message_id == 0 then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message = msg.id/2097152/0.5
local MsgText = ''  
print(Message)
if tonumber(Message) < 200 then 
MsgText = 'سايق مخده 😹' 
elseif tonumber(Message) < 400 then 
MsgText = 'الله بالخير 👋'
elseif tonumber(Message) < 600 then 
MsgText = 'عفيه اتفاعل ??' 
elseif tonumber(Message) < 800 then 
MsgText = 'بدأ يتحسن 😐' 
elseif tonumber(Message) < 1000 then 
MsgText = 'شكد تحجي 😒' 
elseif tonumber(Message) < 1300 then 
MsgText = 'استمر بطل 😍' 
elseif tonumber(Message) < 1600 then 
MsgText = 'تفاعل غنبله 🙂'  
elseif tonumber(Message) < 1800 then 
MsgText = 'استمر يعسل ??' 
elseif tonumber(Message) < 2200 then 
MsgText = 'جيد جدا ♥️' 
elseif tonumber(Message) < 2600 then 
MsgText = 'ممتاز جدا 🥰' 
elseif tonumber(Message) < 3000 then 
MsgText = 'مــلــک 💯😻' 
elseif tonumber(Message) < 3600 then 
MsgText = 'اسطورة التفاعل❤️' 
elseif tonumber(Message) < 10000000000 then 
MsgText = 'ملك التلكرام 💖'  
end 

return luatele.sendText(msg_chat_id,msg_id,"❆︙تفاعل المجموعه : "..MsgText, "md")
end
if text == 'تعيين الايدي' then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Redis:Id:Group"..msg.chat_id..""..msg.sender_id.user_id,240,true)  
return luatele.sendText(msg_chat_id,msg_id,[[
❆︙ارسل الان النص
❆︙يمكنك اضافه :
❆︙`#username` » اسم المستخدم
❆︙`#msgs` » عدد الرسائل
❆︙`#photos` » عدد الصور
❆︙`#id` » ايدي المستخدم
❆︙`#auto` » نسبة التفاعل
❆︙`#stast` » رتبة المستخدم 
❆︙`#edit` » عدد السحكات
❆︙`#game` » عدد النقاط
❆︙`#AddMem` » عدد الجهات
❆︙`#Description` » تعليق الصوره
❆︙`#Bio` » البايو.
]],"md",true)    
end 
if text == 'مسح الايدي' or text == 'مسح الايدي' then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Set:Id:Group"..msg.chat_id)
return luatele.sendText(msg_chat_id,msg_id, '❆︙تم ازالة كليشة الايدي ',"md",true)  
end
if text == 'تغيير الايدي' or text == 'تغير الايدي' then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local List = { 
[[
↫ #Description
 ℘︙معرفك ~⪼ #username
 ℘︙ايديك ~⪼ #id
 ℘︙رتبتك ~⪼ #stast  
 ℘︙تفاعلك ~⪼ #auto
 ℘︙رسائلك ~⪼ #msgs
 ℘︙سحكاتك ~⪼ #edit
 ℘︙نقاطك ~⪼ #game
 ℘︙البايو ~⪼ #Bio
]],[[
↫ #Description
⌁︙ايديك↫ #id
⌁︙معرفك↫ #username
⌁︙رتبتك↫ #stast
⌁︙تفاعلك↫ #auto
⌁︙رسائلك↫ #msgs 
⌁︙سحكاتك↫ #edit
⌁︙نقاطك↫ #game
]],
[[
↫ #Description
⌁︙ايديك↫ #id
⌁︙معرفك↫ #username
⌁︙رتبتك↫ #stast
⌁︙تفاعلك↫ #auto
⌁︙رسائلك↫ #msgs 
⌁︙سحكاتك↫ #edit
⌁︙نقاطك↫ #game
⌁︙البايو↫ #Bio
]],
[[
❆︙#Description
❆︙ايديـك ❪ #id ❫
❆︙معرفـك ❪ #username ❫
❆︙رتبتـك ❪ #stast ❫
❆︙تفاعلك ❪ #auto  ❫
❆︙رسائلك ❪ #msgs ❫
❆︙سحكاتـك ❪ #edit ❫
❆︙نقاطك ❪ #game ❫
]],
[[ 
゠??𝚂𝙴𝚁 𖨈 #username 𖥲 . 
゠𝙼𝚂?? ?? #msgs 𖥲 . 
゠𝚂𝚃?? ?? #stast 𖥲 . 
゠𝙸𝙳 𖨈 #id 𖥲 . 
]], 
[[❆‍︙ᴜѕᴇʀɴᴀᴍᴇ ➥• #username . 
❆‍︙ᴍѕɢѕ ➥• #msgs . 
❆‍︙ѕᴛᴀᴛѕ ➥• #stast . 
❆‍︙ʏᴏᴜʀ ɪᴅ ➥• #id  . 
❆‍︙ᴇᴅɪᴛ ᴍsɢ ➥• #edit . 
❆‍︙ᴅᴇᴛᴀɪʟs ➥• #auto .  
❆‍︙ɢᴀᴍᴇ ➥• #game .]], 
[[ 
➭- 𝒔𝒕𝒂𓂅 #stast 𓍯. 💕 
➮- 𝒖𝒔𝒆𝒓𓂅 #username 𓍯. 💕 
➭- ??𝒔𝒈𝒆𓂅 #msgs 𓍯. ?? 
➭- ??𝒅 𓂅 #id 𓍯. 💕 
]], 
[[ 
⚕ 𓆰 𝑾𝒆𝒍𝒄𝒐𝒎𝒆 𝑻𝒐 𝑮𝒓𝒐𝒖𝒑 ★ 
• 🖤 | 𝑼𝑬𝑺 : #username ‌‌‏⚚ 
• 🖤 | 𝑺𝑻𝑨 : #stast 🧙🏻‍♂ 
• 🖤 | 𝑰𝑫 : #id ‌‌‏♕ 
• 🖤 | 𝑴??𝑮 : #msgs 𓆊 
]], 
[[ 
┌ 𝐔𝐒𝐄𝐑 𖤱 #username 𖦴 . 
├ 𝐌??𝐆 𖤱 #msgs 𖦴 . 
├ 𝐒𝐓𝐀 𖤱 #stast 𖦴 . 
└ 𝐈?? 𖤱 #id 𖦴 . 
]], 
[[ 
𓄼🇮🇶 𝑼𝒔𝒆𝒓𝑵𝒂𝒎𝒆 :#username  
𓄼??🇶 𝑺𝒕??𝒔𝒕 :#stast  
𓄼🇮🇶 𝒊𝒅 :#id  
𓄼🇮🇶 𝑮𝒂𝒎𝒆𝑺 :#game  
𓄼🇮🇶 𝑴𝒔𝒈𝒔 :#msgs 
]], 
[[ 
➞: 𝒔𝒕𝒂𓂅 #stast 𓍯➸💞. 
➞: 𝒖𝒔𝒆𝒓𓂅 #username 𓍯➸💞. 
➞: 𝒎𝒔𝒈𝒆𓂅 #msgs 𓍯➸💞. 
➞: 𝒊𝒅 𓂅 #id 𓍯➸💞. 
]], 
[[ 
☆•𝐮𝐬𝐞𝐫 : #username 𖣬   
☆•𝐦𝐬𝐠  : #msgs 𖣬  
☆•𝐬𝐭𝐚 : #stast 𖣬  
☆•𝐢𝐝  : #id 𖣬 
]], 
[[ 
- 𓏬 ????𝐄𝐫 : #username 𓂅 . 
- 𓏬 𝐌𝐬𝐆  : #msgs 𓂅 . 
- 𓏬 𝐒𝐭𝐀 : #stast 𓂅 . 
- 𓏬 𝐈𝐃 : #id 𓂅 . 
]], 
[[ 
.𖣂 𝙪??????𝙣𝙖𝙢𝙚 , #username   
.?? 𝙨𝙩𝙖𝙨𝙩 , #stast   
.𖣂 𝙡𝘿 , #id   
.𖣂 𝙂𝙖𝙢𝙨 , #game  
.𖣂 𝙢𝙨𝙂𝙨 , #msgs 
]]} 
local Text_Rand = List[math.random(#List)] 
Redis:set(LiOn.."LiOn:Set:Id:Group"..msg.chat_id,Text_Rand)
return luatele.sendText(msg_chat_id,msg_id, '❆︙تم التغيير ارسل ايدي لعرض الايدي الجديد',"md",true)  
end
if text == 'مسح الايدي عام' or text == 'مسح الايدي عام' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Set:Id:Groups")
return luatele.sendText(msg_chat_id,msg_id, '❆︙تم ازالة كليشة الايدي ',"md",true)  
end
if text == 'تعيين الايدي عام' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Redis:Id:Groups"..msg.chat_id..""..msg.sender_id.user_id,240,true)  
return luatele.sendText(msg_chat_id,msg_id,[[
❆︙ارسل الان النص
❆︙يمكنك اضافه :
❆︙`#username` » اسم المستخدم
❆︙`#msgs` » عدد الرسائل
❆︙`#photos` » عدد الصور
❆︙`#id` » ايدي المستخدم
❆︙`#auto` » نسبة التفاعل
❆︙`#stast` » رتبة المستخدم 
❆︙`#edit` » عدد السحكات
❆︙`#game` » عدد النقاط
❆︙`#AddMem` » عدد الجهات
❆︙`#Description` » تعليق الصوره
❆︙`#Bio` » البايو.
]],"md",true)    
end 

if text and text:match("^مسح (.*)$") and msg.reply_to_message_id == 0 then
local TextMsg = text:match("^مسح (.*)$")
if TextMsg == 'المطورين الثانوين' or TextMsg == 'المطورين الثانويين' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:DevelopersQ:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مطورين ثانوين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:DevelopersQ:Groups") 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المطورين الثانويين*","md",true)
end
if TextMsg == 'المطورين' then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Developers:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مطورين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:Developers:Groups") 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المطورين *","md",true)
end
if TextMsg == 'المالكين' then
local StatusMember = luatele.getChatMember(msg_chat_id,msg.sender_id.user_id).status.Merotele
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.MalekAsase then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Memberss = Redis:smembers(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id) 
if #Info_Memberss == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد المالكين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id) 
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..msg_chat_id,v.member_id.user_id) 
end
end
end
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Memberss.."} من المالكين  *","md",true)
end
if TextMsg == 'المنشئين الاساسيين' then
if not msg.TheBasicsQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(8)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:TheBasics:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد منشئين اساسيين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:TheBasics:Group"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المنشؤين الاساسيين *","md",true)
end
if TextMsg == 'المنشئين' then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Originators:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد منشئين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:Originators:Group"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المنشئين *","md",true)
end
if TextMsg == 'المدراء' then
if not msg.Originators then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(5)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Managers:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مدراء حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:Managers:Group"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المدراء *","md",true)
end
if TextMsg == 'الادمنيه' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Addictive:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد ادمنيه حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:Addictive:Group"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من الادمنيه *","md",true)
end
if TextMsg == 'المميزين' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Distinguished:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مميزين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:Distinguished:Group"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المميزين *","md",true)
end
if TextMsg == 'المحظورين عام' or TextMsg == 'قائمه العام' then
if not msg.DevelopersQ then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:BanAll:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد محظورين عام حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:BanAll:Groups") 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المحظورين عام *","md",true)
end
if TextMsg == 'المحظورين' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:BanGroup:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد محظورين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:BanGroup:Group"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المحظورين *","md",true)
end
if TextMsg == 'المكتومين' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id) 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مكتومين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id) 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المكتومين *","md",true)
end
if TextMsg == 'المقيدين' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Recent", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
local y = false
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.is_member == true and Info_Members.members[k].status.Merotele == "chatMemberStatusRestricted" then
luatele.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'restricted',{1,1,1,1,1,1,1,1})
x = x + 1
y = true
end
end
if y == true then
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..x.."} من المقيديين *","md",true)
else
luatele.sendText(msg_chat_id,msg_id,'❆︙لا يوجد مقيدين ',"md",true)  
end
end
if TextMsg == 'البوتات' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Bots", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
for k, v in pairs(List_Members) do
local Ban_Bots = luatele.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'banned',0)
if Ban_Bots.Merotele == "ok" then
x = x + 1
end
end
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عدد البوتات الموجوده : "..#List_Members.."\n❆︙تم طرد ( "..x.." ) بوت من المجموعه *","md",true)  
end
if TextMsg == 'المطرودين' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Banned", "*", 0, 200)
x = 0
local y = false
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
UNBan_Bots = luatele.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
if UNBan_Bots.Merotele == "ok" then
x = x + 1
y = true
end
end
if y == true then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عدد المطرودين في الموجوده : "..#List_Members.."\n❆︙تم الغاء الحظر عن ( "..x.." ) من الاشخاص*","md",true)  
else
luatele.sendText(msg_chat_id,msg_id,'❆︙لا يوجد مطرودين ',"md",true)  
end
end
if TextMsg == 'المحذوفين' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Info_Members = luatele.searchChatMembers(msg_chat_id, "*", 200)
local List_Members = Info_Members.members
x = 0
local y = false
for k, v in pairs(List_Members) do
local UserInfo = luatele.getUser(v.member_id.user_id)
if UserInfo.type.Merotele == "userTypeDeleted" then
local userTypeDeleted = luatele.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'banned',0)
if userTypeDeleted.Merotele == "ok" then
x = x + 1
y = true
end
end
end
if y == true then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙تم طرد ( "..x.." ) حساب محذوف *","md",true)  
else
luatele.sendText(msg_chat_id,msg_id,'❆︙لا يوجد محذوفين ',"md",true)  
end
end
end
if text == 'طرد المحذوفين' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Info_Members = luatele.searchChatMembers(msg_chat_id, "*", 200)
local List_Members = Info_Members.members
x = 0
local y = false
for k, v in pairs(List_Members) do
local UserInfo = luatele.getUser(v.member_id.user_id)
if UserInfo.type.Merotele == "userTypeDeleted" then
local userTypeDeleted = luatele.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'banned',0)
if userTypeDeleted.Merotele == "ok" then
x = x + 1
y = true
end
end
end
if y == true then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙تم طرد ( "..x.." ) حساب محذوف *","md",true)  
else
luatele.sendText(msg_chat_id,msg_id,'❆︙لا يوجد محذوفين ',"md",true)  
end
end
if text == 'طرد البوتات' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Info_Members = luatele.getSupergroupMembers(msg_chat_id, "Bots", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
for k, v in pairs(List_Members) do
local Ban_Bots = luatele.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'banned',0)
if Ban_Bots.Merotele == "ok" then
x = x + 1
end
end
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عدد البوتات الموجوده : "..#List_Members.."\n❆︙تم طرد ( "..x.." ) بوت من المجموعه *","md",true)  
end
if text == ("مسح الردود") then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:List:Manager"..msg_chat_id.."")
for k,v in pairs(list) do
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Gif"..v..msg_chat_id)   
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Vico"..v..msg_chat_id)   
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..v..msg_chat_id)     
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Text"..v..msg_chat_id)   
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Photo"..v..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Video"..v..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:File"..v..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:video_note"..v..msg_chat_id)
Redis:del(LiOn.."LiOn:Add:Rd:Manager:Audio"..v..msg_chat_id)
Redis:del(LiOn.."LiOn:List:Manager"..msg_chat_id)
end
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح قائمه الردود","md",true)  
end
if text == ("الردود") then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:List:Manager"..msg_chat_id.."")
text = "❆︙قائمه الردود \n— — — — — — — — —\n"
for k,v in pairs(list) do
if Redis:get(LiOn.."LiOn:Add:Rd:Manager:Gif"..v..msg_chat_id) then
db = "متحركه 🎭"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Vico"..v..msg_chat_id) then
db = "بصمه 📢"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Stekrs"..v..msg_chat_id) then
db = "ملصق 🃏"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Text"..v..msg_chat_id) then
db = "رساله ✉"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Photo"..v..msg_chat_id) then
db = "صوره 🎇"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Video"..v..msg_chat_id) then
db = "فيديو ??"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:File"..v..msg_chat_id) then
db = "ملف ❆"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:Audio"..v..msg_chat_id) then
db = "اغنيه 🎵"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Manager:video_note"..v..msg_chat_id) then
db = "بصمه فيديو 🎥"
end
text = text..""..k.." » {"..v.."} » {"..db.."}\n"
end
if #list == 0 then
text = "❆︙عذرا لا يوجد ردود مضافه في المجموعه"
end
return luatele.sendText(msg_chat_id,msg_id,"["..text.."]","md",true)  
end
if text == "اضف رد" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- الغاء الامر ', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل الان اسم الرد لاضافته في الردود ", 'md', false, false, false, false, reply_markup)
end
if text == "مسح رد" then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id,"true2")
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- الغاء الامر ', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل الان اسم الرد لمسحه من الردود", 'md', false, false, false, false, reply_markup)
end
if text == ("مسح الردود العامه") then 
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:List:Rd:Sudo")
for k,v in pairs(list) do
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:Gif"..v)   
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:vico"..v)   
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:stekr"..v)     
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:Text"..v)   
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:Photo"..v)
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:Video"..v)
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:File"..v)
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:Audio"..v)
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:video_note"..v)
Redis:del(LiOn.."LiOn:List:Rd:Sudo")
end
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح الردود العامه","md",true)  
end
if text == ("الردود العامه") then 
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:List:Rd:Sudo")
text = "\n📝︙قائمة الردود العامه \n— — — — — — — — —\n"
for k,v in pairs(list) do
if Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Gif"..v) then
db = "متحركه 🎭"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:vico"..v) then
db = "بصمه 📢"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:stekr"..v) then
db = "ملصق 🃏"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Text"..v) then
db = "رساله ✉"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Photo"..v) then
db = "صوره 🎇"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Video"..v) then
db = "فيديو 📹"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:File"..v) then
db = "ملف ❆"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Audio"..v) then
db = "اغنيه 🎵"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:video_note"..v) then
db = "بصمه فيديو 🎥"
end
text = text..""..k.." » {"..v.."} » {"..db.."}\n"
end
if #list == 0 then
text = "❆︙لا توجد ردود للمطور"
end
return luatele.sendText(msg_chat_id,msg_id,"["..text.."]","md",true)  
end
if text == "اضف رد عام" then 
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- الغاء الامر ', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل الان اسم الرد لاضافته في الردود العامه ", 'md', false, false, false, false, reply_markup)
end
if text == "مسح رد عام" then 
if not msg.DevelopersQ then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Set:On"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- الغاء الامر ', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل الان الكلمه لمسحها من الردود العامه", 'md', false, false, false, false, reply_markup)
end
if text=="اذاعه خاص" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Broadcasting:Users" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
luatele.sendText(msg_chat_id,msg_id,[[
↯︙ارسل لي سواء كان 
❨ ملف • ملصق • متحركه • صوره
 • فيديو • بصمه الفيديو • بصمه • صوت • رساله ❩
— — — — — — — — —
↯︙للخروج ارسل ( الغاء )
 ✓
]],"md",true)  
return false
end

if text=="اذاعه" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Broadcasting:Groups" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
luatele.sendText(msg_chat_id,msg_id,[[
↯︙ارسل لي سواء كان 
❨ ملف • ملصق • متحركه • صوره
 • فيديو • بصمه الفيديو • بصمه • صوت • رساله ❩
— — — — — — — — —
↯︙للخروج ارسل ( الغاء )
 ✓
]],"md",true)  
return false
end

if text=="اذاعه بالتثبيت" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Broadcasting:Groups:Pin" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
luatele.sendText(msg_chat_id,msg_id,[[
↯︙ارسل لي سواء كان 
❨ ملف • ملصق • متحركه • صوره
 • فيديو • بصمه الفيديو • بصمه • صوت • رساله ❩
— — — — — — — — —
↯︙للخروج ارسل ( الغاء )
 ✓
]],"md",true)  
return false
end

if text=="اذاعه بالتوجيه" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Broadcasting:Groups:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل لي التوجيه الان\n❆︙ليتم نشره في المجموعات","md",true)  
return false
end

if text=="اذاعه خاص بالتوجيه" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Broadcasting:Users:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل لي التوجيه الان\n❆︙ليتم نشره الى المشتركين","md",true)  
return false
end
if text == 'كشف القيود' and msg.reply_to_message_id ~= 0 then
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local GetMemberStatus = luatele.getChatMember(msg_chat_id,Message_Reply.sender_id.user_id).status
if GetMemberStatus.Merotele == "chatMemberStatusRestricted" then
Restricted = 'مقيد'
else
Restricted = 'غير مقيد'
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).BanAll == true then
BanAll = 'محظور عام'
else
BanAll = 'غير محظور عام'
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).BanGroup == true then
BanGroup = 'محظور'
else
BanGroup = 'غير محظور'
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).SilentGroup == true then
SilentGroup = 'مكتوم'
else
SilentGroup = 'غير مكتوم'
end
luatele.sendText(msg_chat_id,msg_id,"\n*❆︙معلومات الكشف \n— — — — — — — — —"..'\n❆︙الحظر العام : '..BanAll..'\n❆︙الحظر : '..BanGroup..'\n❆︙الكتم : '..SilentGroup..'\n❆︙التقييد : '..Restricted..'*',"md",true)  
end
if text and text:match('^كشف القيود @(%S+)$') then
local UserName = text:match('^كشف القيود @(%S+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local GetMemberStatus = luatele.getChatMember(msg_chat_id,UserId_Info.id).status
if GetMemberStatus.Merotele == "chatMemberStatusRestricted" then
Restricted = 'مقيد'
else
Restricted = 'غير مقيد'
end
if Statusrestricted(msg_chat_id,UserId_Info.id).BanAll == true then
BanAll = 'محظور عام'
else
BanAll = 'غير محظور عام'
end
if Statusrestricted(msg_chat_id,UserId_Info.id).BanGroup == true then
BanGroup = 'محظور'
else
BanGroup = 'غير محظور'
end
if Statusrestricted(msg_chat_id,UserId_Info.id).SilentGroup == true then
SilentGroup = 'مكتوم'
else
SilentGroup = 'غير مكتوم'
end
luatele.sendText(msg_chat_id,msg_id,"\n*❆︙معلومات الكشف \n— — — — — — — — —"..'\n❆︙الحظر العام : '..BanAll..'\n❆︙الحظر : '..BanGroup..'\n❆︙الكتم : '..SilentGroup..'\n❆︙التقييد : '..Restricted..'*',"md",true)  
end
if text == 'رفع القيود' and msg.reply_to_message_id ~= 0 then
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local GetMemberStatus = luatele.getChatMember(msg_chat_id,Message_Reply.sender_id.user_id).status
if GetMemberStatus.Merotele == "chatMemberStatusRestricted" then
Restricted = 'مقيد'
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1})
else
Restricted = ''
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).BanAll == true and msg.ControllerBot then
BanAll = 'محظور عام ,'
Redis:srem(LiOn.."LiOn:BanAll:Groups",Message_Reply.sender_id.user_id) 
else
BanAll = ''
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).BanGroup == true then
BanGroup = 'محظور ,'
Redis:srem(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
else
BanGroup = ''
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).SilentGroup == true then
SilentGroup = 'مكتوم ,'
Redis:srem(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
else
SilentGroup = ''
end
luatele.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
luatele.sendText(msg_chat_id,msg_id,"\n*❆︙تم رفع القيود عنه : {"..BanAll..BanGroup..SilentGroup..Restricted..'}*',"md",true)  
end
if text and text:match('^رفع القيود @(%S+)$') then
local UserName = text:match('^رفع القيود @(%S+)$')
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local GetMemberStatus = luatele.getChatMember(msg_chat_id,UserId_Info.id).status
if GetMemberStatus.Merotele == "chatMemberStatusRestricted" then
Restricted = 'مقيد'
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1})
else
Restricted = ''
end
if Statusrestricted(msg_chat_id,UserId_Info.id).BanAll == true and msg.ControllerBot then
BanAll = 'محظور عام ,'
Redis:srem(LiOn.."LiOn:BanAll:Groups",UserId_Info.id) 
else
BanAll = ''
end
if Statusrestricted(msg_chat_id,UserId_Info.id).BanGroup == true then
BanGroup = 'محظور ,'
Redis:srem(LiOn.."LiOn:BanGroup:Group"..msg_chat_id,UserId_Info.id) 
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
else
BanGroup = ''
end
if Statusrestricted(msg_chat_id,UserId_Info.id).SilentGroup == true then
SilentGroup = 'مكتوم ,'
Redis:srem(LiOn.."LiOn:SilentGroup:Group"..msg_chat_id,UserId_Info.id) 
else
SilentGroup = ''
end
luatele.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
luatele.sendText(msg_chat_id,msg_id,"\n*❆︙تم رفع القيود عنه : {"..BanAll..BanGroup..SilentGroup..Restricted..'}*',"md",true)  
end

if text == 'ضع كليشه المطور' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn..'LiOn:GetTexting:DevLiOn'..msg_chat_id..':'..msg.sender_id.user_id,true)
return luatele.sendText(msg_chat_id,msg_id,'❆︙ ارسل لي الكليشه الان')
end
if text == 'مسح كليشه المطور' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn..'LiOn:Texting:DevLiOn')
return luatele.sendText(msg_chat_id,msg_id,'❆︙ تم مسح كليشه المطور')
end
if text == 'السورس' or text == 'سورس' or text == 'ياسورس'  then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '• LION TEAM . ', url = 'https://t.me/ul_39'}, 
},
{
{text = 'بوت التواصل', url = 'http://t.me/Vvv_4bot'}, 
},
{
{text = 'مطور السورس', url = 't.me/u24uu'}, 
},
}
local msg_id = msg.id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/ul_39&caption=' .. URL.escape([[
*❆︙Lion Source *
— — — — — — — — —
]]).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
elseif text == 'الاوامر' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ 𝟏 }', data = msg.sender_id.user_id..'/help1'}, {text = '{ 𝟐 }', data = msg.sender_id.user_id..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = msg.sender_id.user_id..'/help3'}, {text = '{ 𝟒 }', data = msg.sender_id.user_id..'/help4'}, 
},
{
{text = '{ 𝟓 }', data = msg.sender_id.user_id..'/help5'}, {text = '{ 𝟔 }', data = msg.sender_id.user_id..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = msg.sender_id.user_id..'/helpsudo'},{text = '{ الالعاب }', data = msg.sender_id.user_id..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = msg.sender_id.user_id..'/helpts'},
},
{
{text = '{ القفل / الفتح }', data = msg.sender_id.user_id..'/NoNextSeting'}, {text = '{ التعطيل / التفعيل }', data = msg.sender_id.user_id..'/listallAddorrem'}, 
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
return luatele.sendText(msg_chat_id,msg_id, [[*
❆︙اوامــر البــوت الرئيسيـة 
— — — — — — — — —
❆︙{ م1 } ← اوامر الحمايه
❆︙{ م2 } ← اوامر الادمنيه
❆︙{ م3 } ← اوامر المدراء
❆︙{ م4 } ← اوامر المنشئين
❆︙{ م5 } ← اوامر المالكين
❆︙{ م6 } ← اوامر التحشيش
❆︙{ م7 } ← اوامـــر التسليـه
❆︙{ م المطور } ← اوامر المطور
*]],"md",false, false, false, false, reply_markup)

elseif text == 'م المطور' then
if not msg.Developers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر المطور الاساسي  
— — — — — — — — —
❆︙تفعيل  ←  تعطيل
❆︙رفع  تنزيل ← مطور اساسي
❆︙المطورين الاساسيين
❆︙مسح المطورين الاساسيين
❆︙رفع  تنزيل ← مطور ثانوي
❆︙المطورين الثانويين  
❆︙مسح المطورين الثانويين
❆︙رفع  تنزيل ← مطور
❆︙المطورين ← مسح المطورين
❆︙تغيير المطور الاساسي
— — — — — — — — —
❆︙تفعيل الوضع المدفوع
❆︙الغاء الوضع المدفوع
❆︙تفعيل الوضع المدفوع + { الايدي }
❆︙الغاء الوضع المدفوع + { الايدي }
❆︙معلومات المجموعه + { الايدي }
❆︙حظر مجموعه + { الايدي }
❆︙غادر ← + { الايدي }
❆︙اسم بوتك + غادر بالمجموعه
❆︙تفعيل تعطيل الاشتراك الاجباري
❆︙الاشتراك الاجباري
❆︙تغيير الاشتراك الاجباري
❆︙تفعيل تعطيل الاشتراك الاجباري المجموعه
❆︙الاشتراك الاجباري المجموعه
❆︙تعيين عدد الاعضاء + {العدد}
— — — — — — — — —
❆︙حظر عام ، الغاء حظر عام 
❆︙قائمه العام ، مسح قائمه العام
❆︙كتم عام ، الغاء كتم عام
❆︙المكتومين عام
❆︙مسح المكتومين عام
❆︙رفع القيود عام +{ المعرف } 
— — — — — — — — —
❆︙تغيير ، مسح ←{ اسم البوت }
❆︙ضع صوره للترحيب 
❆︙الاحصائيات
❆︙ذيع + ايدي المجموعه بالرد
❆︙اذاعه ، اذاعه خاص
❆︙اذاعه بالتوجيه ، اذاعه بالتثبيت
❆︙اذاعه خاص بالتوجيه
— — — — — — — — —
❆︙تفعيل تعطيل جلب النسخ تلقائي
❆︙جلب النسخه الاحتياطيه
❆︙رفع النسخه الاحتياطيه بالرد
❆︙رفع نسخه تشاكي بالرد
❆︙جلب نسخه الردود 
❆︙رفع نسخه الردود بالرد
❆︙جلب نسخه الردود العامه
❆︙رفع نسخه الردود العامه بالرد
❆︙اشتراك البوت
❆︙معلومات التنصيب
— — — — — — — — —
❆︙تعيين ، مسح ← { الايدي عام }
❆︙اضف ، مسح ← {رد عام}
❆︙اضف ، مسح ← {رد عام متعدد}
❆︙ضع ، مسح ← { الترحيب عام } 
❆︙ضع ، مسح ← { كليشه المطور }
❆︙الردود العامه ، مسح الردود العامه
❆︙اضف مسح صوت عام
❆︙الصوتيات العامه 
❆︙مسح الصوتيات العامه
❆︙منع عام ، الغاء منع عام
❆︙قائمه المنع عام
❆︙مسح قائمه المنع عام
❆︙تفعيل ، تعطيل ← { امسح عام }
❆︙تفعيل ، تعطيل {ردود السورس عام}
— — — — — — — — —
❆︙اضف مسح ← سؤال
❆︙الاسئله المضافه
❆︙مسح الاسئله المضافه
❆︙اضف مسح ← لغز 
❆︙الالغاز ~ مسح الالغاز
❆︙اضف مسح ← سؤال كت 
❆︙اسئله كت
❆︙اضف اسئله كت
❆︙مسح اسئله كت
❆︙اضف مسح سؤال ← مقالات
❆︙مسح المقالات
— — — — — — — — —
❆︙تفعيل ، تعطيل ← الاوامر التاليه↓
❆︙البوت الخدمي ، المغادرة ، الاذاعه
❆︙التواصل ، الاحصائيات
❆︙ملف ← { اسم الملف }
— — — — — — — — —
❆︙مسح جميع الملفات 
❆︙المتجر ، الملفات
❆︙تحديث ، تحديث السورس
— — — — — — — — —
❆︙اوامر المطور في البوت
— — — — — — — — —
❆︙رفع، تنزيل ← { مالك اساسي }
❆︙المالكين الاساسيين
❆︙مسح المالكين الاساسيين 
❆︙رفع، تنزيل ← { مالك }
❆︙المالكين ، مسح المالكين
❆︙تنزيل جميع الرتب
*]]
return luatele.sendText(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
elseif text == 'م7' then
if not msg.Developers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(3)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
︙اوامر التسليه كالاتي: 
— — — — — — — — —
❆︙الامر ، تفعيل ، تعطيل  ← { الامر }
❆︙غنيلي ، ريمكس ، اغنيه ، شعر
❆︙صوره ،  متحركه
❆︙انمي ، ميمز
❆︙مسلسل ، فلم
❆︙حساب العمر( احسب + تاريخ الميلاد)
❆︙معنى اسم + الاسم
— — — — — — — — —
❆︙زواج ~ طلاق ← { بالرد }
❆︙المتزوجين ~ مسح المتزوجين
❆︙ثنائي اليوم ، منشن
❆︙تفعيل تعطيل زواج
❆︙تفعيل تعطيل ثنائي اليوم 
❆︙تفعيل تعطيل منشن
— — — — — — — — —
❆︙انشاء ، مسح حساب بنكي
❆︙راتب ، بخشيش
❆︙استثمار + { رقم }
❆︙مضاربه + { رقم }
❆︙حظ + { رقم }
❆︙توب ، حسابي ، فلوسي
❆︙حسابه ، فلوسه  { بالرد }
❆︙سرقه { بالرد }
❆︙تحويل + رقم  { بالرد }
❆︙تصفير الفلوس 
❆︙تفعيل ، تعطيل البنك
— — — — — — — — —
*]]
return luatele.sendText(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
elseif text == 'م1' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر الحمايه كالاتي ...
— — — — — — — — —
❆︙قفل ، فتح ← الامر 
❆︙تستطيع قفل حمايه كما يلي ...
❆︙← { بالتقييد ، بالطرد ، بالكتم }
— — — — — — — — —
❆︙الكل ~ الدخول
❆︙الروابط ~ المعرف
❆︙التاك ~ الشارحه
❆︙التعديل ~ تعديل الميديا
❆︙المتحركه ~ الملفات
❆︙الصور ~ الفيديو 
— — — — — — — — —
❆︙الماركداون ~ البوتات
❆︙التكرار ~ الكلايش
❆︙السيلفي ~ الملصقات
❆︙الانلاين ~  الدردشه
— — — — — — — — —
❆︙التوجيه ~ الاغاني
❆︙الصوت ~ الجهات
❆︙الاشعارات ~ التثبيت 
❆︙الوسائط ~ التفليش
❆︙وسائط المميزين
❆︙الفشار ~ ارسال القناة
❆︙القنوات
❆︙الإنكليزيه ~ الفارسيه
❆︙الكفر ~ الاباحي
— — — — — — — — —
*]]
return luatele.sendText(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
elseif text == 'م2' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر ادمنية المجموعه ...
— — — — — — — — —
❆︙رفع، تنزيل ← مميز
❆︙المميزين ← مسح المميزين
❆︙رفع المالك 
❆︙تاك ، تاك للكل ، المجموعه
❆︙منع ، الغاء منع
— — — — — — — — —
❆︙الاوامر التالية ← {بالرد ، بالمعرف}
❆︙حظر ، طرد ← الغاء حظر 
❆︙كتم ← الغاء كتم
❆︙تقييد ← الغاء تقييد
❆︙كشف ، رفع ← القيود
— — — — — — — — —
❆︙عرض القوائم كما يلي ...
— — — — — — — — —
❆︙المنشئين الاساسيين ، المنشئين 
❆︙المدراء ، الادمنيه ، المميزين
❆︙المشرفين ، المكتومين
❆︙قائمه المنع
— — — — — — — — —
❆︙تثبيت ، الغاء تثبيت
❆︙الرابط ، الاعدادات ، الحمايه
❆︙الترحيب ، القوانين
❆︙ضع رتبه  ← { اسم الرتبه } 
❆︙تحكم ← {بالرد ، بالمعرف}
— — — — — — — — —
❆︙تفعيل ، تعطيل ← الاوامر التاليه :
❆︙الترحيب ، الرابط ، التحقق 
❆︙الالعاب ، التحشيش
❆︙اطردني
— — — — — — — — —
❆︙مسح ← الاوامر التاليه
❆︙القوائم ، قائمه المنع ، المميزين
❆︙الرابط ، القوانين ، الصوره
❆︙مسح ← { عدد }
❆︙مسح ← { بالرد }
— — — — — — — — —
❆︙اوامر الاعضاء والادمنيه 
— — — — — — — — —
❆︙ايدي ، ايدي بالرد ، رسائلي
❆︙تفاعلي ، لقبي ، بايو
❆︙اسمي ، معرفي ، التفاعل  
❆︙جهاتي ، سحكاتي ، نقاطي
❆︙بيع نقاطي + العدد
❆︙مسح نقاطي
❆︙كول + الكلمه
❆︙منشن ، ترند
❆︙زواج ، ثنائي اليوم ، نبذه  
❆︙الوقت ، الساعه ، التاريخ
❆︙الصوتيات ، الصوتيات العامه
❆︙زخرفه ، زخرفه + اسم
❆︙تحويل الصيغ ، غنيلي , اغنيه
❆︙همسه ، اسم برجك ، صورتي
❆︙صلاحياتي ، رتبتي ، نزلني
❆︙صلاحياته ← {بالرد ، بالمعرف}
❆︙الرتبه ← {بالرد ، بالمعرف}
❆︙تفاعله ← {بالرد ، بالمعرف}
❆︙جهاته ← {بالرد ، بالمعرف}
❆︙كشف ← {بالرد ، بالمعرف}
*]]
return luatele.sendText(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
elseif text == 'م3' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر المدراء في المجموعه
— — — — — — — — —
❆︙رفع ، تنزيل ← ادمن
❆︙الادمنيه ← مسح الادمنيه
❆︙رفع الادمنيه 
❆︙تنزيل الكل ← {بالرد ، بالمعرف}
❆️︙كشف ، طرد ، قفل ← البوتات
❆︙قفل البوتات ← بالطرد
❆︙فحص ← البوت
❆︙طرد ← المحذوفين 
❆︙قفل فتح ← ارسال القناة
— — — — — — — — —
❆︙لتغيير رد الرتب في البوت
— — — — — — — — —
❆︙تغيير رد ← {اسم الرتبه والنص} 
❆︙المطور ، المالك ، المنشئ الاساسي
❆︙المنشئ ، المدير ، الادمن
❆︙المميز ، العضو
❆︙مسح رد ← { اسم الرتبه }
— — — — — — — — —
❆︙وضع الرتب ← { بالرد ، بالمعرف}
❆︙ضع رتبه ← { اسم الرتبه }
❆︙مسح رتبه ← { بالرد ، بالمعرف}
— — — — — — — — —
❆︙وضع ، ضع ← الاوامر التاليه
❆︙اسم + اسم المجموعه
❆︙رابط ، صوره
❆︙قوانين ، وصف ،الترحيب 
— — — — — — — — —
❆︙تفعيل ، تعطيل ← الاوامر التاليه :
❆︙الايدي ، الايدي بالصوره
❆︙ايدي العضو ، البايو
❆︙الترحيب ، منشن
❆︙صورتي ، اسمي ؛ نبذه
❆︙الردود ، الابراج ، التفاعل
❆︙غنيلي ، الصيغ ، كول
❆︙التنبيه ، ردود البوت 
❆︙الصوتيات ، الصوتيات العامه
— — — — — — — — —
❆︙مسح ← + { الامر } 
❆︙المحظورين ، المطرودين
❆︙المكتومين ← المقيدين
— — — — — — — — —
❆︙ترتيب الاوامر ← استعاده الاوامر
❆︙اضف ، مسح ← { رد }
❆︙الردود ، مسح الردود
❆︙اضف ، مسح ← { رد متعدد}
❆︙الردود المتعدده
❆︙مسح الردود المتعدده
❆︙تاك عام ، all
❆︙الكلمه + @all
❆︙الميديا ← امسح
❆︙اضف رسائل + العدد { بالرد}
❆︙اضف نقاط + العدد { بالرد }
❆︙اضف سحكات + العدد {بالرد}
*]]
return luatele.sendText(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
elseif text == 'م4' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر المنشئ الاساسي
— — — — — — — — —
❆︙رفع ، تنزيل ←{ منشئ }
❆︙المنشئين ، مسح المنشئين
❆︙رفع ، تنزيل ←{ مشرف }
❆︙ضع لقب + اللقب ← { بالرد }
❆︙صلاحيات المجموعه
❆︙مسح نقاطه ، رسائله ← {بالرد} 
❆︙تفعيل ، تعطيل ← الحظر المحدود
❆︙تفعيل ، تعطيل ← البنك
— — — — — — — — —
❆︙اوامر المنشئ المجموعه
— — — — — — — — —
❆︙رفع ، تنزيل ← { مدير }
❆︙المدراء ، مسح المدراء
❆︙تغيير ، مسح ←{ الايدي }
❆︙تعيين ، مسح ←{ الايدي }
❆︙اضف ، مسح ← { امر }
❆︙الاوامر المضافه ، مسح الاوامر المضافه
❆︙ضع التكرار ← { عدد }
❆︙تفعيل الاوامر ← { اوامر اساسيه }
— — — — — — — — —
❆︙تفعيل ، تعطيل ← الاوامر التاليه :
❆︙الردود العامه ، الطرد ، الحظر
❆︙الرفع ، التاك ، نزلني ، ضع رتبه 
❆︙تاك عام ، المسح التلقائي ، امسح
❆︙ضع عدد المسح + { عدد }
❆︙تفعيل ، تعطيل التوحيد
❆︙ضع التوحيد + رمز التوحيد
❆︙تعيين عدد الكتم + رقم
*]]
return luatele.sendText(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
elseif text == 'م5' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end

if ChannelJoin(msg) == false then  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر مالك المجموعه 
— — — — — — — — —
❆︙رفع ، تنزيل ←{ مالك }
❆︙المالكين ، مسح المالكين
❆︙ارفعني مالك (مشرف يمتلك صلاحيات المالك) يتم رفعه بهذا الامر
❆︙رفع المالك (المالك اذا كان عضو يمكنه رفع نفسه)
❆︙تنزيل جميع الرتب
— — — — — — — — —
❆︙اوامر المالكين 
— — — — — — — — —
❆︙رفع ، تنزيل ←{ منشئ اساسي }
❆︙المنشئين الاساسيين،
❆︙مسح المنشئين الاساسيين
❆︙تفعيل ، تعطيل الالعاب المالكين
❆︙تفعيل ، تعطيل نداء المالك
❆︙رفع ، تنزيل {مشرف بكل الصلاحيات}
*]]
return luatele.sendText(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
elseif text == 'م6' then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end

if ChannelJoin(msg) == false then  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
   ↫‌‌‏ اوامر التحشيش 
   — — — — — — — — —
   ❆︙تفعيل تعطيل التحشيش
   ❆︙رفــــع «» تنزيــــل ⇣
   — — — — — — — — —
   ❆︙تـــــاج  ~ مـــلـك
   ❆︙مـــلـكه ~  مرتــي
   ❆︙اثـــول  ~ جلـــب
   ❆︙مطــي  ~ صخـل
   ❆︙بـقـــره ~ زاحـف
   ❆︙لوكــي  ~ غبـــي
   ❆︙طـلــي ~ طامس
   ❆︙بكلبي ~ من كلبي
   — — — — — — — — —
   ❆︙الامـر ⇣ ~ مسح + الامـر ⇣ 
   — — — — — — — — —
   ❆︙قائمه التاج ~ المـلــوك
   ❆︙المـلـكات ~ الطامسين
   ❆︙الثولان ~  الجــلاب
   ❆︙المطايــه ~  الصخول
   ❆︙البـقــرات ~ الزواحف
   ❆︙اللوكيــه ~  الاغبيـاء
   ❆︙الطليـان ~  قائمـه كلبي
    — — — — — — — — —
   ❆︙نسبه الحب/ الكره
   ❆︙نسبه الرجوله/ الانوثه 
   ❆︙نسبه الذكـــــاء/ الغباء 
    — — — — — — — — —
   ❆︙الاوامــر بالـــرد  ⇣ 
    — — — — — — — — —
   ❆︙شنو رايك بهذا 
   ❆︙شنو رايك بهاي 
   ❆︙انطي هديه
   ❆︙بوســه ~  بوسـني
   ❆︙صيحـه ~  رزلـــه
   — — — — — — — — —
*]]
return luatele.sendText(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)

elseif text == 'الالعاب' or text == 'العاب' then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙قائمــه العــاب البــوت
— — — — — — — — —
❆︙المختلف »  لعبة المختلف
❆︙امثله » لعبة الامثله 
❆︙العكس « لعبة عكس الكلمه
❆︙حزوره « لعبة الحزوره
❆︙معاني « لعبة المعاني
❆︙بات « لعبة البات 
❆︙خمن » لعبة التخمين
❆︙ترتيب » لعبة  ترتيب الحروف
❆︙سمايلات » لعبة السمايلات
❆︙اسئله » اسئله منوعه
❆︙اسالني » اسئله عامه متجدده
❆︙لغز  » الغاز الذكاء متجدده
❆︙روليت » الروليت بالمعرفات 
❆︙الروليت » الروليت بالانضمام
❆︙رياضيات » مسائل رياضيه 
❆︙انكليزي » معاني الكلمات 
❆︙كت تويت ،كت » اسئله ترفيهيه
❆︙لو خيروك » لعبة لو خيروك
❆︙صراحه » لعبة الصراحه
❆︙اعلام » لعبة اعلام الدول
❆︙مقالات » لعبة المقالات
❆︙عواصم » لعبة عواصم الدول
❆︙كلمات » لعبة كتابة الكلمات
❆︙الحظ » لعبة الحظ شفافه
— — — — — — — — —
❆︙نقاطي ← لعرض عدد النقاط 
❆︙بيع نقاطي + { العدد } 
لبيع كل نقطه مقابل {50} رساله
*]]
return luatele.sendText(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
end
if text == 'تحديث' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
print('Chat Id : '..msg_chat_id)
print('User Id : '..msg_user_send_id)
luatele.sendText(msg_chat_id,msg_id, "❆︙ تم تحديث الملفات ♻","md",true)
dofile('LiOn.lua')  
end
if text == "تغير اسم البوت" or text == "تغيير اسم البوت" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Change:Name:Bot"..msg.sender_id.user_id,300,true) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙ ارسل لي الاسم الان ","md",true)  
end
if text == "مسح اسم البوت" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Name:Bot") 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح اسم البوت ","md",true)   
end
if text == (Redis:get(LiOn.."LiOn:Name:Bot") or "اسد") then
local NamesBot = (Redis:get(LiOn.."LiOn:Name:Bot") or "اسد")
local NameBots = {
"ﻋـمـرّ "..NamesBot.. " شتريۧد؟،🌸)",
"ٱي ٱي ھَہّيٱﺗ̲ﻧـي ٱﻧـي،🥀",
"م̀وجود̀ بس̀́ لتص̀́يح̀ 😐",
"لتــلح̀ د̀آ̀ آ̀ح̀جي ويه̀ بن̀آ̀ت بع̀́د̀ين̀ آ̀جآ̀وبك،😕",
"رٱڂ ڻموﭠ ﭜڳوروڻٱ وڻﭠهـﮧ ﭜ؏ﮃڳ ﭠڝيِّڂ، "..NamesBot,
'يمعٍوودِ ووآلُِلُِهـ نعٍسآن😴',
"عيۧونۨــہ "..NamesBot.. " تفضل؟،💕🥰",
"ٱصـبِرّ ٱﺷ̲رّبِ چٱي وٱچي🤓 ؟",
"ﮬ̲̌ٱ حيٱت̲ي ٱمـرّﻧ̲ـي 🥰",
"ٱسڪْﭥ ڪْٱف̲ي دوختني😐",
"تِٰـآجِٰـﮧِۢ رٰآسِٰـڪِٰـ "..NamesBot,
'مۘشغول حۡٱليۧٱ بعديۧنۨــہ ٱچٱوبِڪ 🤨'
}
return luatele.sendText(msg_chat_id,msg_id, NameBots[math.random(#NameBots)],"md",true)  
end
if text == "بوت" then
local NamesBot = (Redis:get(LiOn.."LiOn:Name:Bot") or "اسد")
if msg.ControllerBot then 
local su = {
"نعٍم حٍبَيبَي آلُِمطُوُرٍ 🌝❤",
"هـآ يرٍوُحٍي ڪوُلُِ ☺️",
"هـلُِآ بَعٍدِ دِڪآت ڪلُِبَي آلُِمطُوُرٍ 💖😉",
"يآبَعٍدِ رووحٍ ["..NamesBot.."] ??❤️",
"هـلُِآ بَمطُـوُرٍي آلُِعٍشُقٌ أمرٍني ☺️"}
luatele.sendText(msg_chat_id,msg_id,su[math.random(#su)],"md",true)   
else
local BotName = {
"لك ٱنۨــہيۧ ٱحۡبك صيۧحۡليۧ بٱسۜمۘيۧ "..NamesBot,
"لتخليني اعصب وردا ترا اسمي "..NamesBot.. "",
"چمٱعّﭥڪْ شبّـعّو مي ورد وٱنت بّـعّدڪ ﭥصيح بّـوت 👌🤣",
"اسمي "..NamesBot,
"ٱسۜكت لٱ ٱخۡرب وچهڪْ☹",
"ٱنۨــہت ٱلبوت يۧلٱ ٱشطحۡ 😠",
"شبيۧك مۘهۂَتلف رٱسۜك مۘربع 🤥",
"يۧمۘعود شتريۧد مۘوعت ٱذنۨــہيۧ،😕",
}
return luatele.sendText(msg_chat_id,msg_id,BotName[math.random(#BotName)],"md",true)   
end
end
if text == 'تنظيف المشتركين' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:Num:User:Pv")   
local x = 0
for k,v in pairs(list) do  
local Get_Chat = luatele.getChat(v)
local ChatAction = luatele.sendChatAction(v,'Typing')
if ChatAction.Merotele ~= "ok" then
x = x + 1
Redis:srem(LiOn..'LiOn:Num:User:Pv',v)
end
end
if x ~= 0 then
return luatele.sendText(msg_chat_id,msg_id,'*❆︙العدد الكلي { '..#list..' }\n❆︙تم العثور على { '..x..' } من المشتركين حاظرين البوت*',"md")
else
return luatele.sendText(msg_chat_id,msg_id,'*❆︙العدد الكلي { '..#list..' }\n❆︙لم يتم العثور على وهميين*',"md")
end
end
if text == 'تنظيف المجموعات' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:ChekBotAdd")   
local x = 0
for k,v in pairs(list) do  
local Get_Chat = luatele.getChat(v)
if Get_Chat.id then
local statusMem = luatele.getChatMember(Get_Chat.id,LiOn)
if statusMem.status.Merotele == "chatMemberStatusMember" then
x = x + 1
luatele.sendText(Get_Chat.id,0,'*❆︙البوت عضو في المجموعه سوف اغادر ويمكنك تفعيلي مره اخره *',"md")
Redis:srem(LiOn..'LiOn:ChekBotAdd',Get_Chat.id)
local keys = Redis:keys(LiOn..'*'..Get_Chat.id)
for i = 1, #keys do
Redis:del(keys[i])
end
luatele.leaveChat(Get_Chat.id)
end
else
x = x + 1
local keys = Redis:keys(LiOn..'*'..v)
for i = 1, #keys do
Redis:del(keys[i])
end
Redis:srem(LiOn..'LiOn:ChekBotAdd',v)
luatele.leaveChat(v)
end
end
if x ~= 0 then
return luatele.sendText(msg_chat_id,msg_id,'*❆︙العدد الكلي { '..#list..' } للمجموعات \n❆︙تم العثور على { '..x..' } مجموعات البوت ليس ادمن \n❆︙تم تعطيل المجموعه ومغادره البوت من الوهمي *',"md")
else
return luatele.sendText(msg_chat_id,msg_id,'*❆︙العدد الكلي { '..#list..' } للمجموعات \n❆︙لا توجد مجموعات وهميه*',"md")
end
end
if text and text:match('^رفع القيود عام @(%S+)$') then
local UserName = text:match('^رفع القيود عام @(%S+)$') 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
local UserId_Info = luatele.searchPublicChat(UserName)
if not UserId_Info.id then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف قناة او كروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local list = Redis:smembers(LiOn.."LiOn:ChekBotAdd")   
for k,v in pairs(list) do  
Redis:srem(LiOn.."LiOn:KtmAll:Groups",UserId_Info.id) 
Redis:srem(LiOn.."LiOn:BanAll:Groups",UserId_Info.id) 
Redis:srem(LiOn.."LiOn:BanGroup:Group"..v,UserId_Info.id) 
Redis:srem(LiOn.."LiOn:SilentGroup:Group"..v,UserId_Info.id) 
luatele.setChatMemberStatus(v,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
end
luatele.sendText(msg_chat_id,msg_id,"\n*❆︙تم رفع القيود عنه بكل المجموعات*","md",true)  
end

if text == "سمايلات" or text == "سمايل" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
Random = {"??","🍎","🍐","??","🍋","🍉","??","🍓","🍈","🍒","🍑","🍍","🥥","??","🍅","🍆","🥑","🥦","🥒","🌶","🌽","🥕","🥔","🥖","🥐","🍞","🥨","🍟","??","🥚","🍳","??","🥩","🍗","🍖","🌭","🍔","🍠","🍕","🥪","🥙","☕️","🥤","🍶","🍺","??","🏀","⚽️","🏈","⚾️","🎾","🏐","🏉","🎱","🏓","🏸","🥅","🎰","🎮","🎳","🎯","🎲","🎻","🎸","🎺","🥁","🎹","🎼","🎧","🎤","🎬","🎨","🎭","🎪","🎟","🎫","🎗","🏵","🎖","🏆","🥌","🛷","🚗","🚌","🏎","🚓","🚑","🚚","🚛","🚜","⚔","🛡","🔮","🌡","💣","❆","📍","📓","📗","📂","📅","📪","??","❆","📭","⏰","??","🎚","☎️","📡"}
SM = Random[math.random(#Random)]
Redis:set(LiOn.."LiOn:Game:Smile"..msg.chat_id,SM)
return luatele.sendText(msg_chat_id,msg_id,"❆︙اسرع واحد يدز هذا السمايل ? ~ {`"..SM.."`}","md",true)  
end
end

if text == "الاسرع" or text == "ترتيب" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
KlamSpeed = {"سحور","سياره","استقبال","قنفه","ايفون","بزونه","مطبخ","كرستيانو","دجاجه","مدرسه","الوان","غرفه","ثلاجه","كهوه","سفينه","العراق","محطه","طياره","رادار","منزل","مستشفى","كهرباء","تفاحه","اخطبوط","سلمون","فرنسا","برتقاله","تفاح","مطرقه","بتيته","لهانه","شباك","باص","سمكه","ذباب","تلفاز","حاسوب","انترنيت","ساحه","جسر"};
name = KlamSpeed[math.random(#KlamSpeed)]
Redis:set(LiOn.."LiOn:Game:Monotonous"..msg.chat_id,name)
name = string.gsub(name,"سحور","س ر و ح")
name = string.gsub(name,"سياره","ه ر س ي ا")
name = string.gsub(name,"استقبال","ل ب ا ت ق س ا")
name = string.gsub(name,"قنفه","ه ق ن ف")
name = string.gsub(name,"ايفون","و ن ف ا")
name = string.gsub(name,"بزونه","ز و ه ن")
name = string.gsub(name,"مطبخ","خ ب ط م")
name = string.gsub(name,"كرستيانو","س ت ا ن و ك ر ي")
name = string.gsub(name,"دجاجه","ج ج ا د ه")
name = string.gsub(name,"مدرسه","ه م د ر س")
name = string.gsub(name,"الوان","ن ا و ا ل")
name = string.gsub(name,"غرفه","غ ه ر ف")
name = string.gsub(name,"ثلاجه","ج ه ت ل ا")
name = string.gsub(name,"كهوه","ه ك ه و")
name = string.gsub(name,"سفينه","ه ن ف ي س")
name = string.gsub(name,"العراق","ق ع ا ل ر ا")
name = string.gsub(name,"محطه","ه ط م ح")
name = string.gsub(name,"طياره","ر ا ط ي ه")
name = string.gsub(name,"رادار","ر ا ر ا د")
name = string.gsub(name,"منزل","ن ز م ل")
name = string.gsub(name,"مستشفى","ى ش س ف ت م")
name = string.gsub(name,"كهرباء","ر ب ك ه ا ء")
name = string.gsub(name,"تفاحه","ح ه ا ت ف")
name = string.gsub(name,"اخطبوط","ط ب و ا خ ط")
name = string.gsub(name,"سلمون","ن م و ل س")
name = string.gsub(name,"فرنسا","ن ف ر س ا")
name = string.gsub(name,"برتقاله","ر ت ق ب ا ه ل")
name = string.gsub(name,"تفاح","ح ف ا ت")
name = string.gsub(name,"مطرقه","ه ط م ر ق")
name = string.gsub(name,"بتيته","ب ت ت ي ه")
name = string.gsub(name,"لهانه","ه ن ل ه ل")
name = string.gsub(name,"شباك","ب ش ا ك")
name = string.gsub(name,"باص","ص ا ب")
name = string.gsub(name,"سمكه","ك س م ه")
name = string.gsub(name,"ذباب","ب ا ب ذ")
name = string.gsub(name,"تلفاز","ت ف ل ز ا")
name = string.gsub(name,"حاسوب","س ا ح و ب")
name = string.gsub(name,"انترنيت","ا ت ن ر ن ي ت")
name = string.gsub(name,"ساحه","ح ا ه س")
name = string.gsub(name,"جسر","ر ج س")
return luatele.sendText(msg_chat_id,msg_id,"❆︙اسرع واحد يرتبها ~ {"..name.."}","md",true)  
end
end
if text == "حزوره" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
Hzora = {"الجرس","عقرب الساعه","السمك","المطر","5","الكتاب","البسمار","7","الكعبه","بيت الشعر","لهانه","انا","امي","الابره","الساعه","22","غلط","كم الساعه","البيتنجان","البيض","المرايه","الضوء","الهواء","الضل","العمر","القلم","المشط","الحفره","البحر","الثلج","الاسفنج","الصوت","بلم"};
name = Hzora[math.random(#Hzora)]
Redis:set(LiOn.."LiOn:Game:Riddles"..msg.chat_id,name)
name = string.gsub(name,"الجرس","شيئ اذا لمسته صرخ ما هوه ؟")
name = string.gsub(name,"عقرب الساعه","اخوان لا يستطيعان تمضيه اكثر من دقيقه معا فما هما ؟")
name = string.gsub(name,"السمك","ما هو الحيوان الذي لم يصعد الى سفينة نوح عليه السلام ؟")
name = string.gsub(name,"المطر","شيئ يسقط على رأسك من الاعلى ولا يجرحك فما هو ؟")
name = string.gsub(name,"5","ما العدد الذي اذا ضربته بنفسه واضفت عليه 5 يصبح ثلاثين ")
name = string.gsub(name,"الكتاب","ما الشيئ الذي له اوراق وليس له جذور ؟")
name = string.gsub(name,"البسمار","ما هو الشيئ الذي لا يمشي الا بالضرب ؟")
name = string.gsub(name,"7","عائله مؤلفه من 6 بنات واخ لكل منهن .فكم عدد افراد العائله ")
name = string.gsub(name,"الكعبه","ما هو الشيئ الموجود وسط مكة ؟")
name = string.gsub(name,"بيت الشعر","ما هو البيت الذي ليس فيه ابواب ولا نوافذ ؟ ")
name = string.gsub(name,"لهانه","وحده حلوه ومغروره تلبس مية تنوره .من هيه ؟ ")
name = string.gsub(name,"انا","ابن امك وابن ابيك وليس باختك ولا باخيك فمن يكون ؟")
name = string.gsub(name,"امي","اخت خالك وليست خالتك من تكون ؟ ")
name = string.gsub(name,"الابره","ما هو الشيئ الذي كلما خطا خطوه فقد شيئا من ذيله ؟ ")
name = string.gsub(name,"الساعه","ما هو الشيئ الذي يقول الصدق ولكنه اذا جاع كذب ؟")
name = string.gsub(name,"22","كم مره ينطبق عقربا الساعه على بعضهما في اليوم الواحد ")
name = string.gsub(name,"غلط","ما هي الكلمه الوحيده التي تلفض غلط دائما ؟ ")
name = string.gsub(name,"كم الساعه","ما هو السؤال الذي تختلف اجابته دائما ؟")
name = string.gsub(name,"البيتنجان","جسم اسود وقلب ابيض وراس اخظر فما هو ؟")
name = string.gsub(name,"البيض","ماهو الشيئ الذي اسمه على لونه ؟")
name = string.gsub(name,"المرايه","ارى كل شيئ من دون عيون من اكون ؟ ")
name = string.gsub(name,"الضوء","ما هو الشيئ الذي يخترق الزجاج ولا يكسره ؟")
name = string.gsub(name,"الهواء","ما هو الشيئ الذي يسير امامك ولا تراه ؟")
name = string.gsub(name,"الضل","ما هو الشيئ الذي يلاحقك اينما تذهب ؟ ")
name = string.gsub(name,"العمر","ما هو الشيء الذي كلما طال قصر ؟ ")
name = string.gsub(name,"القلم","ما هو الشيئ الذي يكتب ولا يقرأ ؟")
name = string.gsub(name,"المشط","له أسنان ولا يعض ما هو ؟ ")
name = string.gsub(name,"الحفره","ما هو الشيئ اذا أخذنا منه ازداد وكبر ؟")
name = string.gsub(name,"البحر","ما هو الشيئ الذي يرفع اثقال ولا يقدر يرفع مسمار ؟")
name = string.gsub(name,"الثلج","انا ابن الماء فان تركوني في الماء مت فمن انا ؟")
name = string.gsub(name,"الاسفنج","كلي ثقوب ومع ذالك احفض الماء فمن اكون ؟")
name = string.gsub(name,"الصوت","اسير بلا رجلين ولا ادخل الا بالاذنين فمن انا ؟")
name = string.gsub(name,"بلم","حامل ومحمول نصف ناشف ونصف مبلول فمن اكون ؟ ")
return luatele.sendText(msg_chat_id,msg_id,"❆︙اسرع واحد يحل الحزوره ↓\n {"..name.."}","md",true)  
end
end
if text == "معاني" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
Redis:del(LiOn.."LiOn:Set:Maany"..msg.chat_id)
Maany_Rand = {"قرد","دجاجه","بطريق","ضفدع","بومه","نحله","ديك","جمل","بقره","دولفين","تمساح","قرش","نمر","اخطبوط","سمكه","خفاش","اسد","فأر","ذئب","فراشه","عقرب","زرافه","قنفذ","تفاحه","باذنجان"}
name = Maany_Rand[math.random(#Maany_Rand)]
Redis:set(LiOn.."LiOn:Game:Meaningof"..msg.chat_id,name)
name = string.gsub(name,"قرد","🐒")
name = string.gsub(name,"دجاجه","🐔")
name = string.gsub(name,"بطريق","🐧")
name = string.gsub(name,"ضفدع","🐸")
name = string.gsub(name,"بومه","🦉")
name = string.gsub(name,"نحله","🐝")
name = string.gsub(name,"ديك","🐓")
name = string.gsub(name,"جمل","🐫")
name = string.gsub(name,"بقره","🐄")
name = string.gsub(name,"دولفين","🐬")
name = string.gsub(name,"تمساح","🐊")
name = string.gsub(name,"قرش","🦈")
name = string.gsub(name,"نمر","🐅")
name = string.gsub(name,"اخطبوط","🐙")
name = string.gsub(name,"سمكه","🐟")
name = string.gsub(name,"خفاش","🦇")
name = string.gsub(name,"اسد","🦁")
name = string.gsub(name,"فأر","🐭")
name = string.gsub(name,"ذئب","🐺")
name = string.gsub(name,"فراشه","🦋")
name = string.gsub(name,"عقرب","🦂")
name = string.gsub(name,"زرافه","🦒")
name = string.gsub(name,"قنفذ","🦔")
name = string.gsub(name,"تفاحه","🍎")
name = string.gsub(name,"باذنجان","🍆")
return luatele.sendText(msg_chat_id,msg_id,"❆︙اسرع واحد يدز معنى السمايل ~ {"..name.."}","md",true)  
end
end
if text == "العكس" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
Redis:del(LiOn.."LiOn:Set:Aks"..msg.chat_id)
katu = {"باي","فهمت","موزين","اسمعك","احبك","موحلو","نضيف","حاره","ناصي","جوه","سريع","ونسه","طويل","سمين","ضعيف","قصير","شجاع","رحت","عدل","نشيط","شبعان","موعطشان","خوش ولد","اني","هادئ"}
name = katu[math.random(#katu)]
Redis:set(LiOn.."LiOn:Game:Reflection"..msg.chat_id,name)
name = string.gsub(name,"باي","هلو")
name = string.gsub(name,"فهمت","مافهمت")
name = string.gsub(name,"موزين","زين")
name = string.gsub(name,"اسمعك","ماسمعك")
name = string.gsub(name,"احبك","ماحبك")
name = string.gsub(name,"موحلو","حلو")
name = string.gsub(name,"نضيف","وصخ")
name = string.gsub(name,"حاره","بارده")
name = string.gsub(name,"ناصي","عالي")
name = string.gsub(name,"جوه","فوك")
name = string.gsub(name,"سريع","بطيء")
name = string.gsub(name,"ونسه","ضوجه")
name = string.gsub(name,"طويل","قزم")
name = string.gsub(name,"سمين","ضعيف")
name = string.gsub(name,"ضعيف","قوي")
name = string.gsub(name,"قصير","طويل")
name = string.gsub(name,"شجاع","جبان")
name = string.gsub(name,"رحت","اجيت")
name = string.gsub(name,"عدل","ميت")
name = string.gsub(name,"نشيط","كسول")
name = string.gsub(name,"شبعان","جوعان")
name = string.gsub(name,"موعطشان","عطشان")
name = string.gsub(name,"خوش ولد","موخوش ولد")
name = string.gsub(name,"اني","مطي")
name = string.gsub(name,"هادئ","عصبي")
return luatele.sendText(msg_chat_id,msg_id,"❆︙اسرع واحد يدز العكس ~ {"..name.."}","md",true)  
end
end
if text == "بات" or text == "محيبس" then   
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then 
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '➀ » { 👊 }', data = '/Mahibes1'}, {text = '➁ » { 👊 }', data = '/Mahibes2'}, 
},
{
{text = '➂ » { 👊 }', data = '/Mahibes3'}, {text = '➃ » { ?? }', data = '/Mahibes4'}, 
},
{
{text = '➄ » { 👊 }', data = '/Mahibes5'}, {text = '➅ » { 👊 }', data = '/Mahibes6'}, 
},
}
}
return luatele.sendText(msg_chat_id,msg_id, [[*
❆︙ لعبه المحيبس هي لعبة الحظ 
❆︙جرب حظك ويه البوت واتونس 
❆︙كل ما عليك هوا الضغط على اليد في الازرار
*]],"md",false, false, false, false, reply_markup)
end
end
if text == "خمن" or text == "تخمين" then   
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
Num = math.random(1,20)
Redis:set(LiOn.."LiOn:Game:Estimate"..msg.chat_id..msg.sender_id.user_id,Num)  
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙اهلا بك عزيزي في لعبة التخمين :\nٴ━━━━━━━━━━\n".."❆︙ملاحظه لديك { 3 } محاولات فقط فكر قبل ارسال تخمينك \n\n".."❆︙سيتم تخمين عدد ما بين ال {1 و 20} اذا تعتقد انك تستطيع الفوز جرب واللعب الان ؟ ","md",true)  
end
end
if text == 'اسئله' then   
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
t1 = [[
ماهو اطول نهر في العالم 
1- النيل  
2- الفرات 
3- نهر الكونغو

❆︙ارسل  الجواب الصحيح فقط
]]
t2 = [[
ماعدد عظام الوجه؟
1- 15
2- 13
3- 14 

❆︙ارسل  الجواب الصحيح فقط
]]
t3 =[[
كراسي بيضاء وجدران ورديه اذا اغلقته اصبح ظلام  فمن اكون؟

1- الفم 
2- الاذن
3- الثلاجه

❆︙ارسل  الجواب الصحيح فقط
]]
t4 =[[
كم جزء تحتوي مسلسل وادي الذئاب؟

1- 7
2- 15
3- 11

❆︙ارسل  الجواب الصحيح فقط
]]
t5 =[[
كم جزء يحتوي القران الكريم؟

1- 60
2- 70
3- 30 

❆︙ارسل  الجواب الصحيح فقط
]]
t6 =[[
من هوه اغنى رئيس في العالم؟

1- ترامب
2- اوباما
3- بوتين  

❆︙ارسل  الجواب الصحيح فقط
]]

t7 =[[
من هوه مؤسس شركه ابل العالميه 

1-لاري بايج 
2- بيا غايتز
3- ستيف جوبر

❆︙ارسل  الجواب الصحيح فقط
]]
t8 =[[
ماهي عاصمه فرنسا؟

1- باريس 
2- لوين 
3- موسكو 

❆︙ارسل  الجواب الصحيح فقط
]]
t9 =[[
ماعدد دول العربيه التي توجد في افريقيا 

1- 10 
2- 17
3- 9

❆︙ارسل  الجواب الصحيح فقط
]]
t11 =[[
ماهو الحيوان الذي يحمل 50 فوق وزنه؟
1-الفيل
2- النمل  
3- الثور

❆︙ارسل  الجواب الصحيح فقط
]]
t12 =[[
ماذا يوجد بيني وبينك؟  
1- الضل
2- الاخلاق
3-حرف الواو  

❆︙ارسل  الجواب الصحيح فقط
]]
t13 =[[
ماهو الشيء النبات ينبت للانسان بلا بذر؟
1-الاضافر 
2- الاسنان
3- الشعر

❆︙ارسل  الجواب الصحيح فقط
]]
t14 =[[
م̷ـــِْن هو اول الرسول الى الارض؟
1- ادم
2- نوح
3-ابراهيم 

❆︙ارسل  الجواب الصحيح فقط
]]
t15 =[[
ما هو الشّيء الذي يستطيع المشي بدون أرجل والبكاء بدون أعين؟
1- سحاب
2- بئر
3- نهر

❆︙ارسل  الجواب الصحيح فقط
]]
t16 =[[
ما الشيء الذي نمتلكه , لكنّ غيرنا يستعمله أكثر منّا؟
1- العمر
2- ساعه
3- الاسم

❆︙ارسل  الجواب الصحيح فقط
]]
t17 =[[
اصفر اللون سارق عقول اهل الكون وحارمهم لذيذ النوم
1- نحاس
2- الماس
3- ذهب

❆︙ارسل  الجواب الصحيح فقط
]]
t18 =[[
في الليل ثلاثة لكنه في النهار واحده فما هو
 1- حرف الباء
 2- حرف الام 
3- حرف الراء

❆︙ارسل  الجواب الصحيح فقط
]]
t19 =[[
على قدر اصل العزم تأتي؟
1- العزائم 
2- المكارم
3- المبائب

❆︙ارسل  الجواب الصحيح فقط
]]

t20 =[[
ماهي جمع كلمه انسه ؟
1- سيدات
2- انسات 
3- قوانص

❆︙ارسل  الجواب الصحيح فقط
]]
t21 =[[
اله اتسعلمت قديما في الحروب؟
1- الصاروخ
2- المسدس
3- المنجنيق 

❆︙ارسل  الجواب الصحيح فقط
]]
t22 =[[
تقع لبنان في قاره؟
1- افريقيا 
2- اسيا  
3- امركيا الشماليه

❆︙ارسل  الجواب الصحيح فقط
]]

t23 =[[
1- ماهو الحيوان الذي يلقب بملك الغابه؟
1-الفيل
2- الاسد 
3- النمر

❆︙ارسل  الجواب الصحيح فقط
]]
t24 =[[
كم صفرا للمليون ؟
1- 4 
2- 3
3-6

❆︙ارسل  الجواب الصحيح فقط
]]
t25 =[[
ما اسم صغير الحصان؟
1- مهر  
2- جرو
3- عجل

❆︙ارسل  الجواب الصحيح فقط
]]
t26 =[[
ما الحيوان الذي ينام واحدى عينه مفتوحه؟

1- القرش
2- الدلفين 
3- الثعلب

❆︙ارسل  الجواب الصحيح فقط
]]
t27 =[[
ماهي القاره التي تلقب بالقاره العجوز؟

1- امريكا الشماليه 
2- امريكا الجنوبيه
3- افريقيا 

❆︙ارسل  الجواب الصحيح فقط
]]
t28 =[[
ما اسم المعدن الموجود فيي الحاله السائله 

1- النحاس 
2- الحديد
3- الزئبق 
 
❆︙ارسل  الجواب الصحيح فقط
]]
t29 =[[
ماهي عاصمه انجلترا؟
1- لندن  
2- لفرسول
3- تركيا

❆︙ارسل  الجواب الصحيح فقط
]]
t30 =[[
ماهو الشئ الذي برأسه سبع فتحات

1- الهاتف
2- التلفاز
3- الانسان 

❆︙ارسل  الجواب الصحيح فقط
]]
t31 =[[
ماهي عاصمه اليابان ؟
1- بانكول
2- نيو دلهي
3- طوكيو 

❆︙ارسل  الجواب الصحيح فقط
]]
t32 =[[
من هي زوجه الرسول الاكبر منه سنآ؟

1- حفضه
2- زينب 
3- خديجه 

❆︙ارسل  الجواب الصحيح فقط
]]
TAHA = {t16,t17,t18,t19,t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t30,t31,t32,t1,t2,t3,t4,t5,t6,t7,t8,t9,t11,t12,t13,t14,t15}
local SENDTEXT = TAHA[math.random(#TAHA)]
if SENDTEXT:find('النيل') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'النيل') 
elseif SENDTEXT:find('14') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'14') 
elseif SENDTEXT:find('الفم') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'الفم') 
elseif SENDTEXT:find('11') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'11') 
elseif SENDTEXT:find('30') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'30') 
elseif SENDTEXT:find('بوتين') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'بوتين') 
elseif SENDTEXT:find('ستيف جوبر') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'ستيف جوبر') 
elseif SENDTEXT:find('باريس') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'باريس') 
elseif SENDTEXT:find('10') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'10') 
elseif SENDTEXT:find('النمل') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'النمل') 
elseif SENDTEXT:find('حرف الواو') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'حرف الواو') 
elseif SENDTEXT:find('الشعر') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'الشعر') 
elseif SENDTEXT:find('ابراهيم') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'ابراهيم') 
elseif SENDTEXT:find('سحاب') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'سحاب') 
elseif SENDTEXT:find('الاسم') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'الاسم') 
elseif SENDTEXT:find('ذهب') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'ذهب') 
elseif SENDTEXT:find('حرف الام') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'حرف الام') 
elseif SENDTEXT:find('العزائم') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'العزائم') 
elseif SENDTEXT:find('انسات') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'انسات') 
elseif SENDTEXT:find('المنجنيق') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'المنجنيق') 
elseif SENDTEXT:find('اسيا') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'اسيا') 
elseif SENDTEXT:find('الاسد') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'الاسد') 
elseif SENDTEXT:find('6') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'6') 
elseif SENDTEXT:find('مهر') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'مهر') 
elseif SENDTEXT:find('الدلفين') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'الدلفين') 
elseif SENDTEXT:find('اوروبا') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'اوروبا') 
elseif SENDTEXT:find('الزئبق') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'الزئبق') 
elseif SENDTEXT:find('لندن') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'لندن') 
elseif SENDTEXT:find('الانسان') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'الانسان') 
elseif SENDTEXT:find('طوكيو') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'طوكيو') 
elseif SENDTEXT:find('خديجه') then
Redis:set(LiOn.."GAME:CHER"..msg.chat_id,'خديجه') 
end
luatele.sendText(msg.chat_id,msg.id,SENDTEXT)     
return false  
end
end
if Redis:get(LiOn.."GAME:CHER"..msg.chat_id) and (text == Redis:get(LiOn.."GAME:CHER"..msg.chat_id)) then  
if text then
luatele.sendText(msg.chat_id,msg.id,'*❆︙احسنت اجابتك صحيحه ✓*',"md")     
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(LiOn.."GAME:CHER"..msg.chat_id)
elseif text == 'الفيل' or text == 'الثور' or text == 'الحصان' or text == '7' or text == '9' or text == '8' or text == 'لوين' or text == 'موسكو' or text == 'مانكو' or text == '20' or text == '30' or text == '28' or text == 'ترامب' or text == 'اوباما' or text == 'كيم جونغ' or text == '50' or text == '70' or text == '40' or text == '7' or text == '3' or text == '10' or text == '4' or text == 'الاذن' or text == 'الثلاجه' or text == 'الغرفه' or text == '15' or text == '17' or text == '25' or text == 'الفرات' or text == 'نهر الكونغو' or text == 'المسيبي' or text == 'بيا بايج' or text == 'لاري بيج' or text == 'بيا مارك زوكيربرج' or text == 'الفيل' or text == 'النمر' or text == 'الفهد' or text == 'بانكول' or text == 'نيو دلهي' or text == 'بيكن' or text == 'الهاتف' or text == 'التلفاز' or text == 'المذياع' or text == 'لفرسول' or text == 'تركيا' or text == 'بغداد' or text == 'النحاس' or text == 'الحديد' or text == 'الفضه' or text == 'امريكا الشماليه' or text == 'امريكا الجنوبيه' or text == 'افريقيا' or text == 'القرش' or text == 'الثعلب' or text == 'الكلب' or text == 'للجرو' or text == 'العجل' or text == 'الحمار' or text == '3' or text == '5' or text == '6' or text == 'اوربا' or text == 'افريقيا' or text == 'امريكا الجنوبيه' or text == 'افريقيا' or text == 'امريكا الشماليه' or text == 'اوربا' or text == 'الصاروخ' or text == 'المسدس' or text == 'الطائرات' or text == 'سيدات' or text == 'قوانص' or text == 'عوانس' or text == 'المكارم' or text == 'المبائم' or text == 'المعازم' or text == 'حرف الغاء' or text == 'حرف الواو' or text == 'حرف النون' or text == 'نحاس' or text == 'الماس' or text == 'حديد' or text == 'العمر' or text == 'ساعه' or text == 'الحذاء' or text == 'بئر' or text == 'نهر' or text == 'شلال' or text == 'ادم' or text == 'نوح' or text == 'عيسئ' or text == 'الاضافر' or text == 'الاسنان' or text == 'الدموع' or text == 'الاخلاق' or text == 'الضل' or text == 'حرف النون'  then
local list = {'10' , 'براسي' , 'النمل' , '32' , 'بوتين' , '30' , '11' , 'الفم' , '14' , 'النيل' , 'ستيف جوبر' , 'خديجه' , 'الاسد' , 'طوكيو' , 'الانسان' , 'لندن' , 'الزئبق' , 'اورباالدولفين' , 'المهر' , '4' , 'اسيا' , 'اسيا' , 'المنجنيق' , 'انسات' , 'العزائم' , 'حرف الام' , 'ذهب' , 'الاسم' , 'سحاب' , 'ابراهيم' , 'الشعر' , 'حرف الواو'}
for k, v in pairs(list) do 
if text ~= v then
Redis:del(LiOn.."GAME:CHER"..msg.chat_id)
luatele.sendText(msg.chat_id,msg.id,'❆︙اجابتك خاطئه للاسف ,')     
return false  
end
end
end
end
if text == 'رياضيات' then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
xxx = {'9','46','2','9','5','4','25','10','17','15','39','5','16',};
name = xxx[math.random(#xxx)]
print(name)
Redis:set(LiOn..'bot:bkbk6'..msg.chat_id,name)
name = string.gsub(name,'9','7 + 2 = ?') name = string.gsub(name,'46','41 + 5 = ?')
name = string.gsub(name,'2','5 - 3 = ?') name = string.gsub(name,'9','5 + 2 + 2 = ?')
name = string.gsub(name,'5','8 - 3 = ?') name = string.gsub(name,'4','40 ÷ 10 = ?')
name = string.gsub(name,'25','30 - 5 = ?') name = string.gsub(name,'10','100 ÷ 10 = ?')
name = string.gsub(name,'17','10 + 5 + 2 = ?') name = string.gsub(name,'15','25 - 10 = ?')
name = string.gsub(name,'39','44 - 5 = ?') name = string.gsub(name,'5','12 + 1 - 8 = ?') name = string.gsub(name,'16','16 + 16 - 16 = ?')
luatele.sendText(msg_chat_id,msg_id,'❆︙ اكمل المعادله ،\n - {'..name..'} .')     
end 
end
if text == 'انكليزي' then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
yyy = {'معلومات','قنوات','مجموعات','كتاب','تفاحه','سدني','نقود','اعلم','ذئب','تمساح','ذكي','شاطئ','غبي',};
name = yyy[math.random(#yyy)]
Redis:set(LiOn..'bot:bkbk7'..msg.chat_id,name)
name = string.gsub(name,'ذئب','Wolf') name = string.gsub(name,'معلومات','Information')
name = string.gsub(name,'قنوات','Channels') name = string.gsub(name,'مجموعات','Groups')
name = string.gsub(name,'كتاب','Book') name = string.gsub(name,'تفاحه','Apple')
name = string.gsub(name,'نقود','money') name = string.gsub(name,'اعلم','I know')
name = string.gsub(name,'تمساح','crocodile') name = string.gsub(name,'شاطئ','Beach')
name = string.gsub(name,'غبي','Stupid') name = string.gsub(name,'صداقه','Friendchip')
name = string.gsub(name,'ذكي','Smart') 
luatele.sendText(msg_chat_id,msg_id,' ❆︙ما معنى كلمه {'..name..'} ، ')     
end
end
if text == 'روليت' then
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
Redis:del(LiOn..":Number_Add:"..msg.chat_id..msg.sender_id.user_id) 
Redis:del(LiOn..':List_Rolet:'..msg.chat_id)  
Redis:setex(LiOn..":Start_Rolet:"..msg.chat_id..msg.sender_id.user_id,3600,true)  
return luatele.sendText(msg_chat_id,msg_id, '*❆︙* حسننا لنلعب , ارسل عدد اللاعبين للروليت .',"md")
end
end
if text == 'نعم' and Redis:get(LiOn..":Witting_StartGame:"..msg.chat_id..msg.sender_id.user_id) then
local list = Redis:smembers(LiOn..':List_Rolet:'..msg.chat_id) 
if #list == 1 then 
return luatele.sendText(msg_chat_id,msg_id,"❆︙لم يكتمل العدد الكلي للاعبين .!؟" )
elseif #list == 0 then 
return luatele.sendText(msg_chat_id,msg_id,"❆︙عذرا لم تقوم باضافه اي لاعب .؟!" )
end 
local UserName = list[math.random(#list)]
local data = luatele.searchPublicChat(UserName)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 5)  
Redis:del(LiOn..':List_Rolet:'..msg.chat_id) 
Redis:del(LiOn..":Witting_StartGame:"..msg.chat_id..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,'❆︙تم اختيار الشخص الاتي\n❆︙صاحب الحظ {'..UserName..'}\n❆︙ربحت معنا 5 نقاط' )
end
if text == 'الاعبين' then
local list = Redis:smembers(LiOn..':List_Rolet:'..msg.chat_id) 
local Text = '\n*ـــــــــــــــــــــــــــــــــــــــــــــــــــــــــ*\n' 
if #list == 0 then 
return luatele.sendText(msg_chat_id,msg_id, '*❆︙* لا يوجد لاعبين هنا ' )
end 
for k, v in pairs(list) do 
Text = Text..k.."•  » [" ..v.."] »\n"  
end 
return Text
end
if text and text:match("^(%d+)$") and Redis:get(LiOn..":Start_Rolet:"..msg.chat_id..msg.sender_id.user_id) then  --// استقبال اللعبه الدمبله
if text == "1" then
Text = "*❆︙* لا استطيع بدء اللعبه بلاعب واحد فقط\n"
else
Redis:set(LiOn..":Number_Add:"..msg.chat_id..msg.sender_id.user_id,text)  
Text = '❆︙تم بدء تسجيل اللسته \n❆︙يرجى ارسال المعرفات \n❆︙الفائز يحصل على (5) مجوهره\n❆︙عدد الاعبين المطلوبه { *'..text..'* } لاعب \n 🏹'
end
Redis:del(LiOn..":Start_Rolet:"..msg.chat_id..msg.sender_id.user_id)  
return luatele.sendText(msg_chat_id,msg_id,Text)    
end
if text and text:match('^(@[%a%d_]+)$') and Redis:get(LiOn..":Number_Add:"..msg.chat_id..msg.sender_id.user_id) then    --// استقبال الاسماء
if Redis:sismember(LiOn..':List_Rolet:'..msg.chat_id,text) then
return luatele.sendText(msg_chat_id,msg_id,'*❆︙* المعرف {['..text..']} موجود اساسا' ,"md")
end
Redis:sadd(LiOn..':List_Rolet:'..msg.chat_id,text)
local CountAdd = Redis:get(LiOn..":Number_Add:"..msg.chat_id..msg.sender_id.user_id)
local CountAll = Redis:scard(LiOn..':List_Rolet:'..msg.chat_id)
local CountUser = CountAdd - CountAll
if tonumber(CountAll) == tonumber(CountAdd) then 
Redis:del(LiOn..":Number_Add:"..msg.chat_id..msg.sender_id.user_id) 
Redis:setex(LiOn..":Witting_StartGame:"..msg.chat_id..msg.sender_id.user_id,1400,true)  
return luatele.sendText(msg_chat_id,msg_id,"*❆︙*تم ادخال المعرف { ["..text.."] } \n❆**وتم اكتمال العدد الكلي \n❆︙هل انت مستعد ؟ اجب بـ {* نعم *}","md")
end 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙* تم ادخال المعرف { ["..text.."] } \n❆︙تبقى { *"..CountUser.."* } لاعبين ليكتمل العدد\n❆︙ارسل المعرف التالي ",'md')
end
if text == ''..(Redis:get(LiOn..'bot:bkbk6'..msg.chat_id) or 'لفاتع')..'' then
luatele.sendText(msg_chat_id,msg_id,'❆︙مبروك لقد ربحت ،\nللعب مره اخرى ارسل رياضيات . ',"md")   
Redis:del(LiOn..'bot:bkbk6'..msg.chat_id)  
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
end 
if text == ''..(Redis:get(LiOn..'bot:bkbk7'..msg.chat_id) or 'لفاتع')..'' then
luatele.sendText(msg_chat_id,msg_id,'❆︙مبروك لقد ربحت ،\nللعب مره اخرى ارسل انكليزي . ')     
Redis:del(LiOn..'bot:bkbk7'..msg.chat_id)  
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
end

if text == "المختلف" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
mktlf = {"??","☠","🐼","🐇","🌑","🌚","⭐️","✨","⛈","🌥","⛄️","👨‍🔬","👨‍💻","??‍🔧","??‍♀","??‍♂","🧝‍♂","🙍‍♂","🧖‍♂","👬","🕒","🕤","⌛️","📅",};
name = mktlf[math.random(#mktlf)]
Redis:set(LiOn.."LiOn:Game:Difference"..msg.chat_id,name)
name = string.gsub(name,"😸","😹??????😹😹😹😹😸😹😹😹😹")
name = string.gsub(name,"☠","💀💀💀💀💀💀💀☠??💀💀💀💀")
name = string.gsub(name,"🐼","👻👻👻🐼👻👻??👻👻👻👻")
name = string.gsub(name,"🐇","🕊🕊🕊🕊🕊🐇🕊🕊🕊🕊")
name = string.gsub(name,"🌑","🌚🌚🌚🌚🌚🌑🌚🌚🌚")
name = string.gsub(name,"🌚","🌑🌑🌑🌑🌑??🌑🌑🌑")
name = string.gsub(name,"⭐️","🌟🌟🌟🌟🌟🌟🌟🌟⭐️🌟🌟🌟")
name = string.gsub(name,"✨","💫??💫💫💫✨??💫💫💫")
name = string.gsub(name,"⛈","🌨🌨🌨??🌨⛈??🌨🌨🌨")
name = string.gsub(name,"🌥","⛅️⛅️⛅️⛅️⛅️⛅️🌥⛅️⛅️⛅️⛅️")
name = string.gsub(name,"⛄️","☃☃☃☃☃☃⛄️☃☃☃☃")
name = string.gsub(name,"👨‍🔬","👩‍🔬👩‍🔬👩‍🔬👩‍🔬👩‍🔬👩‍🔬👩‍🔬👩‍🔬👨‍🔬👩‍🔬👩‍🔬👩‍🔬")
name = string.gsub(name,"👨‍💻","👩‍💻👩‍??👩‍‍💻👩‍‍??👩‍‍💻👨‍💻??‍💻👩‍💻👩‍💻")
name = string.gsub(name,"👨‍🔧","??‍🔧👩‍🔧??‍🔧??‍🔧??‍🔧👩‍🔧👨‍🔧👩‍🔧")
name = string.gsub(name,"👩‍??","👨‍🍳👨‍🍳👨‍🍳👨‍🍳👨‍🍳👩‍🍳👨‍🍳👨‍🍳??‍🍳")
name = string.gsub(name,"🧚‍♀","🧚‍♂🧚‍♂🧚‍♂??‍♂🧚‍♀🧚‍♂🧚‍♂")
name = string.gsub(name,"🧜‍♂","🧜‍♀🧜‍♀🧜‍♀🧜‍♀🧜‍♀🧚‍♂🧜‍♀🧜‍♀🧜‍♀")
name = string.gsub(name,"🧝‍♂","🧝‍♀🧝‍♀🧝‍♀🧝‍♀🧝‍♀🧝‍♂??‍♀🧝‍♀??‍♀")
name = string.gsub(name,"🙍‍♂️","🙎‍♂️🙎‍♂️🙎‍♂️🙎‍♂️🙎‍♂️🙍‍♂️🙎‍♂️🙎‍♂️🙎‍♂️")
name = string.gsub(name,"🧖‍♂️","🧖‍♀️🧖‍♀️🧖‍♀️🧖‍♀️🧖‍♀️🧖‍♂️🧖‍♀️🧖‍♀️🧖‍♀️??‍♀️")
name = string.gsub(name,"👬","👭👭👭👭👭👬👭👭👭")
name = string.gsub(name,"👨‍👨‍👧","👨‍👨‍👦👨‍👨‍👦👨‍👨‍👦👨‍👨‍👦👨‍👨‍👧👨‍??‍👦👨‍👨‍??")
name = string.gsub(name,"🕒","🕒🕒🕒🕒🕒🕒🕓🕒🕒🕒")
name = string.gsub(name,"🕤","🕥🕥🕥🕥🕥🕤🕥🕥🕥")
name = string.gsub(name,"⌛️","⏳⏳⏳⏳⏳⏳⌛️⏳⏳")
name = string.gsub(name,"📅","📆📆📆📆📆📆📅????")
return luatele.sendText(msg_chat_id,msg_id,"❆︙اسرع واحد يدز الاختلاف ~ {"..name.."}","md",true)  
end
end
if text == "امثله" then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(LiOn.."LiOn:Status:Games:malk"..msg.chat_id) then
return false 
end
if Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
mthal = {"جوز","ضراطه","الحبل","الحافي","شقره","بيدك","سلايه","النخله","الخيل","حداد","المبلل","يركص","قرد","العنب","العمه","الخبز","بالحصاد","شهر","شكه","يكحله",};
name = mthal[math.random(#mthal)]
Redis:set(LiOn.."LiOn:Game:Example"..msg.chat_id,name)
name = string.gsub(name,"جوز","ينطي____للماعده سنون")
name = string.gsub(name,"ضراطه","الي يسوق المطي يتحمل___")
name = string.gsub(name,"بيدك","اكل___محد يفيدك")
name = string.gsub(name,"الحافي","تجدي من___نعال")
name = string.gsub(name,"شقره","مع الخيل يا___")
name = string.gsub(name,"النخله","الطول طول___والعقل عقل الصخلة")
name = string.gsub(name,"سلايه","بالوجه امراية وبالظهر___")
name = string.gsub(name,"الخيل","من قلة___شدو على الچلاب سروج")
name = string.gsub(name,"حداد","موكل من صخم وجهه كال آني___")
name = string.gsub(name,"المبلل","___ما يخاف من المطر")
name = string.gsub(name,"الحبل","اللي تلدغة الحية يخاف من جرة___")
name = string.gsub(name,"يركص","المايعرف___يكول الكاع عوجه")
name = string.gsub(name,"العنب","المايلوح___يكول حامض")
name = string.gsub(name,"العمه","___إذا حبت الچنة ابليس يدخل الجنة")
name = string.gsub(name,"الخبز","انطي___للخباز حتى لو ياكل نصه")
name = string.gsub(name,"باحصاد","اسمة___ومنجله مكسور")
name = string.gsub(name,"شهر","امشي__ولا تعبر نهر")
name = string.gsub(name,"شكه","يامن تعب يامن__يا من على الحاضر لكة")
name = string.gsub(name,"القرد","__بعين امه غزال")
name = string.gsub(name,"يكحله","اجه___عماها")
return luatele.sendText(msg_chat_id,msg_id,"❆︙اسرع واحد يكمل المثل ~ {"..name.."}","md",true)  
end
end
if text == 'مسح رسائله' and msg.reply_to_message_id ~= 0 then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:del(LiOn..'LiOn:Num:Message:User'..msg_chat_id..':'..Message_Reply.sender_id.user_id) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح رسائله ", "md")
end
if text == 'مسح نقاطه' and msg.reply_to_message_id ~= 0 then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:del(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح نقاطه ", "md")
end
if text == 'مسح سحكاته' and msg.reply_to_message_id ~= 0 then
if not msg.TheBasics then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(4)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:del(LiOn..'LiOn:Num:Message:Edit'..msg.chat_id..Message_Reply.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح سحكاته ", "md")
end

if text and text:match("^بيع نقاطي (%d+)$") then
local NumGame = text:match("^بيع نقاطي (%d+)$") 
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if tonumber(NumGame) == tonumber(0) then
return luatele.sendText(msg_chat_id,msg_id,"\n*❆︙لا استطيع البيع اقل من 1 *","md",true)  
end
local NumberGame = Redis:get(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id)
if tonumber(NumberGame) == tonumber(0) then
return luatele.sendText(msg_chat_id,msg_id,"❆︙ليس لديك جواهر من الالعاب \n❆︙اذا كنت تريد ربح النقاط \n❆︙ارسل الالعاب وابدأ اللعب ! ","md",true)  
end
if tonumber(NumGame) > tonumber(NumberGame) then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙ليس لديك جواهر بهذا العدد \n❆︙لزيادة نقاطك في اللعبه \n❆︙ارسل الالعاب وابدأ اللعب !","md",true)   
end
local NumberGet = (NumGame * 50)
Redis:decrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id,NumGame)  
Redis:incrby(LiOn.."LiOn:Num:Message:User"..msg.chat_id..":"..msg.sender_id.user_id,NumberGet)  
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم خصم *~ { "..NumGame.." }* من نقاطك \n❆︙وتم اضافة* ~ { "..NumberGet.." } رساله الى رسائلك *","md",true)  
end 
if text and text:match("^اضف نقاط (%d+)$") and msg.reply_to_message_id ~= 0 and Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..Message_Reply.sender_id.user_id, text:match("^اضف نقاط (%d+)$"))  
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم اضافه له { "..text:match("^اضف نقاط (%d+)$").." } من النقاط").Reply,"md",true)  
end
if text and text:match("^اضف سحكات (%d+)$") and msg.reply_to_message_id ~= 0 and Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:incrby(LiOn..'LiOn:Num:Message:Edit'..msg.chat_id..Message_Reply.sender_id.user_id, text:match("^اضف سحكات (%d+)$"))  
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم اضافه له { "..text:match("^اضف سحكات (%d+)$").." } من السحكات").Reply,"md",true)  
end
if text and text:match("^اضف رسائل (%d+)$") and msg.reply_to_message_id ~= 0 and Redis:get(LiOn.."LiOn:Status:Games"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local Message_Reply = luatele.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = luatele.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.Merotele == "userTypeBot" then
return luatele.sendText(msg_chat_id,msg_id,"\n❆︙عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:incrby(LiOn.."LiOn:Num:Message:User"..msg.chat_id..":"..Message_Reply.sender_id.user_id, text:match("^اضف رسائل (%d+)$"))  
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"❆︙تم اضافه له { "..text:match("^اضف رسائل (%d+)$").." } من الرسائل").Reply,"md",true)  
end
if text == "نقاطي" then 
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Num = Redis:get(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id) or 0
if Num == 0 then 
return luatele.sendText(msg_chat_id,msg_id, "❆︙ليس لديك نقاط ارسل الالعاب وابدأ اللعب ","md",true)  
else
return luatele.sendText(msg_chat_id,msg_id, "❆︙عدد النقاط التي ربحتها *← "..Num.." *","md",true)  
end
end
if text == "مسح القوائم" then
if not msg.Addictive then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(7)..' }* ',"md",true)  
end
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="المطورين الاساسيين",data=msg.sender_id.user_id..'/redis:Devall'},
},
{
{text="المكتومين عام",data=msg.sender_id.user_id..'/KtmAll'},{text="المحظورين عام",data=msg.sender_id.user_id..'/BanAll'},
},
{
{text="المطورين الثانويين",data=msg.sender_id.user_id..'/DevelopersQ'},{text="المطورين",data=msg.sender_id.user_id..'/Developers'},
},
{
{text="المالكين",data=msg.sender_id.user_id..'/TheBasicsQ'},{text="المنشئين الاساسيين",data=msg.sender_id.user_id..'/TheBasics'},
},
{
{text="المنشئين",data=msg.sender_id.user_id..'/Originators'},{text="المدراء",data=msg.sender_id.user_id..'/Managers'},
},
{
{text="الادمنيه",data=msg.sender_id.user_id..'/Addictive'},{text="المميزين",data=msg.sender_id.user_id..'/DelDistinguished'},
},
{
{text="المكتومين",data=msg.sender_id.user_id..'/SilentGroupGroup'},{text="المحظورين",data=msg.sender_id.user_id..'/BanGroup'},
},
{
{text = "- اخفاء الامر ", data =msg.sender_id.user_id.."/delAmr"}
},
}
}
return luatele.sendText(msg_chat_id,msg_id,"*⌯︙اختر احدى القوائم لمسحها*", "md", false, false, false, false, reply_markup)
end 
if text == "مسح نقاطي" then 
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Num:Add:Games"..msg.chat_id..msg.sender_id.user_id)
return luatele.sendText(msg_chat_id,msg_id, "❆︙تم مسح نقاطك","md",true)  
end

if text == 'ترتيب الاوامر' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تعط','تعطيل الايدي بالصوره')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تفع','تفعيل الايدي بالصوره')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ا','ايدي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'م','رفع مميز')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'اد', 'رفع ادمن')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'مد','رفع مدير')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'من', 'رفع منشئ')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'اس', 'رفع منشئ اساسي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'مط','رفع مطور')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تن','تنزيل الكل')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ر','الرابط')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'رر','الردود')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'،،','مسح المكتومين')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'رد','اضف رد')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'غ','غنيلي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'رس','رسائلي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ثانوي','رفع مطور ثانوي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'مس','مسح سحكاتي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ن','نقاطي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'س','اسالني')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ل','لغز')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'مع','معاني')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ح','حزوره')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'رف','رفع القيود')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'الغ','الغاء حظر')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ث','تثبيت')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ك','كشف')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تت','تاك')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تك','تاك للكل')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تغ','تغيير الايدي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تنز','تنزيل جميع الرتب')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'قق','قفل الاشعارات')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'فف','فتح الاشعارات')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'مر','مسح رد')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'امر','اضف امر')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ش','شعر')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'غغ','اغنيه')
return luatele.sendText(msg_chat_id,msg_id,[[*
❆︙تم ترتيب الاوامر بالشكل التالي ~
❆︙ايدي - ا .
❆︙رفع مميز - م .
❆︙رفع ادمن - اد .
❆︙رفع مدير - مد . 
❆︙رفع منشئ - من . 
❆︙رفع منشئ الاساسي - اس  .
❆︙رفع مطور - مط .
❆︙رفع مطور ثانوي - ثانوي .
❆︙تنزيل الكل بالرد - تن .
❆︙تعطيل الايدي بالصوره - تعط .
❆︙تفعيل الايدي بالصوره - تفع .
❆︙تغيير الايدي- تغ .
❆︙تنزيل جميع الرتب - تنز .
❆︙قفل الاشعارات - قق .
❆︙فتح الاشعارات - فف .
❆︙الرابط - ر .
❆︙الردود - رر .
❆︙تثبيت - ث .
❆︙كشف - ك .
❆︙تاك - تت .
❆︙تاك للكل - تك .
❆︙رفع القيود - رف .
❆︙الغاء حظر - الغ .
❆︙مسح المكتومين - ،، .
❆︙اضف رد - رد .
❆︙مسح رد - مر .
❆︙اضف امر - امر .
❆︙مسح سحكاتي - مس .
❆︙مسح رسائلي - رس .
❆︙غنيلي - غ .
❆︙اغنيه - غغ .
❆︙شعر - ش .
❆︙نقاطي - ن .
❆︙اسالني - س .
❆︙لغز - ل .
❆︙معاني - مع .
❆︙حزوره - ح .

*]],"md")
end
if text == 'استعاده الاوامر' then
if not msg.Managers then
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تعط','تعطيل الايدي بالصوره')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تفع','تفعيل الايدي بالصوره')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ا','ايدي')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'م','رفع مميز')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'اد', 'رفع ادمن')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'مد','رفع مدير')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'من', 'رفع منشئ')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'اس', 'رفع منشئ اساسي')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'مط','رفع مطور')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تن','تنزيل الكل')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ر','الرابط')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'رر','الردود')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'،،','مسح المكتومين')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'رد','اضف رد')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'مس','مسح سحكاتي')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'غ','غنيلي')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'رس','رسائلي')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ثانوي','رفع مطور ثانوي')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ن','نقاطي')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'س','اسالني')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ل','لغز')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'مع','مغاني')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ح','حزوره')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'رف','رفع القيود')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'الغ','الغاء حظر')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ث','تثبيت')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ك','كشف')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تت','تاك')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تك','تاك للكل')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تغ','تغيير الايدي')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'تنزل','تنزيل جميع الرتب')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'قق','قفل الاشعارات')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'فف','فتح الاشعارات')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'مر','مسح رد')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'امر','اضف امر')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'ش','شعر')
Redis:del(LiOn.."LiOn:Get:Reides:Commands:Group"..msg_chat_id..":"..'غغ','اغنيه')
return luatele.sendText(msg_chat_id,msg_id,[[*
❆︙تم استعاده الاوامر
*]],"md")
end

end -- GroupBot
if chat_type(msg.chat_id) == "UserBot" then 
if text == 'تحديث الملفات ❆' or text == 'تحديث' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
print('Chat Id : '..msg_chat_id)
print('User Id : '..msg_user_send_id)
luatele.sendText(msg_chat_id,msg_id, "❆︙ تم تحديث الملفات ♻","md",true)
dofile('LiOn.lua')  
end
if text == '/start' then
Redis:sadd(LiOn..'LiOn:Num:User:Pv',msg.sender_id.user_id)  
if not msg.ControllerBot then
if not Redis:get(LiOn.."LiOn:Start:Bot") then
local CmdStart = '*\n❆︙أهلآ بك في بوت '..(Redis:get(LiOn.."LiOn:Name:Bot") or "اسد")..
'\n❆︙اختصاص البوت حماية المجموعات'..
'\n❆︙لتفعيل البوت عليك اتباع مايلي ...'..
'\n❆︙اضف البوت الى مجموعتك'..
'\n❆︙ارفعه ادمن {مشرف}'..
'\n❆︙ارسل كلمة { تفعيل } ليتم تفعيل المجموعه'..
'\n❆︙مطور البوت ← {@'..UserSudo..'}*'
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '➕ اضفني لمجموعتك', url = 't.me/'..UserBot..'?startgroup=new'}, 
},
{
{text = 'لتنصيب بوت', url = 't.me/u24uu'}, 
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local idephoto = Redis:get(LiOn..':WELCOME_BOT')
if idephoto then
local Bot_Name = (Redis:get(LiOn.."LiOn:Name:Bot") or "اسد")
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '➕ اضفني لمجموعتك', url = 't.me/'..UserBot..'?startgroup=new'}, 
},
{
{text = 'لتنصيب بوت', url = 't.me/u24uu'}, 
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
local msg_id = msg.id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id=' .. msg.chat_id .. '&photo='..idephoto..'&caption=' .. URL.escape(CmdStart).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
else
return luatele.sendText(msg_chat_id,msg_id,CmdStart,"md",false, false, false, false, reply_markup)
end
else
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '➕ اضفني لمجموعتك', url = 't.me/'..UserBot..'?startgroup=new'}, 
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
return luatele.sendText(msg_chat_id,msg_id,Redis:get(LiOn.."LiOn:Start:Bot"),"md",false, false, false, false, reply_markup)
end
else
local reply_markup = luatele.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'تفعيل التواصل ❆',type = 'text'},{text = 'تعطيل التواصل ❆', type = 'text'},
},
{
{text = 'تفعيل البوت الخدمي ❆',type = 'text'},{text = 'تعطيل البوت الخدمي ❆', type = 'text'},
},
{
{text = 'اذاعه للمجموعات ❆',type = 'text'},{text = 'اذاعه خاص ❆', type = 'text'},
},
{
{text = 'اذاعه بالتوجيه ❆',type = 'text'},{text = 'اذاعه بالتوجيه خاص ❆', type = 'text'},
},
{
{text = 'اذاعه بالتثبيت ❆',type = 'text'},
},
{
{text = "مسح تخزين البوت ❆",type = 'text'},
},
{
{text = 'المطورين الثانويين ❆',type = 'text'},{text = 'المطورين ❆',type = 'text'},{text = 'قائمه العام ❆', type = 'text'},
},
{
{text = 'مسح المطورين الثانويين ❆',type = 'text'},{text = 'مسح المطورين ❆',type = 'text'},{text = 'مسح قائمه العام ❆', type = 'text'},
},
{
{text = '❆ تغيير المطور الاساسي',type = 'text'},
},
{
{text = 'تغيير اسم البوت ❆',type = 'text'},{text = 'مسح اسم البوت ❆', type = 'text'},
},
{
{text = "ضع تاريخ الاشتراك ❆",type = 'text'},{text = "اشتراك البوت ❆", type = 'text'},
},
{
{text = 'الاشتراك الاجباري ❆',type = 'text'},{text = 'تغيير الاشتراك الاجباري ❆',type = 'text'},
},
{
{text = 'تفعيل الاشتراك الاجباري ❆',type = 'text'},{text = 'تعطيل الاشتراك الاجباري ❆',type = 'text'},
},
{
{text = 'الاحصائيات ❆',type = 'text'},
},
{
{text = "ضع صوره للترحيب ❆",type = 'text'},{text = 'معلومات التنصيب ❆',type = 'text'},
},
{
{text = 'تغيير كليشه المطور ❆',type = 'text'},{text = 'مسح كليشه المطور ❆', type = 'text'},
},
{
{text = 'تغيير كليشه ستارت ❆',type = 'text'},{text = 'مسح كليشه ستارت ❆', type = 'text'},
},
{
{text = 'تنظيف المجموعات ❆',type = 'text'},{text = 'تنظيف المشتركين ❆', type = 'text'},
},
{
{text = 'جلب النسخه الاحتياطيه ❆',type = 'text'},
},
{
{text = 'اضف رد عام ❆',type = 'text'},{text = 'مسح رد عام ❆', type = 'text'},
},
{
{text = 'الردود العامه ❆',type = 'text'},{text = 'مسح الردود العامه ❆', type = 'text'},
},
{
{text = 'تحديث الملفات ❆',type = 'text'},{text = 'تحديث السورس ❆', type = 'text'},
},
{
{text = 'الغاء الامر ❆',type = 'text'},
},
}
}
return luatele.sendText(msg_chat_id,msg_id,'❆︙ اهلا بك عزيزي المطور ', 'md', false, false, false, false, reply_markup)
end
end

if text == 'تنظيف المشتركين ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:Num:User:Pv")   
local x = 0
for k,v in pairs(list) do  
local Get_Chat = luatele.getChat(v)
local ChatAction = luatele.sendChatAction(v,'Typing')
if ChatAction.Merotele ~= "ok" then
x = x + 1
Redis:srem(LiOn..'LiOn:Num:User:Pv',v)
end
end
if x ~= 0 then
return luatele.sendText(msg_chat_id,msg_id,'*❆︙العدد الكلي { '..#list..' }\n❆︙تم العثور على { '..x..' } من المشتركين حاظرين البوت*',"md")
else
return luatele.sendText(msg_chat_id,msg_id,'*❆︙العدد الكلي { '..#list..' }\n❆︙لم يتم العثور على وهميين*',"md")
end
end
if text == 'تنظيف المجموعات ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:ChekBotAdd")   
local x = 0
for k,v in pairs(list) do  
local Get_Chat = luatele.getChat(v)
if Get_Chat.id then
local statusMem = luatele.getChatMember(Get_Chat.id,LiOn)
if statusMem.status.Merotele == "chatMemberStatusMember" then
x = x + 1
luatele.sendText(Get_Chat.id,0,'*❆︙البوت عضو في المجموعه سوف اغادر ويمكنك تفعيلي مره اخره *',"md")
Redis:srem(LiOn..'LiOn:ChekBotAdd',Get_Chat.id)
local keys = Redis:keys(LiOn..'*'..Get_Chat.id)
for i = 1, #keys do
Redis:del(keys[i])
end
luatele.leaveChat(Get_Chat.id)
end
else
x = x + 1
local keys = Redis:keys(LiOn..'*'..v)
for i = 1, #keys do
Redis:del(keys[i])
end
Redis:srem(LiOn..'LiOn:ChekBotAdd',v)
luatele.leaveChat(v)
end
end
if x ~= 0 then
return luatele.sendText(msg_chat_id,msg_id,'*❆︙العدد الكلي { '..#list..' } للمجموعات \n❆︙تم العثور على { '..x..' } مجموعات البوت ليس ادمن \n❆︙تم تعطيل المجموعه ومغادره البوت من الوهمي *',"md")
else
return luatele.sendText(msg_chat_id,msg_id,'*❆︙العدد الكلي { '..#list..' } للمجموعات \n❆︙لا توجد مجموعات وهميه*',"md")
end
end
if text == 'تغيير كليشه ستارت ❆' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Change:Start:Bot"..msg.sender_id.user_id,300,true) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙ ارسل لي كليشه Start الان ","md",true)  
end
if text == 'مسح كليشه ستارت ❆' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Start:Bot") 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح كليشه Start ","md",true)   
end
if text == 'تغيير اسم البوت ❆' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Change:Name:Bot"..msg.sender_id.user_id,300,true) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙ ارسل لي الاسم الان ","md",true)  
end
if text == 'مسح اسم البوت ❆' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:Name:Bot") 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح اسم البوت ","md",true)   
end
if text and text:match("^تعيين عدد الاعضاء (%d+)$") then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn..'LiOn:Num:Add:Bot',text:match("تعيين عدد الاعضاء (%d+)$") ) 
luatele.sendText(msg_chat_id,msg_id,'*❆︙ تم تعيين عدد اعضاء تفعيل البوت اكثر من : '..text:match("تعيين عدد الاعضاء (%d+)$")..' عضو *',"md",true)  
elseif text =='الاحصائيات ❆' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
luatele.sendText(msg_chat_id,msg_id,'*❆︙عدد احصائيات البوت الكامله \n— — — — — — — — —\n❆︙عدد المجموعات : '..(Redis:scard(LiOn..'LiOn:ChekBotAdd') or 0)..'\n❆︙عدد المشتركين : '..(Redis:scard(LiOn..'LiOn:Num:User:Pv') or 0)..'*',"md",true)  
end
if text == 'تغيير كليشه المطور ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn..'LiOn:GetTexting:DevLiOn'..msg_chat_id..':'..msg.sender_id.user_id,true)
return luatele.sendText(msg_chat_id,msg_id,'❆︙ ارسل لي الكليشه الان')
end
if text == 'مسح كليشه المطور ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn..'LiOn:Texting:DevLiOn')
return luatele.sendText(msg_chat_id,msg_id,'❆︙ تم مسح كليشه المطور')
end
if text == 'اضف رد عام ❆' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id,true)
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل الان الكلمه لاضافتها في الردود العامه ","md",true)  
end
if text == 'مسح رد عام ❆' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:Set:On"..msg.sender_id.user_id..":"..msg_chat_id,true)
return luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل الان الكلمه لمسحها من الردود العامه","md",true)  
end
if text=='اذاعه خاص ❆' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Broadcasting:Users" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
luatele.sendText(msg_chat_id,msg_id,[[
↯︙ارسل لي سواء كان 
❨ ملف • ملصق • متحركه • صوره
 • فيديو • بصمه الفيديو • بصمه • صوت • رساله ❩
— — — — — — — — —
↯︙للخروج ارسل ( الغاء )
 ✓
]],"md",true)  
return false
end

if text=='اذاعه للمجموعات ❆' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Broadcasting:Groups" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
luatele.sendText(msg_chat_id,msg_id,[[
↯︙ارسل لي سواء كان 
❨ ملف • ملصق • متحركه • صوره
 • فيديو • بصمه الفيديو • بصمه • صوت • رساله ❩
— — — — — — — — —
↯︙للخروج ارسل ( الغاء )
 ✓
]],"md",true)  
return false
end

if text=="اذاعه بالتثبيت ❆" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Broadcasting:Groups:Pin" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
luatele.sendText(msg_chat_id,msg_id,[[
↯︙ارسل لي سواء كان 
❨ ملف • ملصق • متحركه • صوره
 • فيديو • بصمه الفيديو • بصمه • صوت • رساله ❩
— — — — — — — — —
↯︙للخروج ارسل ( الغاء )
 ✓
]],"md",true)  
return false
end

if text=="اذاعه بالتوجيه ❆" then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Broadcasting:Groups:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل لي التوجيه الان\n❆︙ليتم نشره في المجموعات","md",true)  
return false
end

if text=='اذاعه بالتوجيه خاص ❆' then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(LiOn.."LiOn:Broadcasting:Users:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
luatele.sendText(msg_chat_id,msg_id,"❆︙ارسل لي التوجيه الان\n❆︙ليتم نشره الى المشتركين","md",true)  
return false
end

if text == ("الردود العامه ❆") then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:List:Rd:Sudo")
text = "\n📝︙قائمة الردود العامه \n— — — — — — — — —\n"
for k,v in pairs(list) do
if Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Gif"..v) then
db = "متحركه 🎭"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:vico"..v) then
db = "بصمه 📢"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:stekr"..v) then
db = "ملصق 🃏"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Text"..v) then
db = "رساله ✉"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Photo"..v) then
db = "صوره 🎇"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Video"..v) then
db = "فيديو 📹"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:File"..v) then
db = "ملف ❆"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:Audio"..v) then
db = "اغنيه 🎵"
elseif Redis:get(LiOn.."LiOn:Add:Rd:Sudo:video_note"..v) then
db = "بصمه فيديو 🎥"
end
text = text..""..k.." » {"..v.."} » {"..db.."}\n"
end
if #list == 0 then
text = "❆︙لا توجد ردود للمطور"
end
return luatele.sendText(msg_chat_id,msg_id,"["..text.."]","md",true)  
end
if text == ("مسح الردود العامه ❆") then 
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(LiOn.."LiOn:List:Rd:Sudo")
for k,v in pairs(list) do
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:Gif"..v)   
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:vico"..v)   
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:stekr"..v)     
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:Text"..v)   
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:Photo"..v)
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:Video"..v)
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:File"..v)
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:Audio"..v)
Redis:del(LiOn.."LiOn:Add:Rd:Sudo:video_note"..v)
Redis:del(LiOn.."LiOn:List:Rd:Sudo")
end
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم مسح الردود العامه","md",true)  
end
if text == 'مسح المطورين ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Developers:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مطورين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:Developers:Groups") 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المطورين *","md",true)
end
if text == 'مسح المطورين الثانويين ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:DevelopersQ:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مطورين حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:DevelopersQ:Groups") 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المطورين *","md",true)
end
if text == 'مسح قائمه العام ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:BanAll:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد محظورين عام حاليا , ","md",true)  
end
Redis:del(LiOn.."LiOn:BanAll:Groups") 
return luatele.sendText(msg_chat_id,msg_id,"*❆︙تم مسح {"..#Info_Members.."} من المحظورين عام *","md",true)
end
if text == 'تعطيل البوت الخدمي ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:BotFree") 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل البوت الخدمي ","md",true)
end
if text == 'تعطيل التواصل ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(LiOn.."LiOn:TwaslBot") 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تعطيل التواصل داخل البوت ","md",true)
end
if text == 'تفعيل البوت الخدمي ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:BotFree",true) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تفعيل البوت الخدمي ","md",true)
end
if text == 'تفعيل التواصل ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(LiOn.."LiOn:TwaslBot",true) 
return luatele.sendText(msg_chat_id,msg_id,"❆︙تم تفعيل التواصل داخل البوت ","md",true)
end
if text == 'قائمه العام ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end 
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:BanAll:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد محظورين عام حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه المحظورين عام  \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
var(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المحظورين عام', data = msg.sender_id.user_id..'/BanAll'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المطورين ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:Developers:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مطورين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه مطورين البوت \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المطورين', data = msg.sender_id.user_id..'/Developers'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المطورين الثانويين ❆' then
if not msg.ControllerBot then 
return luatele.sendText(msg_chat_id,msg_id,'\n*❆︙هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(LiOn..'LiOn:Chat:Channel:Join'..msg.chat_id)}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = Redis:get(LiOn..'LiOn:Channel:Join:Name'), url = 't.me/'..Redis:get(LiOn..'LiOn:Channel:Join')}, },}}
return luatele.sendText(msg.chat_id,msg.id,'*\n❆︙عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(LiOn.."LiOn:DevelopersQ:Groups") 
if #Info_Members == 0 then
return luatele.sendText(msg_chat_id,msg_id,"❆︙لا يوجد مطورين حاليا , ","md",true)  
end
ListMembers = '\n*❆︙قائمه مطورين البوت \n — — — — — — — — —*\n'
for k, v in pairs(Info_Members) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المطورين', data = msg.sender_id.user_id..'/Developers'},},}}
return luatele.sendText(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if not msg.ControllerBot then
if Redis:get(LiOn.."LiOn:TwaslBot") and not Redis:sismember(LiOn.."LiOn:BaN:In:Tuasl",msg.sender_id.user_id) then
local ListGet = {Sudo_Id,msg.sender_id.user_id}
local IdSudo = luatele.getChat(ListGet[1]).id
local IdUser = luatele.getChat(ListGet[2]).id
local FedMsg = luatele.sendForwarded(IdSudo, 0, IdUser, msg_id)
Redis:setex(LiOn.."LiOn:Twasl:UserId"..msg.date,172800,IdUser)
if FedMsg.content.Merotele == "messageSticker" then
luatele.sendText(IdSudo,0,Reply_Status(IdUser,'❆︙قام بارسال الملصق').Reply,"md",true)  
end
return luatele.sendText(IdUser,msg_id,Reply_Status(IdUser,'❆︙تم ارسال رسالتك الى المطور').Reply,"md",true)  
end
else 
if msg.reply_to_message_id ~= 0 then
local Message_Get = luatele.getMessage(msg_chat_id, msg.reply_to_message_id)
if Message_Get.forward_info then
local Info_User = Redis:get(LiOn.."LiOn:Twasl:UserId"..Message_Get.forward_info.date) or 46899864
if text == 'حظر' then
Redis:sadd(LiOn..'LiOn:BaN:In:Tuasl',Info_User)  
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Info_User,'❆︙تم حظره من تواصل البوت ').Reply,"md",true)  
end 
if text =='الغاء الحظر' or text =='الغاء حظر' then
Redis:srem(LiOn..'LiOn:BaN:In:Tuasl',Info_User)  
return luatele.sendText(msg_chat_id,msg_id,Reply_Status(Info_User,'❆︙تم الغاء حظره من تواصل البوت ').Reply,"md",true)  
end 
local ChatAction = luatele.sendChatAction(Info_User,'Typing')
if not Info_User or ChatAction.message == "USER_IS_BLOCKED" then
luatele.sendText(msg_chat_id,msg_id,Reply_Status(Info_User,'❆︙قام بحظر البوت لا استطيع ارسال رسالتك ').Reply,"md",true)  
end
if msg.content.video_note then
luatele.sendVideoNote(Info_User, 0, msg.content.video_note.video.remote.id)
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
luatele.sendPhoto(Info_User, 0, idPhoto,'')
elseif msg.content.sticker then 
luatele.sendSticker(Info_User, 0, msg.content.sticker.sticker.remote.id)
elseif msg.content.voice_note then 
luatele.sendVoiceNote(Info_User, 0, msg.content.voice_note.voice.remote.id, '', 'md')
elseif msg.content.video then 
luatele.sendVideo(Info_User, 0, msg.content.video.video.remote.id, '', "md")
elseif msg.content.animation then 
luatele.sendAnimation(Info_User,0, msg.content.animation.animation.remote.id, '', 'md')
elseif msg.content.document then
luatele.sendDocument(Info_User, 0, msg.content.document.document.remote.id, '', 'md')
elseif msg.content.audio then
luatele.sendAudio(Info_User, 0, msg.content.audio.audio.remote.id, '', "md") 
elseif text then
luatele.sendText(Info_User,0,text,"md",true)
end 
luatele.sendText(msg_chat_id,msg_id,Reply_Status(Info_User,'❆︙تم ارسال رسالتك اليه ').Reply,"md",true)  
end
end
end 
end --UserBot
end -- File_Bot_Run


function CallBackLua(data) --- هذا الكالباك بي الابديت 
--var(data) 
if data and data.Merotele and data.Merotele == "updateNewInlineCallbackQuery" then
local Text = luatele.base64_decode(data.payload.data)
if Text and Text:match('/Hmsa1@(%d+)@(%d+)/(%d+)') then
local ramsesadd = {string.match(Text,"^/Hmsa1@(%d+)@(%d+)/(%d+)$")}
if tonumber(data.sender_user_id) == tonumber(ramsesadd[1]) or tonumber(ramsesadd[2]) == tonumber(data.sender_user_id) then
local inget = Redis:get(LiOn..'hmsabots'..ramsesadd[3]..data.sender_user_id)
https.request("https://api.telegram.org/bot"..Token..'/answerCallbackQuery?callback_query_id='..data.id..'&text='..URL.escape(inget)..'&show_alert=true')
else
https.request("https://api.telegram.org/bot"..Token..'/answerCallbackQuery?callback_query_id='..data.id..'&text='..URL.escape('هذه الهمسه ليست لك')..'&show_alert=true')
end
end
end
if data and data.Merotele and data.Merotele == "updateNewInlineQuery" then
local Text = data.query
if Text and Text:match("^(.*) @(.*)$")  then
local username = {string.match(Text,"^(.*) @(.*)$")}
local UserId_Info = luatele.searchPublicChat(username[2])
if UserId_Info.id then
local idnum = math.random(1,64)
local input_message_content = {message_text = 'هذي الهمسة للحلو ( [@'..username[2]..'] ) هو اللي يقدر يشوفها 💖🔐', parse_mode = 'Markdown'}	
local reply_markup = {inline_keyboard={{{text = 'عرض الهمسه ♡ ', callback_data = '/Hmsa1@'..data.sender_user_id..'@'..UserId_Info.id..'/'..idnum}}}}	
local resuult = {{type = 'article', id = idnum, title = 'هذه همسه سريه الى [@'..username[2]..']', input_message_content = input_message_content, reply_markup = reply_markup}}	
https.request("https://api.telegram.org/bot"..Token..'/answerInlineQuery?inline_query_id='..data.id..'&results='..JSON.encode(resuult))
Redis:set(LiOn..'hmsabots'..idnum..UserId_Info.id,username[1])
Redis:set(LiOn..'hmsabots'..idnum..data.sender_user_id,username[1])
end
end
end

if data and data.Merotele and data.Merotele == "updateSupergroup" then
local Get_Chat = luatele.getChat('-100'..data.supergroup.id)
if data.supergroup.status.Merotele == "chatMemberStatusBanned" then
Redis:srem(LiOn.."LiOn:ChekBotAdd",'-100'..data.supergroup.id)

return luatele.sendText(Sudo_Id,0,'*\n❆︙تم طرد البوت من مجموعه جديده \n❆︙اسم المجموعه : '..Get_Chat.title..'\n❆︙ايدي المجموعه :*`-100'..data.supergroup.id..'`\n❆︙تم مسح جميع البيانات المتعلقه بالمجموعه',"md")
end

elseif data and data.Merotele and data.Merotele == "updateMessageSendSucceeded" then
local msg = data.message
local Chat = msg.chat_id
if msg.content.text then
text = msg.content.text.text
end
if msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo then
Redis:sadd(LiOn.."LiOn:allM"..msg.chat_id, msg.id)
if Redis:get(LiOn.."LiOn:Status:Del:Media"..msg.chat_id) then    
local Numbardel = Redis:get(LiOn.."LiOn:allM:numdel"..msg.chat_id) or 200
local gmedia = Redis:scard(LiOn.."LiOn:allM"..msg.chat_id)  
if tonumber(gmedia) >= tonumber(Numbardel) then
local liste = Redis:smembers(LiOn.."LiOn:allM"..msg.chat_id)
for k,v in pairs(liste) do
local Mesge = v
if Mesge then
t = "❆︙تم مسح "..k.." من الوسائط تلقائيا\n❆︙يمكنك تعطيل الميزه باستخدام الامر ( `تعطيل المسح التلقائي` )"
luatele.deleteMessages(msg.chat_id,{[1]= Mesge})
end
end
local UserInfo = luatele.getUser(msg.sender_id.user_id)
local Teext = '❆︙بواسطه : ['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')\n'
luatele.sendText(msg.chat_id,msg.id, Teext..t,"md",true)
Redis:del(LiOn.."LiOn:allM"..msg.chat_id)
end
end
end
if msg.content.video_note then
if msg.content.video_note.video.remote.id == Redis:get(LiOn.."LiOn:PinMsegees:"..msg.chat_id) then
luatele.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(LiOn.."LiOn:PinMsegees:"..msg.chat_id)
end
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
if idPhoto == Redis:get(LiOn.."LiOn:PinMsegees:"..msg.chat_id) then
luatele.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(LiOn.."LiOn:PinMsegees:"..msg.chat_id)
end
elseif msg.content.sticker then 
if msg.content.sticker.sticker.remote.id == Redis:get(LiOn.."LiOn:PinMsegees:"..msg.chat_id) then
luatele.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(LiOn.."LiOn:PinMsegees:"..msg.chat_id)
end
elseif msg.content.voice_note then 
if msg.content.voice_note.voice.remote.id == Redis:get(LiOn.."LiOn:PinMsegees:"..msg.chat_id) then
luatele.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(LiOn.."LiOn:PinMsegees:"..msg.chat_id)
end
elseif msg.content.video then 
if msg.content.video.video.remote.id == Redis:get(LiOn.."LiOn:PinMsegees:"..msg.chat_id) then
luatele.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(LiOn.."LiOn:PinMsegees:"..msg.chat_id)
end
elseif msg.content.animation then 
if msg.content.animation.animation.remote.id ==  Redis:get(LiOn.."LiOn:PinMsegees:"..msg.chat_id) then
luatele.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(LiOn.."LiOn:PinMsegees:"..msg.chat_id)
end
elseif msg.content.document then
if msg.content.document.document.remote.id == Redis:get(LiOn.."LiOn:PinMsegees:"..msg.chat_id) then
luatele.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(LiOn.."LiOn:PinMsegees:"..msg.chat_id)
end
elseif msg.content.audio then
if msg.content.audio.audio.remote.id == Redis:get(LiOn.."LiOn:PinMsegees:"..msg.chat_id) then
luatele.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(LiOn.."LiOn:PinMsegees:"..msg.chat_id)
end
elseif text then
if text == Redis:get(LiOn.."LiOn:PinMsegees:"..msg.chat_id) then
luatele.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(LiOn.."LiOn:PinMsegees:"..msg.chat_id)
end
end

elseif data and data.Merotele and data.Merotele == "updateNewMessage" then
if data.message.content.Merotele == "messageChatDeleteMember" or data.message.content.Merotele == "messageChatAddMembers" or data.message.content.Merotele == "messagePinMessage" or data.message.content.Merotele == "messageChatChangeTitle" or data.message.content.Merotele == "messageChatJoinByLink" then
if Redis:get(LiOn.."LiOn:Lock:tagservr"..data.message.chat_id) then
luatele.deleteMessages(data.message.chat_id,{[1]= data.message.id})
end
end 
if tonumber(data.message.sender_user_id) == tonumber(LiOn) then
return false
end
File_Bot_Run(data.message,data.message)

elseif data and data.Merotele and data.Merotele == "updateMessageEdited" then
-- data.chat_id -- data.message_id
local Message_Edit = luatele.getMessage(data.chat_id, data.message_id)
if Message_Edit.sender_id.user_id == LiOn then
print('This is Edit for Bot')
return false
end
File_Bot_Run(Message_Edit,Message_Edit)
if tonumber(Message_Edit.sender_id.user_id) == 147982809 then
data.The_Controller = 1
elseif tonumber(Message_Edit.sender_id.user_id) == 147982809 then
data.The_Controller = 1
elseif The_ControllerAll(Message_Edit.sender_id.user_id) == true then  
data.The_Controller = 1
elseif Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",Message_Edit.sender_id.user_id) == true then
data.The_Controller = 2
elseif Redis:sismember(LiOn.."LiOn:Developers:Groups",Message_Edit.sender_id.user_id) == true then
data.The_Controller = 3
elseif Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 44
elseif Redis:sismember(LiOn.."LiOn:TheBasics:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 4
elseif Redis:sismember(LiOn.."LiOn:Originators:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 5
elseif Redis:sismember(LiOn.."LiOn:Managers:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 6
elseif Redis:sismember(LiOn.."LiOn:Addictive:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 7
elseif Redis:sismember(LiOn.."LiOn:Distinguished:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 8
elseif tonumber(Message_Edit.sender_id.user_id) == tonumber(LiOn) then
data.The_Controller = 9
else
data.The_Controller = 10
end  
if data.The_Controller == 1 then  
data.ControllerBot = true
end
if data.The_Controller == 1 or data.The_Controller == 2 then
data.DevelopersQ = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 then
data.Developers = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 9 then
data.TheBasicsQ = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 9 then
data.TheBasics = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 9 then
data.Originators = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 9 then
data.Managers = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 7 or data.The_Controller == 9 then
data.Addictive = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 7 or data.The_Controller == 8 or data.The_Controller == 9 then
data.Distinguished = true
end

local UserInfo = luatele.getUser(Message_Edit.sender_id.user_id)
local names = FlterBio(UserInfo.first_name) 
local monsha = Redis:smembers(LiOn.."LiOn:TheBasicsQ:Group"..data.chat_id) 
Redis:incr(LiOn..'LiOn:Num:Message:Edit'..data.chat_id..Message_Edit.sender_id.user_id)
if Message_Edit.content.Merotele == "messageText" then
if Redis:get(LiOn.."LiOn:Lock:edittext"..data.chat_id) then
if not data.Distinguished then
luatele.deleteMessages(data.chat_id,{[1]= data.message_id})
if Redis:get(LiOn..'LiOn:AlThther:Chat'..data.chat_id)  then
local UserInfo = luatele.getUser(Message_Edit.sender_id.user_id)
local Teext = '❆︙المستخدم : ['..UserInfo.first_name..'](tg://user?id='..Message_Edit.sender_id.user_id..')\n'
return luatele.sendText(data.chat_id,0,Teext..'❆︙ممنوع التعديل هنا \n ✓',"md")
end
end
end
end
if not data.Originators then
if Message_Edit.content.Merotele == "messageContact" or Message_Edit.content.Merotele == "messageVideoNote" or Message_Edit.content.Merotele == "messageDocument" or Message_Edit.content.Merotele == "messageAudio" or Message_Edit.content.Merotele == "messageVideo" or Message_Edit.content.Merotele == "messageVoiceNote" or Message_Edit.content.Merotele == "messageAnimation" or Message_Edit.content.Merotele == "messagePhoto" then
if Redis:get(LiOn.."LiOn:Lock:edit"..data.chat_id) then
if #monsha ~= 0 then 
local ListMembers = '\n*❆︙تاك للمالكين  \n — — — — — — — — —*\n'
for k, v in pairs(monsha) do
local UserInfo = luatele.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." - *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." -* ["..v.."](tg://user?id="..v..")\n"
end
end
 
local tecxt = ListMembers.."\n\n".."\n❆︙المستخدم  {["..names.." ](tg://user?id="..Message_Edit.sender_id.user_id..")}"..
"\n❆︙قام بتعديل الميديا"
luatele.sendText(data.chat_id,0,tecxt,"md")
end
luatele.deleteMessages(data.chat_id,{[1]= data.message_id})
end
end
end
elseif data and data.Merotele and data.Merotele == "updateNewCallbackQuery" then
-- data.chat_id
-- data.payload.data
-- data.sender_user_id
Text = luatele.base64_decode(data.payload.data)
IdUser = data.sender_user_id
ChatId = data.chat_id
Msg_id = data.message_id
if tonumber(IdUser) == 147982809 then
data.The_Controller = 1
elseif tonumber(IdUser) == 147982809 then
data.The_Controller = 1
elseif The_ControllerAll(IdUser) == true then  
data.The_Controller = 1
elseif Redis:sismember(LiOn.."LiOn:DevelopersQ:Groups",IdUser) == true then
data.The_Controller = 2
elseif Redis:sismember(LiOn.."LiOn:Developers:Groups",IdUser) == true then
data.The_Controller = 3
elseif Redis:sismember(LiOn.."LiOn:TheBasicsQ:Group"..ChatId,IdUser) == true then
data.The_Controller = 44
elseif Redis:sismember(LiOn.."LiOn:TheBasics:Group"..ChatId,IdUser) == true then
data.The_Controller = 4
elseif Redis:sismember(LiOn.."LiOn:Originators:Group"..ChatId,IdUser) == true then
data.The_Controller = 5
elseif Redis:sismember(LiOn.."LiOn:Managers:Group"..ChatId,IdUser) == true then
data.The_Controller = 6
elseif Redis:sismember(LiOn.."LiOn:Addictive:Group"..ChatId,IdUser) == true then
data.The_Controller = 7
elseif Redis:sismember(LiOn.."LiOn:Distinguished:Group"..ChatId,IdUser) == true then
data.The_Controller = 8
elseif tonumber(IdUser) == tonumber(LiOn) then
data.The_Controller = 9
else
data.The_Controller = 10
end  
if data.The_Controller == 1 then  
data.ControllerBot = true
end
if data.The_Controller == 1 or data.The_Controller == 2 then
data.DevelopersQ = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 then
data.Developers = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 9 then
data.TheBasicsQ = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 9 then
data.TheBasics = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 9 then
data.Originators = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 9 then
data.Managers = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 7 or data.The_Controller == 9 then
data.Addictive = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 7 or data.The_Controller == 8 or data.The_Controller == 9 then
data.Distinguished = true
end
if Text and Text:match('(%d+)/UnKed') then
local UserId = Text:match('(%d+)/UnKed')
if tonumber(UserId) ~= tonumber(IdUser) then
return luatele.answerCallbackQuery(data.id, "◈￤الامر لا يخصك", true)
end
luatele.setChatMemberStatus(ChatId,UserId,'restricted',{1,1,1,1,1,1,1,1})
return luatele.editMessageText(ChatId,Msg_id,"◈￤تم التحقق ، شكرا لانضمامك", 'md', false)
end
if Text and Text:match("(%d+)/idomery/(%d+)") then
local UserId = {Text:match("(%d+)/idomery/(%d+)")}
if tonumber(IdUser) == tonumber(UserId[1]) then
var(UserId)
Redis:set(LiOn.."zogte"..ChatId..UserId[1],UserId[2])
Redis:set(LiOn.."zogte"..ChatId..UserId[2],UserId[1])
Redis:sadd(LiOn.."zogatall"..ChatId,UserId[1])
local UserInfo = luatele.getUser(UserId[1])
local Teext = "- ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserId[1]..")"
local UserInfo2 = luatele.getUser(UserId[2])
local Teext2 = "- ["..UserInfo2.first_name.."](tg://user?id="..UserId[2]..")"
return luatele.editMessageText(ChatId,Msg_id,"❆︙لقد قبل : "..Teext.."\n❆︙بالزواج من : "..Teext2, "md")
end
end
if Text and Text:match("(%d+)/idonotmery/(%d+)") then
local UserId = {Text:match("(%d+)/idonotmery/(%d+)")}
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:del(LiOn.."zogte"..ChatId..UserId[1])
Redis:del(LiOn.."zogte"..ChatId..UserId[2])
Redis:srem(LiOn.."zogatall"..ChatId,UserId[1])
local UserInfo = luatele.getUser(UserId[1])
local Teext = "- ["..UserInfo.first_name.."](tg://user?id="..UserId[1]..")"
local UserInfo2 = luatele.getUser(UserId[2])
local Teext2 = "- ["..UserInfo2.first_name.."](tg://user?id="..UserId[2]..")"
return luatele.editMessageText(ChatId,Msg_id,"❆︙لم يقبل : "..Teext.."\n❆︙بالزواج من : "..Teext2, "md")
end
end
if Text and Text:match("(%d+)/tlakkk/(%d+)") then
local UserId = {Text:match("(%d+)/tlakkk/(%d+)")}
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:del(LiOn.."zogte"..ChatId..UserId[1])
Redis:del(LiOn.."zogte"..ChatId..UserId[2])
Redis:srem(LiOn.."zogatall"..ChatId,UserId[1])
local UserInfo = luatele.getUser(UserId[1])
local Teext = "- ["..UserInfo.first_name.."](tg://user?id="..UserId[1]..")"
local UserInfo2 = luatele.getUser(UserId[2])
local Teext2 = "- ["..UserInfo2.first_name.."](tg://user?id="..UserId[2]..")"
return luatele.editMessageText(ChatId,Msg_id,"❆︙تم طلاق : "..Teext.."\n❆︙من الزوج : "..Teext2, "md")
end
end

if Text and Text:match('(%d+)/Nzlne') then
local UserId = Text:match('(%d+)/Nzlne')
if tonumber(IdUser) == tonumber(UserId) then
Redis:srem(LiOn.."LiOn:Distinguished:Group"..ChatId,IdUser)
Redis:srem(LiOn.."LiOn:Addictive:Group"..ChatId,IdUser)
Redis:srem(LiOn.."LiOn:Managers:Group"..ChatId,IdUser)
Redis:srem(LiOn.."LiOn:Originators:Group"..ChatId,IdUser)
Redis:srem(LiOn.."LiOn:TheBasics:Group"..ChatId,IdUser)
Redis:srem(LiOn.."LiOn:Developers:Groups",IdUser) 
Redis:srem(LiOn.."LiOn:TheBasicsQ:Group"..ChatId,IdUser)
return luatele.editMessageText(ChatId,Msg_id,"\n❆︙تم تنزيلك من جميع الرتب", 'md')
end
end
if Text and Text:match('(%d+)/noNzlne') then
local UserId = Text:match('(%d+)/noNzlne')
if tonumber(IdUser) == tonumber(UserId) then
return luatele.editMessageText(ChatId,Msg_id,"\n❆︙تم الغاء عمليه التنزيل", 'md')
end
end

if Text and Text:match('(%d+)/statusTheBasicsz/(%d+)') and data.TheBasicsQ then
local UserId = {Text:match('(%d+)/statusTheBasicsz/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if Redis:sismember(LiOn.."LiOn:TheBasics:Group"..ChatId,UserId[2]) then
Redis:srem(LiOn.."LiOn:TheBasics:Group"..ChatId,UserId[2])
else
Redis:sadd(LiOn.."LiOn:TheBasics:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end

if Text and Text:match('(%d+)/statusOriginatorsz/(%d+)') and data.TheBasics then
local UserId = {Text:match('(%d+)/statusOriginatorsz/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then 
if Redis:sismember(LiOn.."LiOn:Originators:Group"..ChatId,UserId[2]) then
Redis:srem(LiOn.."LiOn:Originators:Group"..ChatId,UserId[2])
else
Redis:sadd(LiOn.."LiOn:Originators:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end

if Text and Text:match('(%d+)/statusManagersz/(%d+)') and data.Originators then
local UserId = {Text:match('(%d+)/statusManagersz/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if Redis:sismember(LiOn.."LiOn:Managers:Group"..ChatId,UserId[2]) then
Redis:srem(LiOn.."LiOn:Managers:Group"..ChatId,UserId[2])
else
if not data.Originators and not Redis:get(LiOn.."LiOn:Status:SetId"..ChatId) then
return luatele.answerCallbackQuery(data.id,"❆︙تم تعطيل (الرفع) من قبل المنشئين",true)
end 
Redis:sadd(LiOn.."LiOn:Managers:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end

if Text and Text:match('(%d+)/statusAddictivez/(%d+)') and data.Managers then
local UserId = {Text:match('(%d+)/statusAddictivez/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if Redis:sismember(LiOn.."LiOn:Addictive:Group"..ChatId,UserId[2]) then
Redis:srem(LiOn.."LiOn:Addictive:Group"..ChatId,UserId[2])
else
if not data.Originators and not Redis:get(LiOn.."LiOn:Status:SetId"..ChatId) then
return luatele.answerCallbackQuery(data.id,"❆︙تم تعطيل (الرفع) من قبل المنشئين",true)
end 
Redis:sadd(LiOn.."LiOn:Addictive:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end

if Text and Text:match('(%d+)/statusDistinguishedz/(%d+)') and data.Addictive then
local UserId = {Text:match('(%d+)/statusDistinguishedz/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if Redis:sismember(LiOn.."LiOn:Distinguished:Group"..ChatId,UserId[2]) then
Redis:srem(LiOn.."LiOn:Distinguished:Group"..ChatId,UserId[2])
else
if not data.Originators and not Redis:get(LiOn.."LiOn:Status:SetId"..ChatId) then
return luatele.answerCallbackQuery(data.id,"❆︙تم تعطيل (الرفع) من قبل المنشئين",true)
end 
Redis:sadd(LiOn.."LiOn:Distinguished:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end

if Text and Text:match('(%d+)/statusmem/(%d+)') and data.TheBasicsQ then
local UserId ={ Text:match('(%d+)/statusmem/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:srem(LiOn.."LiOn:Distinguished:Group"..ChatId,UserId[2])
Redis:srem(LiOn.."LiOn:Addictive:Group"..ChatId,UserId[2])
Redis:srem(LiOn.."LiOn:Managers:Group"..ChatId,UserId[2])
Redis:srem(LiOn.."LiOn:Originators:Group"..ChatId,UserId[2])
Redis:srem(LiOn.."LiOn:TheBasics:Group"..ChatId,UserId[2])
Redis:srem(LiOn.."LiOn:SilentGroup:Group"..ChatId,UserId[2])
Redis:srem(LiOn.."LiOn:BanGroup:Group"..ChatId,UserId[2])
luatele.setChatMemberStatus(ChatId,UserId[2],'restricted',{1,1,1,1,1,1,1,1,1})
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end 
if Text and Text:match('(%d+)/statusban/(%d+)') and data.Addictive then
local UserId ={ Text:match('(%d+)/statusban/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if StatusCanOrNotCan(ChatId,UserId[2]) then
return luatele.answerCallbackQuery(data.id,"\n❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(ChatId,UserId[2]).." } ", true)
end
if Redis:sismember(LiOn.."LiOn:BanGroup:Group"..ChatId,UserId[2]) then
Redis:srem(LiOn.."LiOn:BanGroup:Group"..ChatId,UserId[2])
luatele.setChatMemberStatus(ChatId,UserId[2],'restricted',{1,1,1,1,1,1,1,1,1})
else
if not data.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..ChatId) then
return luatele.answerCallbackQuery(data.id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين",true)
end 
Redis:sadd(LiOn.."LiOn:BanGroup:Group"..ChatId,UserId[2])
luatele.setChatMemberStatus(ChatId,UserId[2],'banned',0)
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end
if Text and Text:match('(%d+)/statusktm/(%d+)') and data.Addictive then
local UserId ={ Text:match('(%d+)/statusktm/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if StatusSilent(ChatId,UserId[2]) then
return luatele.answerCallbackQuery(data.id, "\n❆︙عذرآ لا تستطيع استخدام الامر على { "..Controller(ChatId,UserId[2]).." } ", true)
end
if Redis:sismember(LiOn.."LiOn:SilentGroup:Group"..ChatId,UserId[2]) then
Redis:srem(LiOn.."LiOn:SilentGroup:Group"..ChatId,UserId[2])
else
if not data.Originators and not Redis:get(LiOn.."LiOn:Status:BanId"..ChatId) then
return luatele.answerCallbackQuery(data.id,"❆︙تم تعطيل (الحظر : الطرد : التقييد) من قبل المنشئين",true)
end 
Redis:sadd(LiOn.."LiOn:SilentGroup:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end
if Text and Text:match('/delAmr1') then
local UserId = Text:match('/delAmr1')
if data.Addictive then
return luatele.deleteMessages(ChatId,{[1]= Msg_id})
end
end
if Text and Text:match('(%d+)/cancelamr') and data.Addictive then
local UserId = Text:match('(%d+)/cancelamr')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Command:Reids:Group:Del"..ChatId..":"..IdUser)
Redis:del(LiOn.."LiOn:Command:Reids:Group"..ChatId..":"..IdUser)
Redis:del(LiOn.."LiOn:Set:Manager:rd"..IdUser..":"..ChatId)
Redis:del(LiOn.."LiOn:Set:Manager:rd"..IdUser..":"..ChatId)
Redis:del(LiOn.."LiOn:Set:Rd"..IdUser..":"..ChatId)
Redis:del(LiOn.."LiOn:Set:On"..IdUser..":"..ChatId)
return luatele.editMessageText(ChatId,Msg_id,"❆︙تم الغاء الامر بنجاح", 'md')
end
end


if Text and Text:match('(%d+)/mute_thshesh') and data.Originators then
local UserId = Text:match('(%d+)/mute_thshesh')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."amrthshesh"..ChatId)
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر التحشيش").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_kicknum') and data.TheBasics then
local UserId = Text:match('(%d+)/mute_kicknum')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."spammkick"..ChatId)
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الحظر المحدود").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_seck') and data.Originators then
local UserId = Text:match('(%d+)/mute_seck')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."kadmeat"..ChatId)
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الصيغ").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_knile') and data.Managers then
local UserId = Text:match('(%d+)/mute_knile')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."knele"..ChatId)
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر غنيلي").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_brj') and data.Managers then
local UserId = Text:match('(%d+)/mute_brj')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."brjj"..ChatId)
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الابراج").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_audio') and data.Managers then
local UserId = Text:match('(%d+)/mute_audio')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn..'lock_geamsAudio1'..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الصوتيات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_audioall') and data.Managers then
local UserId = Text:match('(%d+)/mute_audioall')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn..'lock_geamsAudio'..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الصوتيات العامه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_takall') and data.Originators then
local UserId = Text:match('(%d+)/mute_takall')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn..'tagall@all'..ChatId,'open')
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر التاك عام").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_namemy') and data.Managers then
local UserId = Text:match('(%d+)/mute_namemy')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn..'lock_chengname'..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر التنبيه").unLock, 'md', true, false, reply_markup)
end
end


if Text and Text:match('(%d+)/unmute_thshesh') and data.Originators then
local UserId = Text:match('(%d+)/unmute_thshesh')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."amrthshesh"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر التحشيش").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_kicknum') and data.Originators then
local UserId = Text:match('(%d+)/unmute_kicknum')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."spammkick"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الحظر المحدود").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_seck') and data.Originators then
local UserId = Text:match('(%d+)/unmute_seck')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."kadmeat"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الصيغ").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_knile') and data.Managers then
local UserId = Text:match('(%d+)/unmute_knile')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."knele"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر غنيلي").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_brj') and data.Managers then
local UserId = Text:match('(%d+)/unmute_brj')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."brjj"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الابراج").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_audio') and data.Managers then
local UserId = Text:match('(%d+)/unmute_audio')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn..'lock_geamsAudio1'..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الصوتيات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_audioall') and data.Originators then
local UserId = Text:match('(%d+)/unmute_audioall')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn..'lock_geamsAudio'..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الصوتيات العامه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_takall') and data.Originators then
local UserId = Text:match('(%d+)/unmute_takall')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn..'tagall@all'..ChatId,'close')
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر التاك عام").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_namemy') and data.Managers then
local UserId = Text:match('(%d+)/unmute_namemy')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn..'lock_chengname'..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر التنبيه").unLock, 'md', true, false, reply_markup)
end
end

 
if Text == 'صحيح' then
local UserInfo = luatele.getUser(IdUser)
local Teext = '- [*'..UserInfo.first_name..'*](tg://user?id='..IdUser..') \n*❆︙احسنت اجابتك صحيحه تم اضافه لك 3 نقطه*'
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..ChatId..IdUser,3)  
return luatele.editMessageText(ChatId,Msg_id,Teext, 'md')
elseif Text == 'غلط' then
local UserInfo = luatele.getUser(IdUser)
local Teext = '- ['..UserInfo.first_name..'](tg://user?id='..IdUser..') \n❆︙للاسف اجابتك خاطئه !!'
return luatele.editMessageText(ChatId,Msg_id,Teext, 'md')
end
if Text == 'صحيح1' then
local UserInfo = luatele.getUser(IdUser)
local Teext = '- [*'..UserInfo.first_name..'*](tg://user?id='..IdUser..') \n*❆︙احسنت اجابتك صحيحه تم اضافه لك 3 نقطه*'
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..ChatId..IdUser,3)  
return luatele.editMessageText(ChatId,Msg_id,Teext, 'md')
elseif Text == 'غلط1' then
local UserInfo = luatele.getUser(IdUser)
local Teext = '- ['..UserInfo.first_name..'](tg://user?id='..IdUser..') \n❆︙للاسف اجابتك خاطئه !!'
return luatele.editMessageText(ChatId,Msg_id,Teext, 'md')
end
if Text == '/joineloceagin' then
local list = Redis:smembers(LiOn..'loce:list'..ChatId) 
name1 = list[math.random(#list)]
local UserInfo1 = luatele.getUser(name1)
local Teext1 = '- ['..UserInfo1.first_name..'](tg://user?id='..name1..')'
xxffxx1 = '❆︙لقد فاز بالمركز الثاني : '..Teext1..' ربح  3 نقاط'
Redis:set(LiOn..'loce:listset1'..ChatId,xxffxx1)
Redis:srem(LiOn..'loce:list'..ChatId,name1)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..ChatId..name1,3)  
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = 'اضغط مره اخره', data = '/joineloceagin1'},
},
}
}
return luatele.editMessageText(ChatId,Msg_id,xxffxx1, 'md', true, false, reply_markup)
end

if Text == '/joineloceagin1' then
local list = Redis:smembers(LiOn..'loce:list'..ChatId) 
name1 = list[math.random(#list)]
local UserInfo1 = luatele.getUser(name1)
local Teext1 = '- ['..UserInfo1.first_name..'](tg://user?id='..name1..')'
xxffxx1 = '❆︙لقد خسر : '..Teext1..' '
local get1 = Redis:get(LiOn..'loce:listset'..ChatId)
local get2 = Redis:get(LiOn..'loce:listset1'..ChatId)

Redis:del(LiOn..'loce:list'..ChatId) 
Redis:del(LiOn..'loce:listset'..ChatId)
Redis:del(LiOn..'loce:listset1'..ChatId)
return luatele.editMessageText(ChatId,Msg_id,get1..'\n'..get2..'\n'..xxffxx1..'\n', 'md', true)
end
if Text == '/joineloce' then
if not Redis:sismember(LiOn..'loce:list'..ChatId,IdUser) then 
Redis:sadd(LiOn..'loce:list'..ChatId,IdUser)
local list = Redis:smembers(LiOn..'loce:list'..ChatId) 
if #list == 3 then
name1 = list[math.random(#list)]
local UserInfo1 = luatele.getUser(name1)
local Teext1 = '- ['..UserInfo1.first_name..'](tg://user?id='..name1..')'
xxffxx1 = '❆︙لقد فاز بالمركز الاول : '..Teext1..' ربح  5 نقاط'
Redis:set(LiOn..'loce:listset'..ChatId,xxffxx1)
Redis:srem(LiOn..'loce:list'..ChatId,name1)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..ChatId..name1,5)  
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = 'اضغط مره اخره', data = '/joineloceagin'},
},
}
}
return luatele.editMessageText(ChatId,Msg_id,xxffxx1, 'md', true, false, reply_markup)
else
local UserInfo = luatele.getUser(IdUser)
local Teext = '- ['..UserInfo.first_name..'](tg://user?id='..IdUser..')'
local xxffxx = 'عدد الاعبين : '..#list..' \nلقد انضم  للعبه الحظ : \n'..Teext
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '❆︙اضغط للانضمام في اللعبه', data = '/joineloce'},
},
}
}
return luatele.editMessageText(ChatId,Msg_id,xxffxx, 'md', true, false, reply_markup)
end
else
luatele.answerCallbackQuery(data.id, "❆︙لقد انضممت مسبقا", true)
end
end




if Text == '/startjoinerolet' then
local list = Redis:smembers(LiOn..'rolet:list'..ChatId)
name = list[math.random(#list)]
local UserInfo = luatele.getUser(name)
local Teext = '- ['..UserInfo.first_name..'](tg://user?id='..name..')'
Redis:srem(LiOn..'rolet:list'..ChatId,name)
if #list == 1 then
Redis:srem(LiOn..'rolet:list'..ChatId,name)
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..ChatId..IdUser,10)  
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?ChatId='..ChatId..'&text='..URL.escape('❆︙الف مبروك لقد فاز : ['..UserInfo.first_name..'](tg://user?id='..name..') ب10 نقاط مكافئه')..'&reply_to_message_id='..Msg_id..'&parse_mode=markdown') 
return luatele.editMessageText(ChatId,Msg_id,'❆︙الف مبروك لقد فاز : ['..UserInfo.first_name..'](tg://user?id='..name..') ب10 نقاط مكافئه', 'md')
end
local xxffxx = '❆︙لقد خسر : '..Teext
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '❆︙بدء الروليت ', data = '/startjoinerolet'},
},
}
}
return luatele.editMessageText(ChatId,Msg_id,xxffxx, 'md', true, false, reply_markup)
end

if Text == '/joinerolet' then
if not Redis:sismember(LiOn..'rolet:list'..ChatId,IdUser) then 
Redis:sadd(LiOn..'rolet:list'..ChatId,IdUser)
local list = Redis:smembers(LiOn..'rolet:list'..ChatId) 
if #list == 3 then
local message = '❆︙المشتركين في اللعبه : ' 
for k,v in pairs(list) do
local UserInfo = luatele.getUser(IdUser)
if k == 1 then
id = 'tg://user?id='..v
name1 = UserInfo.first_name
end
if k == 2 then
id1 = 'tg://user?id='..v
name2 = UserInfo.first_name
end
if k == 3 then
id2 = 'tg://user?id='..v
name3 = UserInfo.first_name
end
if k == #list then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = name1, url = id}, 
},
{
{text = name2, url = id1}, 
},
{
{text = name3, url = id2}, 
},
{
{text = '❆︙اضغط لبدء اللعبه', data = '/startjoinerolet'},
},
}
}
return luatele.editMessageText(ChatId,Msg_id,message, 'md', true, false, reply_markup)
end
end
else
local UserInfo = luatele.getUser(IdUser)
local Teext = '- ['..UserInfo.first_name..'](tg://user?id='..IdUser..')'
local xxffxx = 'عدد الاعبين : '..#list..' \nلقد انضم للروليت : \n'..Teext
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '❆︙اضغط للانضمام في اللعبه', data = '/joinerolet'},
},
}
}
return luatele.editMessageText(ChatId,Msg_id,xxffxx, 'md', true, false, reply_markup)
end
else
https.request("https://api.telegram.org/bot"..Token..'/answerCallbackQuery?callback_query_id='..data.id_..'&text='..URL.escape('لقد انضممت مسبقا')..'&show_alert=true')
end
end


if Text and Text:match('/Mahibes(%d+)') then
local GetMahibes = Text:match('/Mahibes(%d+)') 
local NumMahibes = math.random(1,6)
local UserInfo = luatele.getUser(IdUser)
local Teext = '- ['..UserInfo.first_name..'](tg://user?id='..IdUser..')'
if tonumber(GetMahibes) == tonumber(NumMahibes) then
Redis:incrby(LiOn.."LiOn:Num:Add:Games"..ChatId..IdUser, 1)  
MahibesText = Teext..'\n*❆︙الف مبروك حظك حلو اليوم\n❆︙فزت ويانه وطلعت المحيبس  باليد رقم {'..NumMahibes..'}*'
else
MahibesText = Teext..'\n*❆︙للاسف لقد خسرت المحيبس باليد رقم {'..NumMahibes..'}\n❆︙جرب حضك ويانه مره اخره*'
end
return luatele.editMessageText(ChatId,Msg_id,MahibesText, 'md', true, false, reply_markup)
end
if Text and Text:match('(%d+)/help1') then
local UserId = Text:match('(%d+)/help1')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ 𝟏 }', data = IdUser..'/help1'}, {text = '{ 𝟐 }', data = IdUser..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = IdUser..'/help3'}, {text = '{ 𝟒 }', data = IdUser..'/help4'}, 
},
{
{text = '{ 𝟓 }', data = IdUser..'/help5'}, {text = '{ 𝟔 }', data = IdUser..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = IdUser..'/helpsudo'},{text = '{ الالعاب }', data = IdUser..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = IdUser..'/helpts'},
},
{
{text = '{ القائمه الرئيسيه }', data = IdUser..'/helpall'},
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر الحمايه كالاتي ...
— — — — — — — — —
❆︙قفل ، فتح ← الامر 
❆︙تستطيع قفل حمايه كما يلي ...
❆︙← { بالتقييد ، بالطرد ، بالكتم }
— — — — — — — — —
❆︙الكل ~ الدخول
❆︙الروابط ~ المعرف
❆︙التاك ~ الشارحه
❆︙التعديل ~ تعديل الميديا
❆︙المتحركه ~ الملفات
❆︙الصور ~ الفيديو 
— — — — — — — — —
❆︙الماركداون ~ البوتات
❆︙التكرار ~ الكلايش
❆︙السيلفي ~ الملصقات
❆︙الانلاين ~  الدردشه
— — — — — — — — —
❆︙التوجيه ~ الاغاني
❆︙الصوت ~ الجهات
❆︙الاشعارات ~ التثبيت 
❆︙الوسائط ~ التفليش
❆︙وسائط المميزين
❆︙الفشار ~ ارسال القناة
❆︙القنوات
❆︙الإنكليزيه ~ الفارسيه
❆︙الكفر ~ الاباحي
— — — — — — — — —
*]]
luatele.editMessageText(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/help2') then
local UserId = Text:match('(%d+)/help2')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ 𝟏 }', data = IdUser..'/help1'}, {text = '{ 𝟐 }', data = IdUser..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = IdUser..'/help3'}, {text = '{ 𝟒 }', data = IdUser..'/help4'}, 
},
{
{text = '{ 𝟓 }', data = IdUser..'/help5'}, {text = '{ 𝟔 }', data = IdUser..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = IdUser..'/helpsudo'},{text = '{ الالعاب }', data = IdUser..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = IdUser..'/helpts'},
},
{
{text = '{ القائمه الرئيسيه }', data = IdUser..'/helpall'},
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر ادمنية المجموعه ...
— — — — — — — — —
❆︙رفع، تنزيل ← مميز
❆︙المميزين ← مسح المميزين
❆︙رفع المالك 
❆︙تاك ، تاك للكل ، المجموعه
❆︙منع ، الغاء منع
— — — — — — — — —
❆︙الاوامر التالية ← {بالرد ، بالمعرف}
❆︙حظر ، طرد ← الغاء حظر 
❆︙كتم ← الغاء كتم
❆︙تقييد ← الغاء تقييد
❆︙كشف ، رفع ← القيود
— — — — — — — — —
❆︙عرض القوائم كما يلي ...
— — — — — — — — —
❆︙المنشئين الاساسيين ، المنشئين 
❆︙المدراء ، الادمنيه ، المميزين
❆︙المشرفين ، المكتومين
❆︙قائمه المنع
— — — — — — — — —
❆︙تثبيت ، الغاء تثبيت
❆︙الرابط ، الاعدادات ، الحمايه
❆︙الترحيب ، القوانين
❆︙ضع رتبه  ← { اسم الرتبه } 
❆︙تحكم ← {بالرد ، بالمعرف}
— — — — — — — — —
❆︙تفعيل ، تعطيل ← الاوامر التاليه :
❆︙الترحيب ، الرابط ، التحقق
❆︙الالعاب ، التحشيش
❆︙اطردني
— — — — — — — — —
❆︙مسح ← الاوامر التاليه
❆︙القوائم ، قائمه المنع ، المميزين
❆︙الرابط ، القوانين ، الصوره
❆︙مسح ← { عدد }
❆︙مسح ← { بالرد }
— — — — — — — — —
❆︙اوامر الاعضاء والادمنيه 
— — — — — — — — —
❆︙ايدي ، ايدي بالرد ، رسائلي
❆︙تفاعلي ، لقبي ، بايو
❆︙اسمي ، معرفي ، التفاعل
❆︙جهاتي ، سحكاتي ، نقاطي
❆︙بيع نقاطي + العدد
❆︙مسح نقاطي
❆︙كول + الكلمه
❆︙منشن ، ترند
❆︙زواج ، ثنائي اليوم ، نبذه
❆︙الوقت ، الساعه ، التاريخ
❆︙الصوتيات ، الصوتيات العامه
❆︙زخرفه ، زخرفه + اسم
❆︙تحويل الصيغ ، غنيلي ، اغنيه
❆︙همسه ، اسم برجك ، صورتي
❆︙صلاحياتي ، رتبتي ، نزلني 
❆︙صلاحياته ← {بالرد ، بالمعرف}
❆︙الرتبه ← {بالرد ، بالمعرف}
❆︙تفاعله ← {بالرد ، بالمعرف}
❆︙جهاته ← {بالرد ، بالمعرف}
❆︙كشف ← {بالرد ، بالمعرف}
*]]
luatele.editMessageText(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/help3') then
local UserId = Text:match('(%d+)/help3')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ 𝟏 }', data = IdUser..'/help1'}, {text = '{ 𝟐 }', data = IdUser..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = IdUser..'/help3'}, {text = '{ 𝟒 }', data = IdUser..'/help4'}, 
},
{
{text = '{ 𝟓 }', data = IdUser..'/help5'}, {text = '{ 𝟔 }', data = IdUser..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = IdUser..'/helpsudo'},{text = '{ الالعاب }', data = IdUser..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = IdUser..'/helpts'},
},
{
{text = '{ القائمه الرئيسيه }', data = IdUser..'/helpall'},
},
{
{text = '𝑴𝑬𝑹𝑶 𝑺𝑶??𝑹𝑪𝑬 ™®', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر المدراء في المجموعه
— — — — — — — — —
❆︙رفع ، تنزيل ← ادمن
❆︙الادمنيه ← مسح الادمنيه
❆︙رفع الادمنيه  
❆︙تنزيل الكل ← {بالرد ، بالمعرف}
❆️︙كشف ، طرد ، قفل ← البوتات
❆︙قفل البوتات ← بالطرد
❆︙فحص ← البوت
❆︙طرد ← المحذوفين 
❆︙قفل فتح ← ارسال القناة
— — — — — — — — —
❆︙لتغيير رد الرتب في البوت
— — — — — — — — —
❆︙تغيير رد ← {اسم الرتبه والنص} 
❆︙المطور ، المالك ، المنشئ الاساسي
❆︙المنشئ ، المدير ، الادمن
❆︙المميز ، العضو
❆︙مسح رد ← { اسم الرتبه }
— — — — — — — — —
❆︙وضع الرتب ← { بالرد , بالمعرف}
❆︙ضع رتبه ← { اسم الرتبه }
❆︙مسح رتبه ← { بالرد ، بالمعرف}
— — — — — — — — —
❆︙وضع ، ضع ← الاوامر التاليه
❆︙اسم + اسم المجموعه
❆︙رابط ، صوره
❆︙قوانين ، وصف ،الترحيب 
— — — — — — — — —
❆︙تفعيل ، تعطيل ← الاوامر التاليه :
❆︙الايدي ، الايدي بالصوره
❆︙ايدي العضو ، البايو
❆︙الترحيب ،منشن 
❆︙صورتي ، اسمي ، نبذه 
❆︙الردود ، الابراج ، التفاعل 
❆︙غنيلي ، الصيغ ، كول
❆︙التنبيه ، ردود البوت 
❆︙الصوتيات ، الصوتيات العامه
— — — — — — — — —
❆︙مسح ← + { الامر } 
❆︙المحظورين ، المطرودين
❆︙المكتومين ← المقيدين
— — — — — — — — —
❆︙ترتيب الاوامر ← استعاده الاوامر
❆︙اضف ، مسح ← { رد }
❆︙الردود ، مسح الردود
❆︙اضف ، مسح ← { رد متعدد}
❆︙الردود المتعدده
❆︙مسح الردود المتعدده
❆︙تاك عام ، all 
❆︙الكلمه + @all
❆︙الميديا ← امسح
❆︙اضف رسائل + العدد {بالرد}
❆︙اضف نقاط + العدد {بالرد}
❆︙اضف سحكات + العدد {بالرد}
*]]
luatele.editMessageText(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/help4') then
local UserId = Text:match('(%d+)/help4')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ 𝟏 }', data = IdUser..'/help1'}, {text = '{ 𝟐 }', data = IdUser..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = IdUser..'/help3'}, {text = '{ 𝟒 }', data = IdUser..'/help4'}, 
},
{
{text = '{ 𝟓 }', data = IdUser..'/help5'}, {text = '{ 𝟔 }', data = IdUser..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = IdUser..'/helpsudo'},{text = '{ الالعاب }', data = IdUser..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = IdUser..'/helpts'},
},
{
{text = '{ القائمه الرئيسيه }', data = IdUser..'/helpall'},
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر المنشئ الاساسي
— — — — — — — — —
❆︙رفع ، تنزيل ←{ منشئ }
❆︙المنشئين ، مسح المنشئين
❆︙رفع ، تنزيل ←{ مشرف }
❆︙ضع لقب + اللقب ← { بالرد }
❆︙صلاحيات المجموعه
❆︙مسح نقاطه ، رسائله ← {بالرد}
❆︙تفعيل ، تعطيل ← الحظر المحدود
❆︙تفعيل ، تعطيل ← البنك
— — — — — — — — —
❆︙اوامر المنشئ المجموعه
— — — — — — — — —
❆︙رفع ، تنزيل ← { مدير }
❆︙المدراء ، مسح المدراء
❆︙تغيير ، مسح ←{ الايدي }
❆︙تعيين ، مسح ←{ الايدي }
❆︙اضف ، مسح ← { امر }
❆︙الاوامر المضافه ، مسح الاوامر المضافه
❆︙ضع التكرار ← { عدد }
❆︙تفعيل الاوامر ← { اوامر اساسيه }
— — — — — — — — —
❆︙تفعيل ، تعطيل ← الاوامر التاليه :
❆︙الردود العامه ، الطرد ، الحظر
❆︙الرفع ، التاك ، نزلني ، ضع رتبه 
❆︙تاك عام ، المسح التلقائي ، امسح
❆︙ضع عدد المسح + { عدد }
❆︙تفعيل ، تعطيل التوحيد
❆︙ضع التوحيد + رمز التوحيد
❆︙تعيين عدد الكتم + رقم
*]]
luatele.editMessageText(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/help5') then
local UserId = Text:match('(%d+)/help5')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ 𝟏 }', data = IdUser..'/help1'}, {text = '{ 𝟐 }', data = IdUser..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = IdUser..'/help3'}, {text = '{ 𝟒 }', data = IdUser..'/help4'}, 
},
{
{text = '{ 𝟓 }', data = IdUser..'/help5'}, {text = '{ 𝟔 }', data = IdUser..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = IdUser..'/helpsudo'},{text = '{ الالعاب }', data = IdUser..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = IdUser..'/helpts'},
},
{
{text = '{ القائمه الرئيسيه }', data = IdUser..'/helpall'},
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
︙اوامر مالك المجموعه 
— — — — — — — — —
❆︙رفع ، تنزيل ←{ مالك }
❆︙المالكين ، مسح المالكين
❆︙ارفعني مالك (مشرف يمتلك صلاحيات المالك) يتم رفعه بهذا الامر
❆︙رفع المالك (المالك اذا كان عضو يمكنه رفع نفسه)
❆︙تنزيل جميع الرتب
— — — — — — — — —
❆︙اوامر المالكين 
— — — — — — — — —
❆︙رفع ، تنزيل ←{ منشئ اساسي }
❆︙المنشئين الاساسيين،
❆︙مسح المنشئين الاساسيين 
❆︙تفعيل ، تعطيل الالعاب المالكين
❆︙تفعيل ، تعطيل نداء المالك
❆︙رفع ، تنزيل {مشرف بكل الصلاحيات}
*]]
luatele.editMessageText(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/help6') then
local UserId = Text:match('(%d+)/help6')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ ?? }', data = IdUser..'/help1'}, {text = '{ 𝟐 }', data = IdUser..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = IdUser..'/help3'}, {text = '{ 𝟒 }', data = IdUser..'/help4'}, 
},
{
{text = '{ 𝟓 }', data = IdUser..'/help5'}, {text = '{ 𝟔 }', data = IdUser..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = IdUser..'/helpsudo'},{text = '{ الالعاب }', data = IdUser..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = IdUser..'/helpts'},
},
{
{text = '{ القائمه الرئيسيه }', data = IdUser..'/helpall'},
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆❆︙قائمــه العــاب البــوت
— — — — — — — — —
❆︙المختلف »  لعبة المختلف
❆︙امثله » لعبة الامثله 
❆︙العكس « لعبة عكس الكلمه
❆︙حزوره « لعبة الحزوره
❆︙معاني « لعبة المعاني
❆︙بات « لعبة البات 
❆︙خمن » لعبة التخمين
❆︙ترتيب » لعبة  ترتيب الحروف
❆︙سمايلات » لعبة السمايلات
❆︙اسئله » اسئله منوعه
❆︙اسالني » اسئله عامه متجدده
❆︙لغز  » الغاز الذكاء متجدده
❆︙روليت » الروليت بالمعرفات 
❆︙الروليت » الروليت بالانضمام
❆︙رياضيات » مسائل رياضيه 
❆︙انكليزي » معاني الكلمات 
❆︙كت تويت،كت  »  اسئله ترفيهيه
❆︙لو خيروك » لعبة لو خيروك
❆︙صراحه » لعبة الصراحه
❆︙اعلام » لعبة اعلام الدول
❆︙مقالات » لعبة المقالات
❆︙عواصم » لعبة عواصم الدول
❆︙كلمات » لعبة كتابة الكلمات
❆︙الحظ » لعبة الحظ شفافه
— — — — — — — — —
❆︙نقاطي ← لعرض عدد النقاط 
❆︙بيع نقاطي + { العدد } 
لبيع كل نقطه مقابل {50} رساله
*]]
luatele.editMessageText(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/helpp6') then
local UserId = Text:match('(%d+)/helpp6')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ 𝟏 }', data = IdUser..'/help1'}, {text = '{ 𝟐 }', data = IdUser..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = IdUser..'/help3'}, {text = '{ 𝟒 }', data = IdUser..'/help4'}, 
},
{
{text = '{ 𝟓 }', data = IdUser..'/help5'}, {text = '{ 𝟔 }', data = IdUser..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = IdUser..'/helpsudo'},{text = '{ الالعاب }', data = IdUser..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = IdUser..'/helpts'},
},
{
{text = '{ القائمه الرئيسيه }', data = IdUser..'/helpall'},
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
↫‌‌‏   اوامر التحشيش 
     — — — — — — — — —
   ❆︙تفعيل تعطيل التحشيش
   ❆︙رفــــع «» تنزيــــل ⇣
     — — — — — — — — —
   ❆︙تـــــاج  ~ مــلـك
   ❆︙مـــلـكه ~ مرتــي
   ❆︙اثـــول ~ جلـــب
   ❆︙مطــي ~ صخـل
   ❆︙بـقـــره ~ زاحـف
   ❆︙لوكــي ~ غبـــي
   ❆︙طـلــي ~ طامس
   ❆︙بكلبي ~ من كلبي
     — — — — — — — — —
   ❆︙الامـر ⇣ ~ مسح + الامـر ⇣ 
     — — — — — — — — —
   ❆︙قائمه التاج ~ المـلــوك
   ❆︙المـلـكات ~ الطامسين
   ❆︙الثولان ~  الجــلاب
   ❆︙المطايــه ~  الصخول
   ❆︙البـقــرات ~ الزواحف
   ❆︙اللوكيــه ~  الاغبيـاء
   ❆︙الطليـان ~  قائمـه كلبي
     — — — — — — — — —
   ❆︙نسبه الحب/ الكره
   ❆︙نسبه الرجوله/ الانوثه 
   ❆︙نسبه الذكـــــاء/ الغباء 
     — — — — — — — — —
   ❆︙الاوامــر بالـــرد  ⇣ 
     — — — — — — — — —
   ❆︙شنو رايك بهذا 
   ❆︙شنو رايك بهاي 
   ❆︙انطي هديه
   ❆︙بوســه ~  بوسـني
   ❆︙صيحـه ~  رزلـــه
     — — — — — — — — —
*]]
luatele.editMessageText(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/helpall') then
local UserId = Text:match('(%d+)/helpall')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ 𝟏 }', data = IdUser..'/help1'}, {text = '{ 𝟐 }', data = IdUser..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = IdUser..'/help3'}, {text = '{ 𝟒 }', data = IdUser..'/help4'}, 
},
{
{text = '{ ?? }', data = IdUser..'/help5'}, {text = '{ 𝟔 }', data = IdUser..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = IdUser..'/helpsudo'},{text = '{ الالعاب }', data = IdUser..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = IdUser..'/helpts'},
},
{
{text = '{ القفل / الفتح }', data = IdUser..'/NoNextSeting'}, {text = '{ التعطيل / التفعيل }', data = IdUser..'/listallAddorrem'}, 
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامــر البــوت الرئيسيـة 
— — — — — — — — —
❆︙{ م1 } ← اوامر الحمايه
❆︙{ م2 } ← اوامر الادمنيه
❆︙{ م3 } ← اوامر المدراء
❆︙{ م4 } ← اوامر المنشئين
❆︙{ م5 } ← اوامر المالكين
❆︙{ م6 } ← اوامر التحشيش
❆︙{ م7 } ← اوامـــر التسليـه
❆︙{ م المطور } ← اوامر المطور
*]]
luatele.editMessageText(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/helpsudo') and data.Developers then
local UserId = Text:match('(%d+)/helpsudo')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ 𝟏 }', data = IdUser..'/help1'}, {text = '{ 𝟐 }', data = IdUser..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = IdUser..'/help3'}, {text = '{ 𝟒 }', data = IdUser..'/help4'}, 
},
{
{text = '{ 𝟓 }', data = IdUser..'/help5'}, {text = '{ 𝟔 }', data = IdUser..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = IdUser..'/helpsudo'},{text = '{ الالعاب }', data = IdUser..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = IdUser..'/helpts'},
},
{
{text = '{ القفل / الفتح }', data = IdUser..'/NoNextSeting'}, {text = '{ التعطيل / التفعيل }', data = IdUser..'/listallAddorrem'}, 
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
❆︙اوامر المطور الاساسي  
— — — — — — — — —
❆︙تفعيل  ←  تعطيل
❆︙رفع  تنزيل ← مطور اساسي
❆︙المطورين الاساسيين
❆︙مسح المطورين الاساسيين
❆︙رفع  تنزيل ← مطور ثانوي
❆︙المطورين الثانويين  
❆︙مسح المطورين الثانويين
❆︙رفع  تنزيل ← مطور
❆︙المطورين ← مسح المطورين
❆︙تغيير المطور الاساسي
— — — — — — — — —
❆︙تفعيل الوضع المدفوع
❆︙الغاء الوضع المدفوع
❆︙تفعيل الوضع المدفوع + { الايدي }
❆︙الغاء الوضع المدفوع + { الايدي }
❆︙معلومات المجموعه + { الايدي }
❆︙حظر مجموعه + { الايدي }
❆︙غادر ← + { الايدي }
❆︙اسم بوتك + غادر بالمجموعه
❆︙تفعيل تعطيل الاشتراك الاجباري
❆︙الاشتراك الاجباري
❆︙تغيير الاشتراك الاجباري
❆︙تفعيل تعطيل الاشتراك الاجباري المجموعه
❆︙الاشتراك الاجباري المجموعه
❆︙تعيين عدد الاعضاء + {العدد}
— — — — — — — — —
❆︙حظر عام ، الغاء حظر عام
❆︙قائمه العام ، مسح قائمه العام
❆︙كتم عام ، الغاء كتم عام
❆︙المكتومين عام
❆︙مسح المكتومين عام
❆︙رفع القيود عام +{ المعرف } 
— — — — — — — — —
❆︙تغيير ، مسح ←{ اسم البوت }
❆︙ضع صوره للترحيب 
❆︙الاحصائيات
❆︙ذيع + ايدي المجموعه بالرد
❆︙اذاعه ، اذاعه خاص
❆︙اذاعه بالتوجيه ، اذاعه بالتثبيت
❆︙اذاعه خاص بالتوجيه
— — — — — — — — —
❆︙تفعيل تعطيل جلب النسخ تلقائي
❆︙جلب النسخه الاحتياطيه
❆︙رفع النسخه الاحتياطيه بالرد
❆︙رفع نسخه تشاكي بالرد
❆︙جلب نسخه الردود 
❆︙رفع نسخه الردود بالرد
❆︙جلب نسخه الردود العامه
❆︙رفع نسخه الردود العامه بالرد
❆︙اشتراك البوت
❆︙معلومات التنصيب
— — — — — — — — —
❆︙تعيين ، مسح ← { الايدي عام }
❆︙اضف ، مسح ← {رد عام}
❆︙اضف ، مسح ← {رد عام متعدد}
❆︙ضع ، مسح ← { الترحيب عام } 
❆︙ضع ، مسح ← { كليشه المطور }
❆︙الردود العامه ، مسح الردود العامه
❆︙اضف مسح صوت عام
❆︙الصوتيات العامه 
❆︙مسح الصوتيات العامه
❆︙منع عام ، الغاء منع عام
❆︙قائمه المنع عام
❆︙مسح قائمه المنع عام
❆︙تفعيل ، تعطيل ← { امسح عام }
❆︙تفعيل ، تعطيل {ردود السورس عام}
— — — — — — — — —
❆︙اضف مسح ← سؤال
❆︙الاسئله المضافه
❆︙مسح الاسئله المضافه
❆︙اضف مسح ← لغز 
❆︙الالغاز ~ مسح الالغاز
❆︙اضف مسح ← سؤال كت 
❆︙اسئله كت
❆︙اضف اسئله كت
❆︙مسح اسئله كت
❆︙اضف مسح سؤال ← مقالات
❆︙مسح المقالات
— — — — — — — — —
❆︙تفعيل ، تعطيل ← الاوامر التاليه↓
❆︙البوت الخدمي ، المغادرة ، الاذاعه
❆︙التواصل ، الاحصائيات
❆︙ملف ← { اسم الملف }
— — — — — — — — —
❆︙مسح جميع الملفات 
❆︙المتجر ، الملفات
❆︙تحديث ، تحديث السورس 
— — — — — — — — —
❆︙اوامر المطور في البوت
— — — — — — — — —
❆︙رفع، تنزيل ← { مالك اساسي }
❆︙المالكين الاساسيين
❆︙مسح المالكين الاساسيين 
❆︙رفع، تنزيل ← { مالك }
❆︙المالكين ، مسح المالكين
❆︙تنزيل جميع الرتب
*]]
luatele.editMessageText(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/helpts') then
local UserId = Text:match('(%d+)/helpts')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '{ 𝟏 }', data = IdUser..'/help1'}, {text = '{ 𝟐 }', data = IdUser..'/help2'}, 
},
{
{text = '{ 𝟑 }', data = IdUser..'/help3'}, {text = '{ 𝟒 }', data = IdUser..'/help4'}, 
},
{
{text = '{ 𝟓 }', data = IdUser..'/help5'}, {text = '{ 𝟔 }', data = IdUser..'/helpp6'}, 
},
{
{text = '{ م المطور }', data = IdUser..'/helpsudo'},{text = '{ الالعاب }', data = IdUser..'/help6'}, 
},
{
{text = '{ اوامر التسليه }', data = IdUser..'/helpts'},
},
{
{text = '{ القفل / الفتح }', data = IdUser..'/NoNextSeting'}, {text = '{ التعطيل / التفعيل }', data = IdUser..'/listallAddorrem'}, 
},
{
{text = '• LION TEAM . ', url = 't.me/ul_39'}, 
},
}
}
local TextHelp = [[*
︙اوامر التسليه كالاتي: 
— — — — — — — — —
❆︙الامر ، تفعيل ، تعطيل ← { الامر }
❆︙غنيلي ، ريمكس ، اغنيه ، شعر
❆︙صوره ،  متحركه
❆︙انمي ، ميمز
❆︙مسلسل ، فلم
❆︙حساب العمر( احسب + تاريخ الميلاد)
❆︙معنى اسم + الاسم
— — — — — — — — —
❆︙زواج ~ طلاق ← { بالرد }
❆︙المتزوجين ~ مسح المتزوجين
❆︙ثنائي اليوم ، منشن
❆︙تفعيل تعطيل زواج
❆︙تفعيل تعطيل ثنائي اليوم 
❆︙تفعيل تعطيل منشن
— — — — — — — — —
❆︙انشاء ، مسح حساب بنكي
❆︙راتب ، بخشيش
❆︙استثمار + { رقم }
❆︙مضاربه + { رقم }
❆︙حظ + { رقم }
❆︙توب ، حسابي ، فلوسي
❆︙حسابه ، فلوسه  { بالرد }
❆︙سرقه { بالرد }
❆︙تحويل + رقم  { بالرد }
❆︙تصفير الفلوس 
❆︙تفعيل ، تعطيل البنك
— — — — — — — — —
*]]
luatele.editMessageText(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end

if Text and Text:match('(%d+)/lock_link') then
local UserId = Text:match('(%d+)/lock_link')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Link"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الروابط").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_spam') then
local UserId = Text:match('(%d+)/lock_spam')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Spam"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الكلايش").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_keypord') then
local UserId = Text:match('(%d+)/lock_keypord')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Keyboard"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الكيبورد").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_voice') then
local UserId = Text:match('(%d+)/lock_voice')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:vico"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الاغاني").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gif') then
local UserId = Text:match('(%d+)/lock_gif')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Animation"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل المتحركات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_files') then
local UserId = Text:match('(%d+)/lock_files')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Document"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الملفات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_text') then
local UserId = Text:match('(%d+)/lock_text')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:text"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الدردشه").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_video') then
local UserId = Text:match('(%d+)/lock_video')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Video"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الفيديو").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_photo') then
local UserId = Text:match('(%d+)/lock_photo')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Photo"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الصور").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_username') then
local UserId = Text:match('(%d+)/lock_username')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:User:Name"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل المعرفات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_tags') then
local UserId = Text:match('(%d+)/lock_tags')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:hashtak"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التاك").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_bots') then
local UserId = Text:match('(%d+)/lock_bots')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Bot:kick"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل البوتات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fwd') then
local UserId = Text:match('(%d+)/lock_fwd')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:forward"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التوجيه").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_audio') then
local UserId = Text:match('(%d+)/lock_audio')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Audio"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الصوت").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_stikear') then
local UserId = Text:match('(%d+)/lock_stikear')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Sticker"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الملصقات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_phone') then
local UserId = Text:match('(%d+)/lock_phone')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Contact"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الجهات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_joine') then
local UserId = Text:match('(%d+)/lock_joine')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Join"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الدخول").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_addmem') then
local UserId = Text:match('(%d+)/lock_addmem')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:AddMempar"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الاضافه").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videonote') then
local UserId = Text:match('(%d+)/lock_videonote')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Unsupported"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل بصمه الفيديو").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_pin') then
local UserId = Text:match('(%d+)/lock_pin')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:lockpin"..ChatId,(luatele.getChatPinnedMessage(ChatId).id or true)) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التثبيت").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_tgservir') then
local UserId = Text:match('(%d+)/lock_tgservir')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:tagservr"..ChatId,true)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الاشعارات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_markdaun') then
local UserId = Text:match('(%d+)/lock_markdaun')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Markdaun"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الماركدون").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_edits') and data.Originators then
local UserId = Text:match('(%d+)/lock_edits')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:edit"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التعديل").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_games') then
local UserId = Text:match('(%d+)/lock_games')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:geam"..ChatId,"del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الالعاب").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_flood') then
local UserId = Text:match('(%d+)/lock_flood')
if tonumber(IdUser) == tonumber(UserId) then
Redis:hset(LiOn.."LiOn:Spam:Group:User"..ChatId ,"Spam:User","del")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التكرار").Lock, 'md', true, false, reply_markup)
end
end

if Text and Text:match('(%d+)/lock_linkkid') then
local UserId = Text:match('(%d+)/lock_linkkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Link"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الروابط").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_spamkid') then
local UserId = Text:match('(%d+)/lock_spamkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Spam"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الكلايش").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_keypordkid') then
local UserId = Text:match('(%d+)/lock_keypordkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Keyboard"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الكيبورد").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_voicekid') then
local UserId = Text:match('(%d+)/lock_voicekid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:vico"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الاغاني").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gifkid') then
local UserId = Text:match('(%d+)/lock_gifkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Animation"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل المتحركات").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fileskid') then
local UserId = Text:match('(%d+)/lock_fileskid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Document"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الملفات").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videokid') then
local UserId = Text:match('(%d+)/lock_videokid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Video"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الفيديو").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_photokid') then
local UserId = Text:match('(%d+)/lock_photokid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Photo"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الصور").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_usernamekid') then
local UserId = Text:match('(%d+)/lock_usernamekid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:User:Name"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل المعرفات").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_tagskid') then
local UserId = Text:match('(%d+)/lock_tagskid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:hashtak"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التاك").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fwdkid') then
local UserId = Text:match('(%d+)/lock_fwdkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:forward"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التوجيه").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_audiokid') then
local UserId = Text:match('(%d+)/lock_audiokid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Audio"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الصوت").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_stikearkid') then
local UserId = Text:match('(%d+)/lock_stikearkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Sticker"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الملصقات").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_phonekid') then
local UserId = Text:match('(%d+)/lock_phonekid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Contact"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الجهات").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videonotekid') then
local UserId = Text:match('(%d+)/lock_videonotekid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Unsupported"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل بصمه الفيديو").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_markdaunkid') then
local UserId = Text:match('(%d+)/lock_markdaunkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Markdaun"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الماركدون").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gameskid') then
local UserId = Text:match('(%d+)/lock_gameskid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:geam"..ChatId,"ked")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الالعاب").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_floodkid') then
local UserId = Text:match('(%d+)/lock_floodkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:hset(LiOn.."LiOn:Spam:Group:User"..ChatId ,"Spam:User","keed")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التكرار").lockKid, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/lock_linkktm') then
local UserId = Text:match('(%d+)/lock_linkktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Link"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الروابط").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_spamktm') then
local UserId = Text:match('(%d+)/lock_spamktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Spam"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الكلايش").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_keypordktm') then
local UserId = Text:match('(%d+)/lock_keypordktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Keyboard"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الكيبورد").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_voicektm') then
local UserId = Text:match('(%d+)/lock_voicektm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:vico"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الاغاني").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gifktm') then
local UserId = Text:match('(%d+)/lock_gifktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Animation"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل المتحركات").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_filesktm') then
local UserId = Text:match('(%d+)/lock_filesktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Document"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الملفات").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videoktm') then
local UserId = Text:match('(%d+)/lock_videoktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Video"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الفيديو").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_photoktm') then
local UserId = Text:match('(%d+)/lock_photoktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Photo"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الصور").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_usernamektm') then
local UserId = Text:match('(%d+)/lock_usernamektm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:User:Name"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل المعرفات").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_tagsktm') then
local UserId = Text:match('(%d+)/lock_tagsktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:hashtak"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التاك").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fwdktm') then
local UserId = Text:match('(%d+)/lock_fwdktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:forward"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التوجيه").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_audioktm') then
local UserId = Text:match('(%d+)/lock_audioktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Audio"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الصوت").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_stikearktm') then
local UserId = Text:match('(%d+)/lock_stikearktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Sticker"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الملصقات").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_phonektm') then
local UserId = Text:match('(%d+)/lock_phonektm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Contact"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الجهات").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videonotektm') then
local UserId = Text:match('(%d+)/lock_videonotektm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Unsupported"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل بصمه الفيديو").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_markdaunktm') then
local UserId = Text:match('(%d+)/lock_markdaunktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Markdaun"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الماركدون").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gamesktm') then
local UserId = Text:match('(%d+)/lock_gamesktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:geam"..ChatId,"ktm")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الالعاب").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_floodktm') then
local UserId = Text:match('(%d+)/lock_floodktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:hset(LiOn.."LiOn:Spam:Group:User"..ChatId ,"Spam:User","mute")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التكرار").lockKtm, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/lock_linkkick') then
local UserId = Text:match('(%d+)/lock_linkkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Link"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الروابط").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_spamkick') then
local UserId = Text:match('(%d+)/lock_spamkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Spam"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الكلايش").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_keypordkick') then
local UserId = Text:match('(%d+)/lock_keypordkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Keyboard"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الكيبورد").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_voicekick') then
local UserId = Text:match('(%d+)/lock_voicekick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:vico"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الاغاني").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gifkick') then
local UserId = Text:match('(%d+)/lock_gifkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Animation"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل المتحركات").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fileskick') then
local UserId = Text:match('(%d+)/lock_fileskick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Document"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الملفات").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videokick') then
local UserId = Text:match('(%d+)/lock_videokick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Video"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الفيديو").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_photokick') then
local UserId = Text:match('(%d+)/lock_photokick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Photo"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الصور").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_usernamekick') then
local UserId = Text:match('(%d+)/lock_usernamekick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:User:Name"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل المعرفات").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_tagskick') then
local UserId = Text:match('(%d+)/lock_tagskick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:hashtak"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التاك").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fwdkick') then
local UserId = Text:match('(%d+)/lock_fwdkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:forward"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التوجيه").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_audiokick') then
local UserId = Text:match('(%d+)/lock_audiokick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Audio"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الصوت").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_stikearkick') then
local UserId = Text:match('(%d+)/lock_stikearkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Sticker"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الملصقات").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_phonekick') then
local UserId = Text:match('(%d+)/lock_phonekick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Contact"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الجهات").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videonotekick') then
local UserId = Text:match('(%d+)/lock_videonotekick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Unsupported"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل بصمه الفيديو").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_markdaunkick') then
local UserId = Text:match('(%d+)/lock_markdaunkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:Markdaun"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الماركدون").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gameskick') then
local UserId = Text:match('(%d+)/lock_gameskick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:geam"..ChatId,"kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل الالعاب").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_floodkick') then
local UserId = Text:match('(%d+)/lock_floodkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:hset(LiOn.."LiOn:Spam:Group:User"..ChatId ,"Spam:User","kick")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفـل التكرار").lockKick, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/unmute_link') then
local UserId = Text:match('(%d+)/unmute_link')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Status:Link"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الرابط").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_welcome') then
local UserId = Text:match('(%d+)/unmute_welcome')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Status:Welcome"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الترحيب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_Id') then
local UserId = Text:match('(%d+)/unmute_Id')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Status:Id"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الايدي").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_IdPhoto') then
local UserId = Text:match('(%d+)/unmute_IdPhoto')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Status:IdPhoto"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الايدي بالصوره").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_ryple') then
local UserId = Text:match('(%d+)/unmute_ryple')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Status:Reply"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الردود").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_ryplesudo') then
local UserId = Text:match('(%d+)/unmute_ryplesudo')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Status:ReplySudo"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الردود العامه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_setadmib') then
local UserId = Text:match('(%d+)/unmute_setadmib')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Status:SetId"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الرفع").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_kickmembars') then
local UserId = Text:match('(%d+)/unmute_kickmembars')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Status:BanId"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الطرد - الحظر").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_games') then
local UserId = Text:match('(%d+)/unmute_games')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Status:Games"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر الالعاب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_kickme') then
local UserId = Text:match('(%d+)/unmute_kickme')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Status:KickMe"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تعطيل امر اطردني").unLock, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/mute_link') then
local UserId = Text:match('(%d+)/mute_link')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Status:Link"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الرابط").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_welcome') then
local UserId = Text:match('(%d+)/mute_welcome')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Status:Welcome"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الترحيب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_Id') then
local UserId = Text:match('(%d+)/mute_Id')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Status:Id"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الايدي").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_IdPhoto') then
local UserId = Text:match('(%d+)/mute_IdPhoto')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Status:IdPhoto"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الايدي بالصوره").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_ryple') then
local UserId = Text:match('(%d+)/mute_ryple')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Status:Reply"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الردود").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_ryplesudo') then
local UserId = Text:match('(%d+)/mute_ryplesudo')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Status:ReplySudo"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الردود العامه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_setadmib') then
local UserId = Text:match('(%d+)/mute_setadmib')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Status:SetId"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الرفع").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_kickmembars') then
local UserId = Text:match('(%d+)/mute_kickmembars')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Status:BanId"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الطرد - الحظر").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_games') then
local UserId = Text:match('(%d+)/mute_games')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Status:Games"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر الالعاب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_kickme') then
local UserId = Text:match('(%d+)/mute_kickme')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Status:KickMe"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'listallAddorrem'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم تفعيل امر اطردني").unLock, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/addAdmins@(.*)') then
local UserId = {Text:match('(%d+)/addAdmins@(.*)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
local Info_Members = luatele.getSupergroupMembers(UserId[2], "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
y = 0
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.Merotele == "chatMemberStatusCreator" then
Redis:sadd(LiOn.."LiOn:TheBasicsQ:Group"..UserId[2],v.member_id.user_id) 
x = x + 1
else
Redis:sadd(LiOn.."LiOn:Addictive:Group"..UserId[2],v.member_id.user_id) 
y = y + 1
end
end
end
luatele.answerCallbackQuery(data.id, "❆︙تم ترقيه {"..y.."} ادمنيه \n❆︙تم ترقية المالك ", true)
end
end
if Text and Text:match('(%d+)/LockAllGroup@(.*)') then
local UserId = {Text:match('(%d+)/LockAllGroup@(.*)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:set(LiOn.."LiOn:Lock:tagservrbot"..UserId[2],true)   
list ={"Lock:Bot:kick","Lock:User:Name","Lock:hashtak","Lock:Cmd","Lock:Link","Lock:forward","Lock:Keyboard","Lock:geam","Lock:Photo","Lock:Animation","Lock:Video","Lock:Audio","Lock:vico","Lock:Sticker","Lock:Document","Lock:Unsupported","Lock:Markdaun","Lock:Contact","Lock:Spam"}
for i,lock in pairs(list) do 
Redis:set(LiOn..'LiOn:'..lock..UserId[2],"del")    
end
luatele.answerCallbackQuery(data.id, "❆︙تم قفل جميع الاوامر بنجاح  ", true)
end
end
if Text and Text:match('/leftgroup@(.*)') then
local UserId = Text:match('/leftgroup@(.*)')
luatele.answerCallbackQuery(data.id, "❆︙تم مغادره البوت من المجموعه", true)
luatele.leaveChat(UserId)
end
if Text and Text:match('(%d+)/trtep@(.*)') then
local UserId = {Text:match('(%d+)/trtep@(.*)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'تعط','تعطيل الايدي بالصوره')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'تفع','تفعيل الايدي بالصوره')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'ا','ايدي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'م','رفع مميز')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'اد', 'رفع ادمن')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'مد','رفع مدير')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'من', 'رفع منشئ')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'اس', 'رفع منشئ اساسي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'مط','رفع مطور')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'تن','تنزيل الكل')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'ر','الرابط')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'رر','الردود')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'،،','مسح المكتومين')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'رد','اضف رد')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'غ','غنيلي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'رس','رسائلي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'ثانوي','رفع مطور ثانوي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'مس','مسح سحكاتي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'ن','نقاطي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'س','اسالني')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'ل','لغز')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'مع','معاني')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'ح','حزوره')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'رف','رفع القيود')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'الغ','الغاء حظر')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'ث','تثبيت')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'ك','كشف')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'تت','تاك')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'تك','تاك للكل')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'تغ','تغيير الايدي')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'تنز','تنزيل جميع الرتب')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'قق','قفل الاشعارات')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'فف','فتح الاشعارات')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'مر','مسح رد')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'امر','اضف امر')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'ش','شعر')
Redis:set(LiOn.."LiOn:Get:Reides:Commands:Group"..UserId[2]..":"..'غغ','اغنيه')
luatele.answerCallbackQuery(data.id, "❆︙تم ترتيب الاوامر  ", true)
end
end

if Text and Text:match('(%d+)/groupNumseteng//(%d+)') then
local UserId = {Text:match('(%d+)/groupNumseteng//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
return GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id)
end
end
if Text and Text:match('(%d+)/groupNum1//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum1//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).change_info) == 1 then
luatele.answerCallbackQuery(data.id, "❆︙تم تعطيل صلاحيه تغيير المعلومات", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,'❬ ❌ ❭',nil,nil,nil,nil,nil)
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,0, 0, 0, 0,0,0,1,0})
else
luatele.answerCallbackQuery(data.id, "❆︙تم تفعيل صلاحيه تغيير المعلومات", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,'❬ ✔️ ❭',nil,nil,nil,nil,nil)
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,1, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
end
end
end
if Text and Text:match('(%d+)/groupNum2//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum2//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).pin_messages) == 1 then
luatele.answerCallbackQuery(data.id, "❆︙تم تعطيل صلاحيه التثبيت", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,'❬ ❌ ❭',nil,nil,nil,nil)
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,0, GetAdminsNum(ChatId,UserId[2]).promote})
else
luatele.answerCallbackQuery(data.id, "❆︙تم تفعيل صلاحيه التثبيت", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,'❬ ✔️ ❭',nil,nil,nil,nil)
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,1, GetAdminsNum(ChatId,UserId[2]).promote})
end
end
end
if Text and Text:match('(%d+)/groupNum3//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum3//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).restrict_members) == 1 then
luatele.answerCallbackQuery(data.id, "❆︙تم تعطيل صلاحيه الحظر", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,'❬ ❌ ❭',nil,nil,nil)
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, 0 ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
else
luatele.answerCallbackQuery(data.id, "❆︙تم تفعيل صلاحيه الحظر", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,'❬ ✔️ ❭',nil,nil,nil)
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, 1 ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
end
end
end
if Text and Text:match('(%d+)/groupNum4//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum4//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).invite_users) == 1 then
luatele.answerCallbackQuery(data.id, "❆︙تم تعطيل صلاحيه دعوه المستخدمين", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,'❬ ❌ ❭',nil,nil)
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, 0, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
else
luatele.answerCallbackQuery(data.id, "❆︙تم تفعيل صلاحيه دعوه المستخدمين", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,'❬ ✔️ ❭',nil,nil)
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, 1, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
end
end
end
if Text and Text:match('(%d+)/groupNum5//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum5//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).delete_messages) == 1 then
luatele.answerCallbackQuery(data.id, "❆︙تم تعطيل صلاحيه مسح الرسائل", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,nil,'❬ ❌ ❭',nil)
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, 0, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
else
luatele.answerCallbackQuery(data.id, "❆︙تم تفعيل صلاحيه مسح الرسائل", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,nil,'❬ ✔️ ❭',nil)
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, 1, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
end
end
end
if Text and Text:match('(%d+)/groupNum6//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum6//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).promote) == 1 then
luatele.answerCallbackQuery(data.id, "❆︙تم تعطيل صلاحيه اضافه مشرفين", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,nil,nil,'❬ ❌ ❭')
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, 0})
else
luatele.answerCallbackQuery(data.id, "❆︙تم تفعيل صلاحيه اضافه مشرفين", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,nil,nil,'❬ ✔️ ❭')
luatele.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, 1})
end
end
end

if Text and Text:match('(%d+)/web') then
local UserId = Text:match('(%d+)/web')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).web == true then
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, false, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, true, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/info') then
local UserId = Text:match('(%d+)/info')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).info == true then
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, false, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, true, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/invite') then
local UserId = Text:match('(%d+)/invite')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).invite == true then
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, false, Getpermissions(ChatId).pin)
else
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, true, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/pin') then
local UserId = Text:match('(%d+)/pin')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).pin == true then
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, false)
else
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, true)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/media') then
local UserId = Text:match('(%d+)/media')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).media == true then
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, false, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, true, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/messges') then
local UserId = Text:match('(%d+)/messges')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).messges == true then
luatele.setChatPermissions(ChatId, false, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
luatele.setChatPermissions(ChatId, true, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/other') then
local UserId = Text:match('(%d+)/other')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).other == true then
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, false, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, true, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/polls') then
local UserId = Text:match('(%d+)/polls')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).polls == true then
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, false, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
luatele.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, true, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
end
if Text and Text:match('(%d+)/listallAddorrem') then
local UserId = Text:match('(%d+)/listallAddorrem')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = 'تعطيل الرابط', data = IdUser..'/'.. 'unmute_link'},{text = 'تفعيل الرابط', data = IdUser..'/'.. 'mute_link'},
},
{
{text = 'تعطيل الترحيب', data = IdUser..'/'.. 'unmute_welcome'},{text = 'تفعيل الترحيب', data = IdUser..'/'.. 'mute_welcome'},
},
{
{text = 'اتعطيل الايدي', data = IdUser..'/'.. 'unmute_Id'},{text = 'اتفعيل الايدي', data = IdUser..'/'.. 'mute_Id'},
},
{
{text = 'تعطيل الايدي بالصوره', data = IdUser..'/'.. 'unmute_IdPhoto'},{text = 'تفعيل الايدي بالصوره', data = IdUser..'/'.. 'mute_IdPhoto'},
},
{
{text = 'تعطيل الردود', data = IdUser..'/'.. 'unmute_ryple'},{text = 'تفعيل الردود', data = IdUser..'/'.. 'mute_ryple'},
},
{
{text = 'تعطيل الردود العامه', data = IdUser..'/'.. 'unmute_ryplesudo'},{text = 'تفعيل الردود العامه', data = IdUser..'/'.. 'mute_ryplesudo'},
},
{
{text = 'تعطيل الرفع', data = IdUser..'/'.. 'unmute_setadmib'},{text = 'تفعيل الرفع', data = IdUser..'/'.. 'mute_setadmib'},
},
{
{text = 'تعطيل الطرد', data = IdUser..'/'.. 'unmute_kickmembars'},{text = 'تفعيل الطرد', data = IdUser..'/'.. 'mute_kickmembars'},
},
{
{text = 'تعطيل الالعاب', data = IdUser..'/'.. 'unmute_games'},{text = 'تفعيل الالعاب', data = IdUser..'/'.. 'mute_games'},
},
{
{text = 'تعطيل اطردني', data = IdUser..'/'.. 'unmute_kickme'},{text = 'تفعيل اطردني', data = IdUser..'/'.. 'mute_kickme'},
},
{
{text = 'تعطيل التحشيش', data = IdUser..'/'.. 'unmute_thshesh'},{text = 'تفعيل التحشيش', data = IdUser..'/'.. 'mute_thshesh'},
},
{
{text = 'تعطيل الحظر المحدود', data = IdUser..'/'.. 'unmute_kicknum'},{text = 'تفعيل الحظر المحدود', data = IdUser..'/'.. 'mute_kicknum'},
},
{
{text = 'تعطيل الصيغ', data = IdUser..'/'.. 'unmute_seck'},{text = 'تفعيل الصيغ', data = IdUser..'/'.. 'mute_seck'},
},
{
{text = 'تعطيل غنيلي', data = IdUser..'/'.. 'unmute_knile'},{text = 'تفعيل غنيلي', data = IdUser..'/'.. 'mute_knile'},
},
{
{text = 'تعطيل الابراح', data = IdUser..'/'.. 'unmute_brj'},{text = 'تفعيل الابراج', data = IdUser..'/'.. 'mute_brj'},
},
{
{text = 'تعطيل الصوتيات', data = IdUser..'/'.. 'unmute_audio'},{text = 'تفعيل الصوتيات', data = IdUser..'/'.. 'mute_audio'},
},
{
{text = 'تعطيل الصوتيات العامه', data = IdUser..'/'.. 'unmute_audioall'},{text = 'تفعيل الصوتيات العامه', data = IdUser..'/'.. 'mute_audioall'},
},
{
{text = 'تعطيل تاك عام', data = IdUser..'/'.. 'unmute_takall'},{text = 'تفعيل تاك عام', data = IdUser..'/'.. 'mute_takall'},
},
{
{text = 'تعطيل التنبيه', data = IdUser..'/'.. 'unmute_namemy'},{text = 'تفعيل التنبيه', data = IdUser..'/'.. 'mute_namemy'},
},
{
{text = '{ القائمه الرئيسيه }', data = IdUser..'/helpall'},
},
{
{text = '- اخفاء الامر ', data ='/delAmr'}
},
}
}
return luatele.editMessageText(ChatId,Msg_id,'❆︙اوامر التفعيل والتعطيل ', 'md', false, false, reply_markup)
end
end
if Text and Text:match('(%d+)/NextSeting') then
local UserId = Text:match('(%d+)/NextSeting')
if tonumber(IdUser) == tonumber(UserId) then
local Text = "*\n❆︙اعدادات المجموعه ".."\n??︙علامة ال (✔️) تعني مقفول".."\n🔓︙علامة ال (❌) تعني مفتوح*"
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = GetSetieng(ChatId).lock_fwd, data = '&'},{text = 'التوجبه : ', data =IdUser..'/'.. 'Status_fwd'},
},
{
{text = GetSetieng(ChatId).lock_muse, data = '&'},{text = 'الصوت : ', data =IdUser..'/'.. 'Status_audio'},
},
{
{text = GetSetieng(ChatId).lock_ste, data = '&'},{text = 'الملصقات : ', data =IdUser..'/'.. 'Status_stikear'},
},
{
{text = GetSetieng(ChatId).lock_phon, data = '&'},{text = 'الجهات : ', data =IdUser..'/'.. 'Status_phone'},
},
{
{text = GetSetieng(ChatId).lock_join, data = '&'},{text = 'الدخول : ', data =IdUser..'/'.. 'Status_joine'},
},
{
{text = GetSetieng(ChatId).lock_add, data = '&'},{text = 'الاضافه : ', data =IdUser..'/'.. 'Status_addmem'},
},
{
{text = GetSetieng(ChatId).lock_self, data = '&'},{text = 'بصمه فيديو : ', data =IdUser..'/'.. 'Status_videonote'},
},
{
{text = GetSetieng(ChatId).lock_pin, data = '&'},{text = 'التثبيت : ', data =IdUser..'/'.. 'Status_pin'},
},
{
{text = GetSetieng(ChatId).lock_tagservr, data = '&'},{text = 'الاشعارات : ', data =IdUser..'/'.. 'Status_tgservir'},
},
{
{text = GetSetieng(ChatId).lock_mark, data = '&'},{text = 'الماركدون : ', data =IdUser..'/'.. 'Status_markdaun'},
},
{
{text = GetSetieng(ChatId).lock_edit, data = '&'},{text = 'التعديل : ', data =IdUser..'/'.. 'Status_edits'},
},
{
{text = GetSetieng(ChatId).lock_geam, data = '&'},{text = 'الالعاب : ', data =IdUser..'/'.. 'Status_games'},
},
{
{text = GetSetieng(ChatId).flood, data = '&'},{text = 'التكرار : ', data =IdUser..'/'.. 'Status_flood'},
},
{
{text = '- الرجوع ... ', data =IdUser..'/'.. 'NoNextSeting'}
},
{
{text = '{ القائمه الرئيسيه }', data = IdUser..'/helpall'},
},
{
{text = '- اخفاء الامر ', data ='/delAmr'}
},
}
}
luatele.editMessageText(ChatId,Msg_id,Text, 'md', false, false, reply_markup)
end
end
if Text and Text:match('(%d+)/NoNextSeting') then
local UserId = Text:match('(%d+)/NoNextSeting')
if tonumber(IdUser) == tonumber(UserId) then
local Text = "*\n❆︙اعدادات المجموعه ".."\n🔏︙علامة ال (✔️) تعني مقفول".."\n❆︙علامة ال (❌) تعني مفتوح*"
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = GetSetieng(ChatId).lock_links, data = '&'},{text = 'الروابط : ', data =IdUser..'/'.. 'Status_link'},
},
{
{text = GetSetieng(ChatId).lock_spam, data = '&'},{text = 'الكلايش : ', data =IdUser..'/'.. 'Status_spam'},
},
{
{text = GetSetieng(ChatId).lock_inlin, data = '&'},{text = 'الكيبورد : ', data =IdUser..'/'.. 'Status_keypord'},
},
{
{text = GetSetieng(ChatId).lock_vico, data = '&'},{text = 'الاغاني : ', data =IdUser..'/'.. 'Status_voice'},
},
{
{text = GetSetieng(ChatId).lock_gif, data = '&'},{text = 'المتحركه : ', data =IdUser..'/'.. 'Status_gif'},
},
{
{text = GetSetieng(ChatId).lock_file, data = '&'},{text = 'الملفات : ', data =IdUser..'/'.. 'Status_files'},
},
{
{text = GetSetieng(ChatId).lock_text, data = '&'},{text = 'الدردشه : ', data =IdUser..'/'.. 'Status_text'},
},
{
{text = GetSetieng(ChatId).lock_ved, data = '&'},{text = 'الفيديو : ', data =IdUser..'/'.. 'Status_video'},
},
{
{text = GetSetieng(ChatId).lock_photo, data = '&'},{text = 'الصور : ', data =IdUser..'/'.. 'Status_photo'},
},
{
{text = GetSetieng(ChatId).lock_user, data = '&'},{text = 'المعرفات : ', data =IdUser..'/'.. 'Status_username'},
},
{
{text = GetSetieng(ChatId).lock_hash, data = '&'},{text = 'التاك : ', data =IdUser..'/'.. 'Status_tags'},
},
{
{text = GetSetieng(ChatId).lock_bots, data = '&'},{text = 'البوتات : ', data =IdUser..'/'.. 'Status_bots'},
},
{
{text = GetSetieng(ChatId).farsia, data = '&'},{text = 'الفارسيه : ', data =IdUser..'/'.. 'Status_farsia'},
},
{
{text = GetSetieng(ChatId).tphlesh, data = '&'},{text = 'التفليش : ', data =IdUser..'/'.. 'Status_tphlesh'},
},
{
{text = GetSetieng(ChatId).alkfr, data = '&'},{text = 'الكفر : ', data =IdUser..'/'.. 'Status_alkfr'},
},
{
{text = GetSetieng(ChatId).alphsar, data = '&'},{text = 'الفشار : ', data =IdUser..'/'.. 'Status_alphsar'},
},
{
{text = '- التالي ... ', data =IdUser..'/'.. 'NextSeting'}
},
{
{text = '{ القائمه الرئيسيه }', data = IdUser..'/helpall'},
},
{
{text = '- اخفاء الامر ', data ='/delAmr'}
},
}
}
luatele.editMessageText(ChatId,Msg_id,Text, 'md', false, false, reply_markup)
end
end  

if Text and Text:match('/delAmr') then
local UserId = Text:match('/delAmr')
if data.Managers then
return luatele.deleteMessages(ChatId,{[1]= Msg_id})
end
end
if Text and Text:match('(%d+)/Status_link') then
local UserId = Text:match('(%d+)/Status_link')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الروابط', data =UserId..'/'.. 'lock_link'},{text = 'قفل الروابط بالكتم', data =UserId..'/'.. 'lock_linkktm'},
},
{
{text = 'قفل الروابط بالطرد', data =UserId..'/'.. 'lock_linkkick'},{text = 'قفل الروابط بالتقييد', data =UserId..'/'.. 'lock_linkkid'},
},
{
{text = 'فتح الروابط', data =UserId..'/'.. 'unlock_link'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الروابط", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_farsia') then
local UserId = Text:match('(%d+)/Status_farsia')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الفارسيه', data =UserId..'/'.. 'lock_Status_farsia'},
},
{
{text = 'فتح الفارسيه', data =UserId..'/'.. 'unlock_Status_farsia'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الفارسيه", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_tphlesh') then
local UserId = Text:match('(%d+)/Status_tphlesh')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التفليش', data =UserId..'/'.. 'lock_Status_tphlesh'},
},
{
{text = 'فتح التفليش', data =UserId..'/'.. 'unlock_Status_tphlesh'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر التفليش", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_alkfr') then
local UserId = Text:match('(%d+)/Status_alkfr')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الكفر', data =UserId..'/'.. 'lock_Status_alkfr'},
},
{
{text = 'فتح الكفر', data =UserId..'/'.. 'unlock_Status_alkfr'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الكفر", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_alphsar') then
local UserId = Text:match('(%d+)/Status_alphsar')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الفشار', data =UserId..'/'.. 'lock_Status_alphsar'},
},
{
{text = 'فتح الفشار', data =UserId..'/'.. 'unlock_Status_alphsar'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الفشار", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_spam') then
local UserId = Text:match('(%d+)/Status_spam')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الكلايش', data =UserId..'/'.. 'lock_spam'},{text = 'قفل الكلايش بالكتم', data =UserId..'/'.. 'lock_spamktm'},
},
{
{text = 'قفل الكلايش بالطرد', data =UserId..'/'.. 'lock_spamkick'},{text = 'قفل الكلايش بالتقييد', data =UserId..'/'.. 'lock_spamid'},
},
{
{text = 'فتح الكلايش', data =UserId..'/'.. 'unlock_spam'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الكلايش", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_keypord') then
local UserId = Text:match('(%d+)/Status_keypord')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الكيبورد', data =UserId..'/'.. 'lock_keypord'},{text = 'قفل الكيبورد بالكتم', data =UserId..'/'.. 'lock_keypordktm'},
},
{
{text = 'قفل الكيبورد بالطرد', data =UserId..'/'.. 'lock_keypordkick'},{text = 'قفل الكيبورد بالتقييد', data =UserId..'/'.. 'lock_keypordkid'},
},
{
{text = 'فتح الكيبورد', data =UserId..'/'.. 'unlock_keypord'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الكيبورد", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_voice') then
local UserId = Text:match('(%d+)/Status_voice')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الاغاني', data =UserId..'/'.. 'lock_voice'},{text = 'قفل الاغاني بالكتم', data =UserId..'/'.. 'lock_voicektm'},
},
{
{text = 'قفل الاغاني بالطرد', data =UserId..'/'.. 'lock_voicekick'},{text = 'قفل الاغاني بالتقييد', data =UserId..'/'.. 'lock_voicekid'},
},
{
{text = 'فتح الاغاني', data =UserId..'/'.. 'unlock_voice'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الاغاني", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_gif') then
local UserId = Text:match('(%d+)/Status_gif')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل المتحركه', data =UserId..'/'.. 'lock_gif'},{text = 'قفل المتحركه بالكتم', data =UserId..'/'.. 'lock_gifktm'},
},
{
{text = 'قفل المتحركه بالطرد', data =UserId..'/'.. 'lock_gifkick'},{text = 'قفل المتحركه بالتقييد', data =UserId..'/'.. 'lock_gifkid'},
},
{
{text = 'فتح المتحركه', data =UserId..'/'.. 'unlock_gif'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر المتحركات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_files') then
local UserId = Text:match('(%d+)/Status_files')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الملفات', data =UserId..'/'.. 'lock_files'},{text = 'قفل الملفات بالكتم', data =UserId..'/'.. 'lock_filesktm'},
},
{
{text = 'قفل النلفات بالطرد', data =UserId..'/'.. 'lock_fileskick'},{text = 'قفل الملقات بالتقييد', data =UserId..'/'.. 'lock_fileskid'},
},
{
{text = 'فتح الملقات', data =UserId..'/'.. 'unlock_files'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الملفات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_text') then
local UserId = Text:match('(%d+)/Status_text')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الدردشه', data =UserId..'/'.. 'lock_text'},
},
{
{text = 'فتح الدردشه', data =UserId..'/'.. 'unlock_text'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الدردشه", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_video') then
local UserId = Text:match('(%d+)/Status_video')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الفيديو', data =UserId..'/'.. 'lock_video'},{text = 'قفل الفيديو بالكتم', data =UserId..'/'.. 'lock_videoktm'},
},
{
{text = 'قفل الفيديو بالطرد', data =UserId..'/'.. 'lock_videokick'},{text = 'قفل الفيديو بالتقييد', data =UserId..'/'.. 'lock_videokid'},
},
{
{text = 'فتح الفيديو', data =UserId..'/'.. 'unlock_video'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الفيديو", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_photo') then
local UserId = Text:match('(%d+)/Status_photo')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الصور', data =UserId..'/'.. 'lock_photo'},{text = 'قفل الصور بالكتم', data =UserId..'/'.. 'lock_photoktm'},
},
{
{text = 'قفل الصور بالطرد', data =UserId..'/'.. 'lock_photokick'},{text = 'قفل الصور بالتقييد', data =UserId..'/'.. 'lock_photokid'},
},
{
{text = 'فتح الصور', data =UserId..'/'.. 'unlock_photo'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الصور", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_username') then
local UserId = Text:match('(%d+)/Status_username')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل المعرفات', data =UserId..'/'.. 'lock_username'},{text = 'قفل المعرفات بالكتم', data =UserId..'/'.. 'lock_usernamektm'},
},
{
{text = 'قفل المعرفات بالطرد', data =UserId..'/'.. 'lock_usernamekick'},{text = 'قفل المعرفات بالتقييد', data =UserId..'/'.. 'lock_usernamekid'},
},
{
{text = 'فتح المعرفات', data =UserId..'/'.. 'unlock_username'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر المعرفات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_tags') then
local UserId = Text:match('(%d+)/Status_tags')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التاك', data =UserId..'/'.. 'lock_tags'},{text = 'قفل التاك بالكتم', data =UserId..'/'.. 'lock_tagsktm'},
},
{
{text = 'قفل التاك بالطرد', data =UserId..'/'.. 'lock_tagskick'},{text = 'قفل التاك بالتقييد', data =UserId..'/'.. 'lock_tagskid'},
},
{
{text = 'فتح التاك', data =UserId..'/'.. 'unlock_tags'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر التاك", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_bots') then
local UserId = Text:match('(%d+)/Status_bots')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل البوتات', data =UserId..'/'.. 'lock_bots'},{text = 'قفل البوتات بالطرد', data =UserId..'/'.. 'lock_botskick'},
},
{
{text = 'فتح البوتات', data =UserId..'/'.. 'unlock_bots'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر البوتات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_fwd') then
local UserId = Text:match('(%d+)/Status_fwd')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التوجيه', data =UserId..'/'.. 'lock_fwd'},{text = 'قفل التوجيه بالكتم', data =UserId..'/'.. 'lock_fwdktm'},
},
{
{text = 'قفل التوجيه بالطرد', data =UserId..'/'.. 'lock_fwdkick'},{text = 'قفل التوجيه بالتقييد', data =UserId..'/'.. 'lock_fwdkid'},
},
{
{text = 'فتح التوجيه', data =UserId..'/'.. 'unlock_link'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر التوجيه", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_audio') then
local UserId = Text:match('(%d+)/Status_audio')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الصوت', data =UserId..'/'.. 'lock_audio'},{text = 'قفل الصوت بالكتم', data =UserId..'/'.. 'lock_audioktm'},
},
{
{text = 'قفل الصوت بالطرد', data =UserId..'/'.. 'lock_audiokick'},{text = 'قفل الصوت بالتقييد', data =UserId..'/'.. 'lock_audiokid'},
},
{
{text = 'فتح الصوت', data =UserId..'/'.. 'unlock_audio'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الصوت", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_stikear') then
local UserId = Text:match('(%d+)/Status_stikear')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الملصقات', data =UserId..'/'.. 'lock_stikear'},{text = 'قفل الملصقات بالكتم', data =UserId..'/'.. 'lock_stikearktm'},
},
{
{text = 'قفل الملصقات بالطرد', data =UserId..'/'.. 'lock_stikearkick'},{text = 'قفل الملصقات بالتقييد', data =UserId..'/'.. 'lock_stikearkid'},
},
{
{text = 'فتح الملصقات', data =UserId..'/'.. 'unlock_stikear'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الملصقات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_phone') then
local UserId = Text:match('(%d+)/Status_phone')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الجهات', data =UserId..'/'.. 'lock_phone'},{text = 'قفل الجهات بالكتم', data =UserId..'/'.. 'lock_phonektm'},
},
{
{text = 'قفل الجهات بالطرد', data =UserId..'/'.. 'lock_phonekick'},{text = 'قفل الجهات بالتقييد', data =UserId..'/'.. 'lock_phonekid'},
},
{
{text = 'فتح الجهات', data =UserId..'/'.. 'unlock_phone'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الجهات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_joine') then
local UserId = Text:match('(%d+)/Status_joine')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الدخول', data =UserId..'/'.. 'lock_joine'},
},
{
{text = 'فتح الدخول', data =UserId..'/'.. 'unlock_joine'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الدخول", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_addmem') then
local UserId = Text:match('(%d+)/Status_addmem')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الاضافه', data =UserId..'/'.. 'lock_addmem'},
},
{
{text = 'فتح الاضافه', data =UserId..'/'.. 'unlock_addmem'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الاضافه", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_videonote') then
local UserId = Text:match('(%d+)/Status_videonote')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل السيلفي', data =UserId..'/'.. 'lock_videonote'},{text = 'قفل السيلفي بالكتم', data =UserId..'/'.. 'lock_videonotektm'},
},
{
{text = 'قفل السيلفي بالطرد', data =UserId..'/'.. 'lock_videonotekick'},{text = 'قفل السيلفي بالتقييد', data =UserId..'/'.. 'lock_videonotekid'},
},
{
{text = 'فتح السيلفي', data =UserId..'/'.. 'unlock_videonote'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر بصمه الفيديو", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_pin') then
local UserId = Text:match('(%d+)/Status_pin')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التثبيت', data =UserId..'/'.. 'lock_pin'},
},
{
{text = 'فتح التثبيت', data =UserId..'/'.. 'unlock_pin'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر التثبيت", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_tgservir') then
local UserId = Text:match('(%d+)/Status_tgservir')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الاشعارات', data =UserId..'/'.. 'lock_tgservir'},
},
{
{text = 'فتح الاشعارات', data =UserId..'/'.. 'unlock_tgservir'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الاشعارات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_markdaun') then
local UserId = Text:match('(%d+)/Status_markdaun')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الماركداون', data =UserId..'/'.. 'lock_markdaun'},{text = 'قفل الماركداون بالكتم', data =UserId..'/'.. 'lock_markdaunktm'},
},
{
{text = 'قفل الماركداون بالطرد', data =UserId..'/'.. 'lock_markdaunkick'},{text = 'قفل الماركداون بالتقييد', data =UserId..'/'.. 'lock_markdaunkid'},
},
{
{text = 'فتح الماركداون', data =UserId..'/'.. 'unlock_markdaun'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الماركدون", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_edits') then
local UserId = Text:match('(%d+)/Status_edits')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التعديل', data =UserId..'/'.. 'lock_edits'},
},
{
{text = 'فتح التعديل', data =UserId..'/'.. 'unlock_edits'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر التعديل", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_games') then
local UserId = Text:match('(%d+)/Status_games')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الالعاب', data =UserId..'/'.. 'lock_games'},{text = 'قفل الالعاب بالكتم', data =UserId..'/'.. 'lock_gamesktm'},
},
{
{text = 'قفل الالعاب بالطرد', data =UserId..'/'.. 'lock_gameskick'},{text = 'قفل الالعاب بالتقييد', data =UserId..'/'.. 'lock_gameskid'},
},
{
{text = 'فتح الالعاب', data =UserId..'/'.. 'unlock_games'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر الالعاب", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_flood') then
local UserId = Text:match('(%d+)/Status_flood')
if tonumber(IdUser) == tonumber(UserId) then

local reply_markup = luatele.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التكرار', data =UserId..'/'.. 'lock_flood'},{text = 'قفل التكرار بالكتم', data =UserId..'/'.. 'lock_floodktm'},
},
{
{text = 'قفل التكرار بالطرد', data =UserId..'/'.. 'lock_floodkick'},{text = 'قفل التكرار بالتقييد', data =UserId..'/'.. 'lock_floodkid'},
},
{
{text = 'فتح التكرار', data =UserId..'/'.. 'unlock_flood'},
},
{
{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙عليك اختيار نوع القفل او الفتح على امر التكرار", 'md', true, false, reply_markup)
end



elseif Text and Text:match('(%d+)/unlock_link') then
local UserId = Text:match('(%d+)/unlock_link')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Link"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الروابط").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_Status_farsia') then
local UserId = Text:match('(%d+)/unlock_Status_farsia')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:farsia"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الفارسيخ").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_Status_tphlesh') then
local UserId = Text:match('(%d+)/unlock_Status_tphlesh')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:tphlesh"..ChatId)  
Redis:del(LiOn.."LiOn:Status:IdPhoto"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح التفليش").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_Status_alkfr') then
local UserId = Text:match('(%d+)/unlock_Status_alkfr')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:alkfr"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الكفر").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_Status_alphsar') then
local UserId = Text:match('(%d+)/unlock_Status_alphsar')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:phshar"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الفشار").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_Status_farsia') then
local UserId = Text:match('(%d+)/lock_Status_farsia')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:farsia"..ChatId,true)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفل الفارسيخ").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_Status_tphlesh') and data.Managers then
local UserId = Text:match('(%d+)/lock_Status_tphlesh')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:tphlesh"..ChatId,true)
Redis:set(LiOn.."LiOn:Status:IdPhoto"..ChatId,true)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفل التفليش").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_Status_alkfr') then
local UserId = Text:match('(%d+)/lock_Status_alkfr')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:alkfr"..ChatId,true)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفل الكفر").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_Status_alphsar') then
local UserId = Text:match('(%d+)/lock_Status_alphsar')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(LiOn.."LiOn:Lock:phshar"..ChatId,true)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم قفل الفشار").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_spam') then
local UserId = Text:match('(%d+)/unlock_spam')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Spam"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الكلايش").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_keypord') then
local UserId = Text:match('(%d+)/unlock_keypord')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Keyboard"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الكيبورد").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_voice') then
local UserId = Text:match('(%d+)/unlock_voice')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:vico"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الاغاني").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_gif') then
local UserId = Text:match('(%d+)/unlock_gif')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Animation"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح المتحركات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_files') then
local UserId = Text:match('(%d+)/unlock_files')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Document"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الملفات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_text') then
local UserId = Text:match('(%d+)/unlock_text')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:text"..ChatId,true) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الدردشه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_video') then
local UserId = Text:match('(%d+)/unlock_video')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Video"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الفيديو").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_photo') then
local UserId = Text:match('(%d+)/unlock_photo')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Photo"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الصور").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_username') then
local UserId = Text:match('(%d+)/unlock_username')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:User:Name"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح المعرفات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_tags') then
local UserId = Text:match('(%d+)/unlock_tags')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:hashtak"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح التاك").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_bots') then
local UserId = Text:match('(%d+)/unlock_bots')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Bot:kick"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح البوتات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_fwd') then
local UserId = Text:match('(%d+)/unlock_fwd')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:forward"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح التوجيه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_audio') then
local UserId = Text:match('(%d+)/unlock_audio')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Audio"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الصوت").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_stikear') then
local UserId = Text:match('(%d+)/unlock_stikear')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Sticker"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الملصقات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_phone') then
local UserId = Text:match('(%d+)/unlock_phone')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Contact"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الجهات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_joine') then
local UserId = Text:match('(%d+)/unlock_joine')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Join"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الدخول").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_addmem') then
local UserId = Text:match('(%d+)/unlock_addmem')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:AddMempar"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الاضافه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_videonote') then
local UserId = Text:match('(%d+)/unlock_videonote')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Unsupported"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح بصمه الفيديو").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_pin') then
local UserId = Text:match('(%d+)/unlock_pin')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:lockpin"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح التثبيت").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_tgservir') then
local UserId = Text:match('(%d+)/unlock_tgservir')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:tagservr"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الاشعارات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_markdaun') then
local UserId = Text:match('(%d+)/unlock_markdaun')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:Markdaun"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الماركدون").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_edits') then
local UserId = Text:match('(%d+)/unlock_edits')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:edit"..ChatId) 
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح التعديل").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_games') then
local UserId = Text:match('(%d+)/unlock_games')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Lock:geam"..ChatId)  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح الالعاب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_flood') then
local UserId = Text:match('(%d+)/unlock_flood')
if tonumber(IdUser) == tonumber(UserId) then
Redis:hdel(LiOn.."LiOn:Spam:Group:User"..ChatId ,"Spam:User")  
local reply_markup = luatele.replyMarkup{type = 'inline',data = {{{text = '- رجوع', data =UserId..'/'.. 'NoNextSeting'},},}}
luatele.editMessageText(ChatId,Msg_id,Reply_Status(IdUser,"❆︙تم فتح التكرار").unLock, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/backbio') then
local UserId = Text:match('(%d+)/backbio')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- ذكر', data = IdUser..'/bioold'},{text = '- انثى', data = IdUser..'/biobnt'},
},
}
}
return luatele.editMessageText(ChatId,Msg_id,"اختر النبذه الي تريدها", 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/bioold') then
local UserId = Text:match('(%d+)/bioold')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- مره اخره', data = UserId..'/bioold'},
},
{
{text = 'رجوع', data = UserId..'/backbio'},
},
}
}
local list = {
"ڈﺑـلٳﭑن قلبـﯥ-ﻣٳﭑ ﭔقى-حـﺳ-بہ فرٰﺣۿۂء☹️💗۶",

"الرجولـۿ صعبـۿ جـداً على شـخص كُل فِكرۿ النـساء ..",

"تشوفني انحني بس من اشدن قيطان الحذاء",

"“ثٰڪـِٰﯿلـِكـم  يمـِي࣮ٓ نفٰـِﺂﺂخهہ ☻",

"التظاهر باللاشيء ، شيء عظيم ،🧡💧",

"ٰ✹ﺂﻧﻋزﺈلي ﯛﺑڪړهۂ ﺂلآخټلٳط ﺑﺂﺈلنآﺈښء.",

"ولاا عدڪم گڪلب يستاههل ۽حساسي ✗̯͡”㋡",

"دٖدٱﺂرٖر ۦَٰ ٱﺂڶو໑ڴـڪت ۦَٰ و໑ڴـڪبرٖرت ۦَٰ ٱﺂڶجٓجٱﺂنت ۦَٰ حٓحصٖصن ۦَٰ  ۦَٰ 🌝🌸",

"انـآ ﭑبسٓـَط ﻣﻣﭑ تت֞وقعٰ ، و ﭑﻋـ࣮قـٓد مما تظـن ٰ ✨🤞🏿 ء",

"ﺂﺂنـٰـٓﺂﺂ ولـِبـِٓلـﯝک ـﺂصحٓـٰﺂﺂب ㋡!!   ᴖ̈ ℡",

"ﭑنا ﺣﻟﻣﮧﭑً ࢦࢦجميع ، لاڰنې ࢦآ ﭑحلم ب ﭑﺣﮧډ :",

"ثكيلكم قيطان بحذائي ما اشده",

"راسي ع السمة ورجلي بالارض",

"ليس الاعمى لا يرى بل انتم لستم موجودين",

"َ، ⁞ گلُِڪم آوُۿـٌــٰٰـٌآم أآلُِڪتـٌــٰٰـٌرٍوُنيۿ ᴖ̈،🚸 ☻",

"̶عا̶ق̶ل ̶ب̶س ̶و̶كت ̶ا̶ل̶ص̶دك ̶ا̶خ̶ل̶ي ̶ا̶ل̶ش̶ي̶ط̶ا̶ن ̶ي̶ذ̶̶ك̶ر ̶ا̶لله",

"• ۶ـظـَيمين ڪحَـذآئي تـمامـّﺂ،!🌝☘️",

"-ٲﮪﮪـﯛވاي شخخصيـات بـلتلـي ! ۦ بـس بلـواقـۃ؏ زبـالـهۃ☻🖖🏿ۦ ۧ ۦ،",

"-’ ﺂݪحيـٱة ڝعبـۿۃ ݪڪـڼ ݪيـښټ ﻣښٺحـيݪۿۂ   𖤍ْ.",

"ﭠ̶ﺷ̶ﯙ̶ﻓ̶ﻧ̶ي̶̶ﻣ̶ﺷ̶ﺧ̴ـ̶ﺑ̶ط̶ﻋ̶ﻟ̶ى̶̶ﺂ̶ﻟ̶ڳ̶لأم̶ ﻟ̶ﯾ̶ش ̶̶تـ̶ﺣ̶ﺂ̶ﯙ̶ل̶ﭠ̶ﭰرا",

"لسَست ﭑعمـَئ ولكن لاَيُهمنْيَ مـﭑ يَحدثْ ♥️",

"• ﭑڪتفائي بنفسي حاجـهہ عـضيـٰمهہ .👼🏻💗",

"قۆي وﺟميݪ ۆبڕيئ  🚶‍♀ᝰ",

"سيٰئ جـٰداً ﻻ اطيٰق وﻻ اطـﺂﺂق 🙂💘』"
}
local bioold = list[math.random(#list)]
return luatele.editMessageText(ChatId,Msg_id,"["..bioold.."]", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/biobnt') then
local UserId = Text:match('(%d+)/biobnt')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = 'inline',
data = {
{
{text = '- مره اخرى', data = UserId..'/biobnt'},
},
{
{text = 'رجوع', data = UserId..'/backbio'},
},
}
}
local list = {
"كلآمي يمثلني وفهمك يمثلك !",

"عش الحياه لنفسك ليس لأحد آخر ♡",

"الذكرېٓات اكبࢪ لعنۿـۃ  بعـد الغېٓاب 🧘🏻‍♀💘",

"ݛقٖـيـقٖـٰهہ ة آڼۨـٰﭑ ڪۨہ فـٰرﭑاشـٰهۃ طـٰﭑئرهۃ  💘،",

"•تددري بغغـيبتـڪڪ ششنوو صصـار ؟",

"• ע زلـت تـඋـاول ولازلـت ﭑنتضر 🧸.💗🔗",

"مُمنفردة عن ﭑلعالم ، مُختلفةة لا ﭑشبه آحد ،✨🎧 ء !",

"مهۿما ﺂنترکڪت ـَﺂيـۧدي آِنيـِــٰﮧمـَٓو بحۧـَﺂﭼـٰ̲ه ـَﺂحـٰ̲د 🙂🚶‍♀",

"ע ﺂﺂقـِٓبل بالهز͡يمهہ وأنّ ڪٓدتُ ﺂﺂسقُـ࣮ٓط",

"هـادئه ڪِٰ ساعاتِ الليـل المتأخرهۃٓه 彡💘",

"﮼ﭑﻧﭑﭑ ﺳيئهـٰۃ ﯛﻣحد يـٰستـٰاهـٰل ﻟـٰطـٰفي  𖤍 #~",

"ﭰويھﮧ وﻣمخيفه ڪضحڪه صداﻣم في ــألمحڪمه 🔥🙂",

"- ‏خسـارة البعـض ، مڪسب لصحتـكك النفـسـيـہۦة☹️💘✨",

"• ‏୪ ټـَرآﭰـبنـِﯤ ۏإنټ ﺂبټعدټ ﺂِﻧﹷٰـٰا ‏୪ اټأﺛﺮ",

"آذآ مكدڕت آسنَدک ـآطيَح ويآک ✨!",

"- خخلاص ءنا ! مو مهمم ععد ءححد ♡",

"ينتقدوني وبدقه 370HD يقلدوني",

"ﭑنـٰآ لسټ مـﻼڪـٰاً ﭑﻧﭑ ڜيطۃٓﭑنهْہ ۛ بضمـۑْڔ ، 👸🏻💗",

"⁞ ݥاِخِذۿُ خـۧﺂوۿ ععَـۧليَكم ᴖ̈💗",

"ﻣڪټفيه ﺑﺣـاﻟـي ﯢﻣـاﻟي ٲﺣد ، 🖤🌈",

"ﺎﻧﻧﭑ الجمـٰيـٰلهۃ ۉهـٰن ﺑﻘﭑيـٰﭑ ﺟﺟﻣﭑلي -💘.",

"وهِيٓ هآي ﭑلمآيلوحَكك لآزم يشٓمر ععليكك🖤",

"- ــِلا ، يعلِݥوڹ  ݥآبداخݪيِ ، ويتحدثوڹ  عني ،",

"مـٰثل بـٓﯛشـِنڪـِٓي ڪلـڪـٰم تـٰرجفون منـٰي ᴖ̈ ℡",

"قلدني ، لڪن بطريقهۂ جيده !",

"ﻧﻘـٰﭑﭑشـٰي ڪلمـٓتيـٰن ﭑٱلثالثـٰهۃ بـٰﻟﯛڪك ، ♡☻ ،",

"⊱#ۧﺂٌنـٰ̲ـيٌَ بـٰ̲زَۧﻭ୭ديٌَ ﺂٌٰرتـۖـٰ̲فـَع ݥـٰحـۖـٰ̲د يۧـعـَـُلينـۧي",

"- ﻵ ﺗـۤحـﭑﯛل ﺗﯛﺻلي ﺂنـﺂ ﯛ ﺂلقـمهۂ ربـع ،!🤤💚"
}
local biobnt = list[math.random(#list)]
return luatele.editMessageText(ChatId,Msg_id,"["..biobnt.."]", 'md', true, false, reply_markup)
end
end

if Text and Text:match('(%d+)/Zhrfaar') then
local UserId = Text:match('(%d+)/Zhrfaar')
if tonumber(IdUser) == tonumber(UserId) then
Redis:setex(LiOn..":ZhrfNow:ar"..UserId,500,true)
luatele.editMessageText(ChatId,Msg_id,"❆︙ارسل الاسم بالعربي", 'md', false)
end
elseif Text and Text:match('(%d+)/Zhrfaen') then
local UserId = Text:match('(%d+)/Zhrfaen')
if tonumber(IdUser) == tonumber(UserId) then
Redis:setex(LiOn..":ZhrfNow:en"..UserId,500,true)
luatele.editMessageText(ChatId,Msg_id,"❆︙ارسل الاسم بالانكليزي", 'md', false)
end
end
if Text and Text:match('^(%d+)/back_lists$') then
local UserId = Text:match('^(%d+)/back_lists$')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="المطورين الاساسيين",data=UserId..'/redis:Devall'},
},
{
{text="المكتومين عام",data=UserId..'/KtmAll'},{text="المحظورين عام",data=UserId..'/BanAll'},
},
{
{text="المطورين الثانويين",data=UserId..'/DevelopersQ'},{text="المطورين",data=UserId..'/Developers'},
},
{
{text="المالكين",data=UserId..'/TheBasicsQ'},{text="المنشئين الاساسيين",data=UserId..'/TheBasics'},
},
{
{text="المنشئين",data=UserId..'/Originators'},{text="المدراء",data=UserId..'/Managers'},
},
{
{text="الادمنيه",data=UserId..'/Addictive'},{text="المميزين",data=UserId..'/DelDistinguished'},
},
{
{text="المكتومين",data=UserId..'/SilentGroupGroup'},{text="المحظورين",data=UserId..'/BanGroup'},
},
{
{text = "- اخفاء الامر ", data =UserId.."/delAmr"}
},
}
}
return luatele.editMessageText(ChatId,Msg_id,"*⌯︙اختر احدى القوائم لمسحها*", "md",true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/DevelopersQ') and data.ControllerBot then
local UserId = Text:match('(%d+)/DevelopersQ')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:DevelopersQ:Groups") 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح مطورين الثانوين من البوت", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Developers') and data.DevelopersQ then
local UserId = Text:match('(%d+)/Developers')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Developers:Groups") 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح مطورين البوت", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/redis:Devall') and data.ControllerBot then
local UserId = Text:match('(%d+)/redis:Devall')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:ControlAll:Groups") 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح مطورين الاساسيين", "md",true, false, reply_markup)
end

elseif Text and Text:match('(%d+)/TheBasicsQ') and data.Developers then
local UserId = Text:match('(%d+)/TheBasicsQ')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:TheBasicsQ:Group"..ChatId) 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح االمالكين", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/MalekAsase') and data.Developers then
local UserId = Text:match('(%d+)/MalekAsase')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:MalekAsase:Group"..ChatId) 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح االمالكين", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/TheBasics') and data.TheBasicsQ then
local UserId = Text:match('(%d+)/TheBasics')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:TheBasics:Group"..ChatId) 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح المنشئين الاساسيين", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Originators') and data.TheBasics then
local UserId = Text:match('(%d+)/Originators')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Originators:Group"..ChatId) 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح منشئين المجموعه", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Managers') and data.Originators then
local UserId = Text:match('(%d+)/Managers')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Managers:Group"..ChatId) 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح المدراء", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Addictive') and data.Managers then
local UserId = Text:match('(%d+)/Addictive')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Addictive:Group"..ChatId) 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح ادمنيه المجموعه", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/DelDistinguished') then
local UserId = Text:match('(%d+)/DelDistinguished')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:Distinguished:Group"..ChatId) 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح المميزين", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/KtmAll') and data.ControllerBot then
local UserId = Text:match('(%d+)/KtmAll')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:KtmAll:Groups") 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح المكتومين عام", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/BanAll') and data.ControllerBot then
local UserId = Text:match('(%d+)/BanAll')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:BanAll:Groups") 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح المحظورين عام", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/BanGroup') and data.Addictive then
local UserId = Text:match('(%d+)/BanGroup')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:BanGroup:Group"..ChatId) 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح المحظورين", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/SilentGroupGroup') and data.Addictive then
local UserId = Text:match('(%d+)/SilentGroupGroup')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(LiOn.."LiOn:SilentGroup:Group"..ChatId) 
local reply_markup = luatele.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم",data=UserId..'/back_lists'},
},
}
}
luatele.editMessageText(ChatId,Msg_id,"❆︙تم مسح المكتومين", "md",true, false, reply_markup)
end
end

end
end


Merotele.run(CallBackLua)
 





